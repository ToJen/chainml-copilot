{"id": "673b5c37bbaf", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nGovernance\nOverview\nProcess\nBeginners Guide to Voting\nGlossary\nAdversarial Circumstances\nChangelog\nResearch\nResources\nGlossary\n\u0000\nGovernance\nAdversarial CircumstancesHelpful?\nOn this page\nAdversarial Cir cumstances\nThis document explores some adversarial circumstances which Uniswap Governance may encounter in the future. Its goal is\nto help those interested in Uniswap Governance understand the reasoning behind some of its design, its limitations, and\npotential avenues for growth.", "metadata": {"page_number": 1, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f03ce946feda", "text": "This document explores some adversarial circumstances which Uniswap Governance may encounter in the future. Its goal is\nto help those interested in Uniswap Governance understand the reasoning behind some of its design, its limitations, and\npotential avenues for growth.\nScenario 1  \nA good faith proposal is brought to vote but is found to have an exploitable edge case. A bad faith actor uses a series of DeFi\nleveraging strategies to quickly buy enough UNI during the voting period to sway the vote in favor of the proposal, passing\nit and exploiting the vulnerability .\nCircumvention \nUNI voting power must be delegated to an address either entirely before a proposal has been submitted or during the\nproposal delay period. For now , the proposal delay is set to one block, which is about 15 seconds. A proposal delay of one\nblock leaves no opportunity for a third party to find an exploitable edge case and opportunistically purchase uni, self\ndelegate and sway the vote.", "metadata": {"page_number": 1, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b9ac1c4c5fbd", "text": "block leaves no opportunity for a third party to find an exploitable edge case and opportunistically purchase uni, self\ndelegate and sway the vote.\nIn the future, Uniswap Governance may vote to increase the proposal delay . While there are obvious benefits to an increased\nproposal delay , It may introduce some potential adverse outcomes such as opportunistic edge case exploitation.", "metadata": {"page_number": 1, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "85544ef7d41a", "text": "Scenario 2  \nA bad faith proposal is crafted and submitted to vote, which is unambiguously not in the best interest of Uniswap\nGovernance. Multiple parties collude ahead of time to corner the UNI market to force the proposal through, gain access to\nthe UNI reserves, and drain the funds.\nCircumvention \nSince UNI is a freely tradable asset, anyone can attempt a governance takeover via market buying. That said, to force-pass a\nbad faith vote would require a minimum of 40 million UNI. If not outright impossible, this amount would be prohibitively\nexpensive and likely cost more when accounting for price fluctuation than the net gain from the attack.\nIf a group somehow achieved a bad faith takeover , Timelock's delay would give af fected agents time to withdraw their assets\nfrom the protocol. This would also be an opportunity to fork the protocol, a path that would likely be taken by the remaining\ngood-faith actors.\nScenario 3", "metadata": {"page_number": 2, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1f56acddce8d", "text": "from the protocol. This would also be an opportunity to fork the protocol, a path that would likely be taken by the remaining\ngood-faith actors.\nScenario 3  \nA single party uses a flash loan to push through a proposal, potentially creating a pseudo-DDOS attack by spamming\ngovernance with proposals and preventing ef fective use.\nCircumvention \nA delegated balance of 2.5 million UNI is required to submit a vote, but the balance check is set exactly one block in the\npast. This prevents any flash loan proposals from being created, as flash loans cannot execute outside of a single block.\nThe proposer must also maintain a minimum balance of 2.5 million UNI throughout the voting period, or anyone may cancel\nthe proposal. This balance maintenance check prevents many highly leveraged proposal techniques that may span several\nblocks.\nScenario 4  \nA bad faith proposal is created, which will genuinely incentivize bad faith voting.", "metadata": {"page_number": 2, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fe310b520be5", "text": "the proposal. This balance maintenance check prevents many highly leveraged proposal techniques that may span several\nblocks.\nScenario 4  \nA bad faith proposal is created, which will genuinely incentivize bad faith voting.\nExample: \"The treasury will be drained. Any votes in favor will be sent the balance of the treasury . Any votes opposed will\nbe locked from the funds of the treasury .\"\nCircumvention \nNo mechanism explicitly prevents this type of scenario, but market forces disincentivize it.\nBecause the treasury is comprised of UNI tokens exclusively , the market would react appropriately if a vote were to pass\nthat would jeopardize the economic viability of Uniswap Governance and the UNI token. By the time the vote would pass,\nUNI's price would have fallen so low as to make the attack fruitless.\nUNI acting as the only asset of the governance treasury disincentivizes this form of bad faith voting. Uniswap Governance", "metadata": {"page_number": 2, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2e7dbf8c7b27", "text": "UNI's price would have fallen so low as to make the attack fruitless.\nUNI acting as the only asset of the governance treasury disincentivizes this form of bad faith voting. Uniswap Governance\nmay choose in the future to diversify governance assets. While there are many benefits to this path, some fringe possibilities\nsuch as incentivized bad faith voting may appear .\nEdit this page\nHelpful?\nPrevious\nGlossary\nNext\nChangelog", "metadata": {"page_number": 2, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b7e35b565d3a", "text": "Scenario 1\nCircumvention\nScenario 2\nCircumvention\nScenario 3\nCircumvention\nScenario 4\nCircumvention\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 3, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e9109310660", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nOverview\nTechnical Reference\nSignatureT ransfer\nAllowanceT ransfer\nV2 Protocol\nV1 Protocol\n\u0000\nPermit2\nTechnical Reference\nAllowanceT ransferHelpful?\nOn this page\nAllowanceT ransfer\nSour ce Code\nOverview  \nThe main entry points on this contract are:\napprove", "metadata": {"page_number": 4, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eb711149d4eb", "text": "Technical Reference\nAllowanceT ransferHelpful?\nOn this page\nAllowanceT ransfer\nSour ce Code\nOverview  \nThe main entry points on this contract are:\napprove\nUse approve when you do not want to set token permissions through signature validation.\npermit\nUse permit when you do want to set token permissions through signature validation.\ntransferFrom\nUse transferFrom when you want to transfer a token and have the necessary permissions to do so.\nFunctions", "metadata": {"page_number": 4, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a426c037a1b8", "text": "approve \nFunction Signatur e\nfunction  approve(address token, address spender , uint160 amount, uint48 expiration ) external\nCopy\nParameters\ntoken - the token address to approve\nspender - the spender address to approve\namount - the approved amount of the token, type(uint160).max  is treated as an unlimited allowance\nexpiration - the timestamp at which the approval is no longer valid, passing in 0 will expire the permissions at\nblock.timestamp\nSingle permit \nFunction Signatur e\nfunction  permit(address owner, PermitSingle memory permitSingle , bytes calldata  signature ) external ;\nCopy\nParameters\nowner - the address of the token\u2019 s owner\npermitSingle - constructed with the following:\nstruct PermitSingle  {\n        // the permit data for a single token allowance\n        PermitDetails details ;", "metadata": {"page_number": 5, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0dd27704ef98", "text": "Parameters\nowner - the address of the token\u2019 s owner\npermitSingle - constructed with the following:\nstruct PermitSingle  {\n        // the permit data for a single token allowance\n        PermitDetails details ;\n        // address permissioned on the allowed tokens\n        address spender ;\n        // deadline on the permit signature\n        uint256 sigDeadline ;\n    }\nstruct PermitDetails  {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration ;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\nCopy", "metadata": {"page_number": 5, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2a67b9dd1780", "text": "uint48 expiration ;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\nCopy\nsignature - the signature over the permit data. Supports EOA  signatures, compact signatures defined by EIP-2098 , and\ncontract signatures defined by EIP-1271\nBatched permit \nFunction Signatur e\nfunction  permit(address owner, PermitBatch memory permitBatch , bytes calldata  signature ) external ;\nCopy\nParameters", "metadata": {"page_number": 5, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c2d261a67c42", "text": "owner - the address of the token\u2019 s owner\npermitBatch - constructed with the following:\nstruct PermitBatch  {\n        // the permit data for multiple token allowances\n        PermitDetails [] details ;\n        // address permissioned on the allowed tokens\n        address spender ;\n        // deadline on the permit signature\n        uint256 sigDeadline ;\n    }\nstruct PermitDetails  {\n        // ERC20 token address\n        address token;\n        // the maximum amount allowed to spend\n        uint160 amount;\n        // timestamp at which a spender's token allowances become invalid\n        uint48 expiration ;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\nCopy", "metadata": {"page_number": 6, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fdb40a503469", "text": "uint48 expiration ;\n        // an incrementing value indexed per owner,token,and spender for each signature\n        uint48 nonce;\n    }\nCopy\nsignature - the signature over the permit data. Supports EOA  signatures, compact signatures defined by EIP-2098 , and\ncontract signatures defined by EIP-1271\nSingle transferFrom \nFunction Signatur e\nfunction  transferFrom (address from, address to, uint160 amount, address token) external ;\nCopy\nParameters\nfrom - the address to transfer the token from\nto - the address of the recipient\namount - the amount of the token to transfer , the maximum amount is type(uint160).max\ntoken - the address of the token to be transferred\nBatched transferFrom \nFunction Signatur e\nfunction  transferFrom (AllowanceTransferDetails [] calldata  transferDetails ) external ;", "metadata": {"page_number": 6, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b82851787a2", "text": "token - the address of the token to be transferred\nBatched transferFrom \nFunction Signatur e\nfunction  transferFrom (AllowanceTransferDetails [] calldata  transferDetails ) external ;\nCopy\nParameters\ntransferDetails - constructed with the following\nstruct AllowanceTransferDetails  {\n        // the owner of the token\n        address from;\n        // the recipient of the token\n        address to;\n        // the amount of the token\n        uint160 amount;\n        // the token to be transferred\n        address token;\n    }", "metadata": {"page_number": 6, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e625bb23896", "text": "Copy\nNonce Schema  \nThe nonces used to protect against replay attacks of signatures are similar to standard incrementing nonces. However , we\npack nonces with an allowed amount, and an allowed duration. This means that nonces are incremented per owner , per\ntoken , and per spender . Which further implies that you could sign two dif ferent permits at the same time with the same\nnonces and they won\u2019 t cancel each other out so long as the token or spender dif fer.\nThe mapping nonces are packed in is defined as follows:\nmapping(address => mapping(address => mapping(address => PackedAllowance ))) public allowance ;\nCopy\nand indexed as follows:\nPackedAllowance allowanceInformation = allowance [ownerAddress ][tokenAddress ][spenderAddress ];\nuint48 nonce = allowanceInformation .nonce;\nCopy\nSecurity Considerations", "metadata": {"page_number": 7, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e15414cc9f8e", "text": "PackedAllowance allowanceInformation = allowance [ownerAddress ][tokenAddress ][spenderAddress ];\nuint48 nonce = allowanceInformation .nonce;\nCopy\nSecurity Considerations\nSimilar to the security considerations outlined in SignatureT ransfer , integrating contracts need to perform valid safety\nchecks on the caller and pass in correct addresses for the from  argument in any transfer calls.\nAll amounts on the AllowanceTransfer  contract are of type uint160  so make sure integrating contracts safely downcast if\nthey have to. See how Permit2Lib downcasts safely .\nEdit this page\nHelpful?\nPrevious\nSignatureT ransfer\nNext\nOverview\nOverview\nFunctions\napprove\nSingle permit\nBatched permit\nSingle transferFrom\nBatched transferFrom\nNonce Schema\nSecurity Considerations\nDevelopers", "metadata": {"page_number": 7, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ecb08d415271", "text": "Overview\nFunctions\napprove\nSingle permit\nBatched permit\nSingle transferFrom\nBatched transferFrom\nNonce Schema\nSecurity Considerations\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 7, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7f321ac0cd6d", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 8, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "caaa77c3accd", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 9, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c2a97873a673", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nAllowedPermitAr gumentsHelpful?", "metadata": {"page_number": 9, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "77adf32d8dd2", "text": "On this page\nAllowedPermitArguments\n@uniswap/v3-sdk  / Exports  / AllowedPermitAr guments\nInterface: AllowedPermitArguments\nTable of contents  \nProperties \nexpiry\nnonce\nr\ns\nv\nProperties  \nexpiry \n\u2022 expiry : BigintIsh\nDefined in  \nselfPermit.ts:19\nnonce \n\u2022 nonce : BigintIsh\nDefined in  \nselfPermit.ts:18\nr \n\u2022 r: string\nDefined in  \nselfPermit.ts:16\ns \n\u2022 s: string\nDefined in", "metadata": {"page_number": 10, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "771703bdb53a", "text": "selfPermit.ts:17\nv \n\u2022 v: 0 | 1 | 27 | 28\nDefined in  \nselfPermit.ts:15\nEdit this page\nHelpful?\nPrevious\nFeeAmount\nNext\nBestT radeOptions\nTable of contents\nProperties\nProperties\nexpiry\nnonce\nr\ns\nv\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 11, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c50c671e38dd", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 11, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "536ac7de7b9b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nGuides\nBackgroundHelpful?\nOn this page\nBackgr ound\nBefore integrating with Uniswap, it may be helpful for newcomers to review the following background information on some\nimportant developer web3 concepts, the structure of our examples, and SDK concepts.\ninfo", "metadata": {"page_number": 13, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "42f1452a3d0e", "text": "Backgr ound\nBefore integrating with Uniswap, it may be helpful for newcomers to review the following background information on some\nimportant developer web3 concepts, the structure of our examples, and SDK concepts.\ninfo\nAlready familiar with web3 development and/or the basics of our SDK and want to get right to the code? Start with our first\nguide, Getting a Quote !\nProviders  \nCommunication with the blockchain is typically done through a provider and local models of smart contracts and their ABIs .\nTo achieve this, our examples use the ethers.js  library . To instantiate a provider you will need a data source. Our examples\noffer two options:\nJSON RPC URL : If you are working directly with the Ethereum mainnet or a local fork, products such as infura  offer\nJSON RPC URLs for a wide variety of chains and testnets. For our examples, we'll only be using the Ethereum\nmainnet.", "metadata": {"page_number": 13, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "69d00fde6adb", "text": "Wallet Extension : If you are connecting to a wallet browser extension, these wallets embed a source directly into the\nJavascript window object as window.ethereum . This object surfaces information about the user's wallets and provides\nthe ability to communicate with the connected chain. Importantly for our examples, it can be used with ethers.js  to\nconstruct a provider .\nUniswap's Runnable Examples  \nEach guide is accompanied and driven by runnable examples  using React to provide a basic UI for interacting with the\nexample. Each examples provides relevant options such as running against a local blockchain or connecting to the Ethereum\nmainnet directly . You also have the option of using a wallet extension which can be connected to either environment.\nInputs and environment settings are configured in each example's config.ts  and allows for simple setup and configuration.\nDeveloping and Testing \nTo test your code, we recommend utilizing a local fork of the Ethereum mainnet. To help facilitate easy testing, each", "metadata": {"page_number": 14, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e7e9172c77cb", "text": "Inputs and environment settings are configured in each example's config.ts  and allows for simple setup and configuration.\nDeveloping and Testing \nTo test your code, we recommend utilizing a local fork of the Ethereum mainnet. To help facilitate easy testing, each\nexample includes a quickstart for running the local chain with a test wallet. To further test, we also recommend using a\nwallet extension and connecting to the local chain. Finally , each example can be run against the Ethereum mainnet if\ndesired. Full development instructs can be found in the README.md  of each code example.\nUtility Libraries \nEach example is concentrated into a single file within the libs/  folder of the example, with the entry points noted in each\nguide and README.\nTo allow the guides to focus on the SDK's core functionality , additional basic building blocks can be found in each\nexample's libs  folder . The exported functionality from these files is intended to be the minimum needed for each example", "metadata": {"page_number": 14, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e253554a81a8", "text": "guide and README.\nTo allow the guides to focus on the SDK's core functionality , additional basic building blocks can be found in each\nexample's libs  folder . The exported functionality from these files is intended to be the minimum needed for each example\nand not a complete library for production usage. These also include storing core constants such as definitions for tokens,\nABI's, and blockchain addresses that can distract from the core concepts. Below are summaries of the helping libraries you\nwill encounter .\nProvider  Utilities  \nprovider.ts  wraps the basics of ethers.js  and connecting to wallet extensions into an abstracted view of a provider , a\nwallet address, and the ability to send transactions. It also helps abstract the configured environment you wish to run against\nin your example without making code changes outside of your configuration.\nWallet Utilities  \nwallet.ts  offers the ability to query a wallet (whether connected via an extension or defined in code/config) for its balances\nand other essential information.", "metadata": {"page_number": 14, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "abc76e80b6aa", "text": "in your example without making code changes outside of your configuration.\nWallet Utilities  \nwallet.ts  offers the ability to query a wallet (whether connected via an extension or defined in code/config) for its balances\nand other essential information.\nPool Information  \npool.ts  contains the basic querying of pool information when not essential / core to the relevant guide\nDisplay Utilities  \nconversion.ts  provides display and light math wrappers to help show human readable prices when dealing with currency\namounts (typically stored as raw numbers and the decimal placement separate for precision reasons) in the form of two\nfunctions: fromReadableAmount  and toReadableAmount\nNotable SDK Structur es and Concepts", "metadata": {"page_number": 14, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "da7b4cea0133", "text": "When working with the SDK it can be helpful to understand some of the design choices and why they are needed. Below\nyou can find a few important concepts.\nABI's \nTo allow others to interact with a smart contract, each contract exposes an ABI (Application Binary Interface). As these are\ndefined on the blockchain, we must ensure the correct definitions are provided to our Javascript functions. ABI's are\nprovided from various SDK's and imported in as needed. Some examples will define an ABI directly as needed.\nCurrencyAmount and JSBI \nCryptocurrency applications often work with very small fractions of tokens. As a result, high precision is very important. To\nensure precision is upheld, the CurrencyAmount  class helps store exact values as fractions and utilizes JSBI  for compatibility\nacross the web. To display these amounts nicely to users, additional work is sometimes required.\nCurrency", "metadata": {"page_number": 15, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8fc3c4c8f38a", "text": "ensure precision is upheld, the CurrencyAmount  class helps store exact values as fractions and utilizes JSBI  for compatibility\nacross the web. To display these amounts nicely to users, additional work is sometimes required.\nCurrency \nThe Currency  class can represent both native currency (ETH) and an ERC20 Token . Currencies vary in their relative value,\nso the Token  class allows your application to define the number of decimals needed for each currency along with the\ncurrency's address, symbol, and name.\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nGetting a Quote\nProviders\nUniswap's Runnable Examples\nDeveloping and Testing\nUtility Libraries\nNotable SDK Structures and Concepts\nABI's\nCurrencyAmount and JSBI\nCurrency\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper", "metadata": {"page_number": 15, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "54e96c67e83c", "text": "Notable SDK Structures and Concepts\nABI's\nCurrencyAmount and JSBI\nCurrency\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets", "metadata": {"page_number": 15, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "28cb6b55a9a9", "text": "Community\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 16, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "681ab0d6a5a2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 17, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "41ffce2976da", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 17, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e70e9dabf444", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nBase64Helpful?\nOn this page\nBase64\nProvides a function for encoding some bytes in base64\nFunctions  \nencode \n  function  encode(\n  ) internal  returns (string)\nCopy\nEncodes some bytes to the base64 representation\nEdit this page\nHelpful?\nPrevious\nTickLens\nNext\nBytesLib\nFunctions\nencode\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 18, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4509989ca3d5", "text": "Github\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists", "metadata": {"page_number": 18, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f92fdfd46bab", "text": "Brand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 19, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "41228bb49263", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 20, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ce34f772572", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 20, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a5d1906912e1", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nBase64T estHelpful?\nOn this page\nBase64T est\nFunctions  \nencode \n  function  encode(\n  ) external  returns (string)\nCopy\ngetGasCostOfEncode \n  function  getGasCostOfEncode (\n  ) external  returns (uint256)\nCopy\nEdit this page\nHelpful?\nPrevious\nRewardMath\nNext\nLiquidityAmountsT est\nFunctions\nencode\ngetGasCostOfEncode\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 21, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "588c27880fff", "text": "encode\ngetGasCostOfEncode\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 21, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cdd0b5498998", "text": "App\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 22, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "15fa8b098bf4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 23, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bece522e4b88", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nBestT radeOptionsHelpful?", "metadata": {"page_number": 23, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "143e223c00fd", "text": "On this page\nBestT radeOptions\n@uniswap/v3-sdk  / Exports  / BestT radeOptions\nInterface: BestT radeOptions\nTable of contents  \nProperties \nmaxHops\nmaxNumResults\nProperties  \nmaxHops \n\u2022 Optional  maxHops : number\nDefined in  \nentities/trade.ts:50\nmaxNumResults \n\u2022 Optional  maxNumResults : number\nDefined in  \nentities/trade.ts:48\nEdit this page\nHelpful?\nPrevious\nAllowedPermitAr guments\nNext\nClaimOptions\nTable of contents\nProperties\nProperties\nmaxHops\nmaxNumResults\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 24, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7bc727a1debc", "text": "ClaimOptions\nTable of contents\nProperties\nProperties\nmaxHops\nmaxNumResults\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper", "metadata": {"page_number": 24, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "201ecb37cff4", "text": "Github\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 25, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9922632c1125", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nBitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside", "metadata": {"page_number": 26, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f4dfa0fa1615", "text": "FixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside\nSqrtPriceMath\nSwapMath\nTick\nTickBitmap\nTickMath\nTransferHelper\nUnsafeMath\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000", "metadata": {"page_number": 26, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "37c977f84b24", "text": "V3 Protocol\nTechnical Reference\nCore\nLibraries\nBitMathHelpful?\nOn this page\nBitMath\nThis library provides functionality for computing bit properties of an unsigned integer\nFunctions  \nmostSignificantBit \n  function  mostSignificantBit (\n    uint256 x\n  ) internal  pure returns (uint8 r)\nCopy\nReturns the index of the most significant bit of the number , where the least significant bit is at index 0 and the most\nsignificant bit is at index 255\nThe function satisfies the property: x >= 2 mostSignificantBit(x) and x < 2 (mostSignificantBit(x)+1)\nParameters:  \nName Type Description\nx uint256 the value for which to compute the most significant bit, must be greater than 0\nReturn Values:  \nName TypeDescription", "metadata": {"page_number": 27, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e4d0dfcd4fe3", "text": "Parameters:  \nName Type Description\nx uint256 the value for which to compute the most significant bit, must be greater than 0\nReturn Values:  \nName TypeDescription\nr unit8 the index of the most significant bit\nleastSignificantBit \n  function  leastSignificantBit (\n    uint256 x\n  ) internal  pure returns (uint8 r)\nCopy\nReturns the index of the least significant bit of the number , where the least significant bit is at index 0 and the most\nsignificant bit is at index 255\nThe function satisfies the property: (x & 2 leastSignificantBit(x)) != 0 and (x & (2 (leastSignificantBit(x)) - 1)) == 0)\nParameters:  \nName Type Description\nx uint256 the value for which to compute the least significant bit, must be greater than 0", "metadata": {"page_number": 27, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e66a154ea27", "text": "Return Values:  \nName TypeDescription\nr unit8 the index of the least significant bit\nEdit this page\nHelpful?\nPrevious\nIUniswapV3PoolState\nNext\nFixedPoint128\nFunctions\nmostSignificantBit\nleastSignificantBit\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 28, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "38fc824fd223", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nBlockT imestamp\nERC721Permit\nLiquidityManagement\nMulticall\nPeripheryImmutableState\nPeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest", "metadata": {"page_number": 29, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "be6ecb39d94c", "text": "PeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeripheryHelpful?", "metadata": {"page_number": 29, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8d1c1083a8fa", "text": "Base\nBlockT imestamp\nOn this page\nBlockT imestamp\nBase contract that is overridden for tests\nFunctions  \n_blockTimestamp \n  function  _blockTimestamp (\n  ) internal  view returns (uint256)\nCopy\nMethod that exists purely to be overridden for tests\nReturn Values:  \nType Description\nuint256 current block timestamp\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nERC721Permit\nFunctions\n_blockT imestamp\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 30, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5cd8de822f9f", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets", "metadata": {"page_number": 30, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "69830ec3b21e", "text": "Community\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 31, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d49b364d4104", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nSmart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance", "metadata": {"page_number": 32, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c6d9c693e78f", "text": "Smart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides\nSmart Contract Integration\nBuilding an OracleHelpful?\nOn this page\nBuilding an Oracle", "metadata": {"page_number": 32, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "07a8daaf4a45", "text": "To build a price oracle on Uniswap V2, you must first understand the requirements for your use case. Once you understand\nthe kind of price average you require, it is a matter of storing the cumulative price variable from the pair as often as\nnecessary , and computing the average price using two or more observations of the cumulative price variables.\nUnderstanding r equir ements\nTo understand your requirements, you should first research the answer to the following questions:\nIs data freshness important? I.e.: must the price average include the current price?\nAre recent prices more important than historical prices? I.e.: is the current price given more weight than historical\nprices?\nNote your answers for the following discussion.\nOracle Strategies\nFixed windows  \nIn the case where data freshness is not important and recent prices are weighted equally with historical prices, it is enough to\nstore the cumulative price once per period (e.g. once per 24 hours.)", "metadata": {"page_number": 33, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0bdcae69977d", "text": "Oracle Strategies\nFixed windows  \nIn the case where data freshness is not important and recent prices are weighted equally with historical prices, it is enough to\nstore the cumulative price once per period (e.g. once per 24 hours.)\nComputing the average price over these data points gives you 'fixed windows', which can be updated after the lapse of each\nperiod. We wrote an example oracle of this kind here.\nThis example does not limit the maximum size of the fixed window , i.e. it only requires that the window size is greater than\n1 period (e.g. 24 hours).\nMoving averages  \nIn the case where data freshness is important, you can use a sliding window in which the cumulative price variable is\nmeasured more often than once per period.\nThere are at least two kinds of moving averages  that you can compute using the Uniswap cumulative price variable.\nSimple moving averages  give equal weight to each price measurement. We have built an example of a sliding window oracle\nhere.", "metadata": {"page_number": 33, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b3808920d31b", "text": "There are at least two kinds of moving averages  that you can compute using the Uniswap cumulative price variable.\nSimple moving averages  give equal weight to each price measurement. We have built an example of a sliding window oracle\nhere.\nExponential moving averages  give more weight to the most recent price measurements. We do not yet have an example\nwritten for this type of oracle.\nYou may wish to use exponential moving averages where recent prices are more important than historical prices, e.g. in case\nof liquidations. However , note that putting more weight on recent prices makes the oracle cheaper to manipulate than\nweighting all price measurements equally .\nComputing average prices  \nTo compute the average price given two cumulative price observations, take the dif ference between the cumulative price at\nthe beginning and end of the period, and divide by the elapsed time between them in seconds. This will produce a fixed\npoint unsigned Q1 12x1 12 number that represents the price of one asset relative to the other . This number is represented as a", "metadata": {"page_number": 33, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "36e7db5a6f88", "text": "the beginning and end of the period, and divide by the elapsed time between them in seconds. This will produce a fixed\npoint unsigned Q1 12x1 12 number that represents the price of one asset relative to the other . This number is represented as a\nuint224  where the upper 1 12 bits represent the integer amount, and the lower 1 12 bits represent the fractional amount.\nPairs contain both price0CumulativeLast  and price1CumulativeLast , which are ratios of reserves of token1 /token0  and\ntoken0 /token1  respectively . I.e. the price of token0  is expressed in terms of token1 /token0 , while the price of token1  is\nexpressed in terms of token0 /token1 .", "metadata": {"page_number": 33, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7513b52d6591", "text": "Getting the latest cumulative price\nIf you wish to compute the average price between a historical price cumulative observation and the current cumulative price,\nyou should use the cumulative price values from the current block. If the cumulative price has not been updated in the\ncurrent block, e.g. because there has not been any liquidity event ( mint /burn /swap ) on the pair in the current block, you can\ncompute the cumulative price counterfactually .\nWe provide a library for use in oracle contracts that has the method UniswapV2OracleLibrary#currentCumulativePrices\nfor getting the cumulative price as of the current block. The current cumulative price returned by this method is computed\ncounterfactually , meaning it requires no call to the relative gas-expensive #sync  method on the pair . It is correct regardless\nof whether a swap has already executed in the current block.\nNotes on overflow", "metadata": {"page_number": 34, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b451b73184a1", "text": "counterfactually , meaning it requires no call to the relative gas-expensive #sync  method on the pair . It is correct regardless\nof whether a swap has already executed in the current block.\nNotes on overflow\nThe UniswapV2Pair  cumulative price variables are designed to eventually overflow , i.e. price0CumulativeLast  and\nprice1CumulativeLast  and blockTimestampLast  will overflow through 0.\nThis should not pose an issue to your oracle design, as the price average computation is concerned with dif ferences (i.e.\nsubtraction) between two separate observations of a cumulative price variable. Subtracting between two cumulative price\nvalues will result in a number that fits within the range of uint256  as long as the observations are made for periods of max\n2^32  seconds, or ~136 years.\nblockTimestampLast  is stored only in a uint32 . For the same reason as described above, the pair can save a storage slot,", "metadata": {"page_number": 34, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "af72d7e0bcc9", "text": "2^32  seconds, or ~136 years.\nblockTimestampLast  is stored only in a uint32 . For the same reason as described above, the pair can save a storage slot,\nand many SST ORES over the life of the pair , by storing only block.timestamp % uint32(-1) . This is feasible because the\npair is only concerned with the time that elapses between each liquidity event when updating the cumulative prices, which is\nalways expected to be less than 2^32  seconds.\nWhen computing time elapsed within your own oracle, you can simply store the block.timestamp  of your observations as\nuint256 , and avoid dealing with overflow math for computing the time elapsed between observations. This is how the\nExampleSlidingW indowOracle  handles observation timestamps.\nIntegrating the oracle  \nTo integrate an oracle into your contracts, you must ensure the oracle's observations of the cumulative price variable are kept", "metadata": {"page_number": 34, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cec63612e68b", "text": "ExampleSlidingW indowOracle  handles observation timestamps.\nIntegrating the oracle  \nTo integrate an oracle into your contracts, you must ensure the oracle's observations of the cumulative price variable are kept\nup to date. As long as your oracle is up to date, you can depend on it to produce average prices. The process of keeping your\noracle up to date is called 'maintenance'.\nOracle maintenance  \nIn order to measure average prices over a period, the oracle must have a way of referencing the cumulative price at the start\nand end of a period. The recommended way of doing this is by storing these prices in the oracle contract, and calling the\noracle frequently enough to store the latest cumulative price.\nReliable oracle maintenance is a dif ficult task, and can become a point of failure in times of congestion. Instead, consider\nbuilding this functionality directly into the critical calls of your own smart contracts, or incentivize oracle maintenance calls\nby other parties.\nNo-maintenance option", "metadata": {"page_number": 34, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ed9d4415392c", "text": "building this functionality directly into the critical calls of your own smart contracts, or incentivize oracle maintenance calls\nby other parties.\nNo-maintenance option  \nIt is possible to avoid regularly storing this cumulative price at the start of the period by utilizing storage proofs. However ,\nthis approach has limitations, especially in regard to gas cost and maximum length of the time period over which the average\nprice can be measured. If you wish to try this approach, you can follow this repository by Keydonix .\nKeydonix has developed a general purpose price feed oracle built on Uniswap v2 that supports arbitrary time windows (up\nto 256 blocks) and doesn't require any active maintenance.", "metadata": {"page_number": 34, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1af75bf05071", "text": "Edit this page\nHelpful?\nPrevious\nProviding Liquidity\nNext\nFlash Swaps\nFixed windows\nMoving averages\nComputing average prices\nIntegrating the oracle\nOracle maintenance\nNo-maintenance option\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 35, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e05c947b6040", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 36, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae6b7350e89b", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 36, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ab386d81545b", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nBytesLibHelpful?\nOn this page\nBytesLib\nFunctions  \nslice \n  function  slice(\n  ) internal  returns (bytes)\nCopy\ntoAddress \n  function  toAddress (\n  ) internal  returns (address)\nCopy\ntoUint24 \n  function  toUint24 (\n  ) internal  returns (uint24)\nCopy\nEdit this page\nHelpful?\nPrevious\nBase64\nNext\nCallbackV alidation\nFunctions\nslice\ntoAddress\ntoUint24\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 37, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "17ff39dd0852", "text": "Functions\nslice\ntoAddress\ntoUint24\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 37, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94b1141eca12", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 38, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "21d8fdece17b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 39, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2d31d4de5bad", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 39, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b6546a287b2", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nCallbackV alidationHelpful?\nOn this page\nCallbackV alidation\nProvides validation for callbacks from Uniswap V3 Pools\nFunctions  \nverifyCallback \n  function  verifyCallback (\n    address factory ,\n    address tokenA,\n    address tokenB,\n    uint24 fee\n  ) internal  returns (contract  IUniswapV3Pool  pool)\nCopy\nReturns the address of a valid Uniswap V3 Pool\nParameters:  \nName Type Description\nfactory address The contract address of the Uniswap V3 factory\ntokenA address The contract address of either token0 or token1\ntokenB address The contract address of the other token", "metadata": {"page_number": 40, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "11ba10e710cb", "text": "Parameters:  \nName Type Description\nfactory address The contract address of the Uniswap V3 factory\ntokenA address The contract address of either token0 or token1\ntokenB address The contract address of the other token\nfee uint24 The fee collected upon every swap in the pool, denominated in hundredths of a bip\nReturn Values:  \nName Type Description\npool IUniswapV3Pool The V3 pool contract address\nverifyCallback \n  function  verifyCallback (\n    address factory ,\n    struct PoolAddress .PoolKey poolKey\n  ) internal  returns (contract  IUniswapV3Pool  pool)\nCopy\nReturns the address of a valid Uniswap V3 Pool\nParameters:", "metadata": {"page_number": 40, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fb6903d06b0f", "text": "Name Type Description\nfactory address The contract address of the Uniswap V3 factory\npoolKey struct PoolAddress.PoolKey The identifying key of the V3 pool\nReturn Values:  \nName Type Description\npool IUniswapV3Pool The V3 pool contract address\nEdit this page\nHelpful?\nPrevious\nBytesLib\nNext\nChainId\nFunctions\nverifyCallback\nverifyCallback\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 41, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "458b0cdaea8f", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 41, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "297cdd9c9acd", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGetting Started\nCalling Flash\nThe Flash Callback\nThe Final Contract\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement Flash Swaps\nCalling FlashHelpful?\nOn this page\nCalling Flash\nParameter  Structs", "metadata": {"page_number": 42, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1c789cbc8e7d", "text": "V1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement Flash Swaps\nCalling FlashHelpful?\nOn this page\nCalling Flash\nParameter  Structs  \nIn order to call flash , we will need the flash parameters for the initial call, as well as any parameters we want to pass\nthrough to the callback.\nThe FlashParams  struct will contain the token addresses and amounts we wish to pull out of the pool, as well as the three\nfee tiers used to determine which pool we are withdrawing from, and which we will be swapping with.\n  struct FlashParams  {\n        address token0;\n        address token1;\n        uint24 fee1;\n        uint256 amount0 ;\n        uint256 amount1 ;\n        uint24 fee2;", "metadata": {"page_number": 42, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "30057027af01", "text": "uint24 fee3;\n    }\nCopy\nThe FlashCallbackData  struct will contain the data we want to send to the callback. This includes poolKey , which\nexpresses the sorted tokens with the matched fee tier , returned by the PoolAddr ess library .\n    struct FlashCallbackData  {\n        uint256 amount0 ;\n        uint256 amount1 ;\n        address payer;\n        PoolAddress .PoolKey poolKey ;\n        uint24 poolFee2 ;\n        uint24 poolFee3 ;\n    }\nCopy\nPool Key  \nNow we'll start our function by assigning the relevant parameters from the Flashparams  (which we have declared in\nmemory as params ) to our variable poolKey\n    function  initFlash (FlashParams memory params) external  {\n        PoolAddress .PoolKey memory poolKey =", "metadata": {"page_number": 43, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2d0f68fd4c8f", "text": "memory as params ) to our variable poolKey\n    function  initFlash (FlashParams memory params) external  {\n        PoolAddress .PoolKey memory poolKey =\n            PoolAddress .PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1});\n    }\nCopy\nNext we will declare pool  as type [IUniswapV3Pool ], which allows us to call flash  on our desired pool contract.\n        IUniswapV3Pool pool = IUniswapV3Pool (PoolAddress .computeAddress (factory, poolKey ));\nCopy\nCalling Flash  \nFinally , we call flash  on our previously declared pool . In the last parameter , we abi.encode the FlashCallbackData , which\nwill be decoded in the callback and used to inform the next steps of the transaction.\n        pool .flash(\n            address(this),", "metadata": {"page_number": 43, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "900c526ac6f5", "text": "will be decoded in the callback and used to inform the next steps of the transaction.\n        pool .flash(\n            address(this),\n            params .amount0,\n            params .amount1,\n            abi .encode(\n                FlashCallbackData ({\n                    amount0 : params.amount0,\n                    amount1 : params.amount1,\n                    payer : msg.sender,\n                    poolKey : poolKey ,\n                    poolFee2 : params.fee2,\n                    poolFee3 : params.fee3\n                })\n            )\n        );\nCopy\nThe full function:\n    //fee1 is the fee of the pool from the initial borrow\n    //fee2 is the fee of the first pool to arb from", "metadata": {"page_number": 43, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "47402ed21e9a", "text": "//fee3 is the fee of the second pool to arb from\n    struct FlashParams  {\n        address token0;\n        address token1;\n        uint24 fee1;\n        uint256 amount0 ;\n        uint256 amount1 ;\n        uint24 fee2;\n        uint24 fee3;\n    }\n    // fee2 and fee3 are the two other fees associated with the two other pools of token0 and token1\n    struct FlashCallbackData  {\n        uint256 amount0 ;\n        uint256 amount1 ;\n        address payer;\n        PoolAddress .PoolKey poolKey ;\n        uint24 poolFee2 ;\n        uint24 poolFee3 ;\n    }\nfunction  initFlash (FlashParams memory params) external  {\n        PoolAddress .PoolKey memory poolKey =", "metadata": {"page_number": 44, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7192f1eb7f1a", "text": "uint24 poolFee2 ;\n        uint24 poolFee3 ;\n    }\nfunction  initFlash (FlashParams memory params) external  {\n        PoolAddress .PoolKey memory poolKey =\n            PoolAddress .PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1});\n        IUniswapV3Pool pool = IUniswapV3Pool (PoolAddress .computeAddress (factory, poolKey ));\n        pool .flash(\n            address(this),\n            params .amount0,\n            params .amount1,\n            abi .encode(\n                FlashCallbackData ({\n                    amount0 : params.amount0,\n                    amount1 : params.amount1,\n                    payer : msg.sender,\n                    poolKey : poolKey ,", "metadata": {"page_number": 44, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dafa12a4ad11", "text": "FlashCallbackData ({\n                    amount0 : params.amount0,\n                    amount1 : params.amount1,\n                    payer : msg.sender,\n                    poolKey : poolKey ,\n                    poolFee2 : params.fee2,\n                    poolFee3 : params.fee3\n                })\n            )\n        );\n    }\nCopy\nEdit this page\nHelpful?\nPrevious\nGetting Started\nNext\nThe Flash Callback\nParameter Structs\nPool Key\nCalling Flash\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 44, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "52adb610e68f", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 45, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "50223d7e7275", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 46, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f53936195b07", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 46, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "167abb05efc8", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nChainIdHelpful?\nOn this page\nChainId\nFunctions  \nget \n  function  get(\n  ) internal  returns (uint256 chainId )\nCopy\nGets the current chain ID\nReturn Values:  \nName Type Description\nchainId uint256 The current chain ID\nEdit this page\nHelpful?\nPrevious\nCallbackV alidation\nNext\nHexStrings\nFunctions\nget\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 47, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "52ad5ab89457", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 47, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32fb073f7245", "text": "Analytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 48, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9a3e66688b99", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nGovernance\nOverview\nProcess\nBeginners Guide to Voting\nGlossary\nAdversarial Circumstances\nChangelog\nResearch\nResources\nGlossary\n\u0000\nGovernance\nChangelogHelpful?\nChangelog\nDate Abstract Transaction Sybil Refer ence\nJune 12, 2021Reduce the UNI proposal submission threshold to\n2.5MEtherscan https://sybil.or g/#/proposals/uniswap/4\nAugust 26,\n2021Upgrade Governance Contract to Compound's", "metadata": {"page_number": 49, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "61b7f8e9e799", "text": "2.5MEtherscan https://sybil.or g/#/proposals/uniswap/4\nAugust 26,\n2021Upgrade Governance Contract to Compound's\nGovernor BravoEtherscan https://sybil.or g/#/proposals/uniswap/8\nEdit this page\nHelpful?\nPrevious\nAdversarial Circumstances\nNext\nResearch\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 49, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3e8eb69cc312", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 50, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c9d993430340", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 51, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a82d991b1d12", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nClaimOptionsHelpful?", "metadata": {"page_number": 51, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "50fc1b0c0cbc", "text": "On this page\nClaimOptions\n@uniswap/v3-sdk  / Exports  / ClaimOptions\nInterface: ClaimOptions\nOptions to specify when claiming rewards.\nTable of contents  \nProperties \namount\nrecipient\ntokenId\nProperties  \namount \n\u2022 Optional  amount : BigintIsh\nThe amount of rewardToken  to claim. 0 claims all.\nDefined in  \nstaker .ts:52\nrecipient \n\u2022 recipient : string\nAddress to send rewards to.\nDefined in  \nstaker .ts:47\ntokenId \n\u2022 tokenId : BigintIsh\nThe id of the NFT\nDefined in  \nstaker .ts:42\nEdit this page", "metadata": {"page_number": 52, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cb5deddeeb24", "text": "Helpful?\nPrevious\nBestT radeOptions\nNext\nCollectOptions\nTable of contents\nProperties\nProperties\namount\nrecipient\ntokenId\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 53, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "06deb3a2dced", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nSet Up Your Contract\nMint a New Position\nCollecting Fees\nDecrease Liquidity\nIncrease Liquidity\nThe Full Contract\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nCollecting FeesHelpful?\nOn this page\nCollecting Fees\nCollect Fees", "metadata": {"page_number": 54, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ca53c3a4f218", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nCollecting FeesHelpful?\nOn this page\nCollecting Fees\nCollect Fees  \nMake sure to go through the first guide  before continuing to this section.\nFor each of these liquidity interaction examples, our contract must be in possession of the liquidity position NFT . Therefore, in any\nexample where the NFT  deposit is not coded into a function, the contract is assumed to already be in possession of it.\nTo collect the fees of an owner position, transfer the NFT  from the calling address, assign the relevant variables from the NFT  to local\nvariables within our function, and pass those variables to the nonfungiblePositionManager  to call collect .\nThis function collects all fees, sending them to the original owner of the NFT , while maintaining custody of the position NFT .\n    /// @notice Collects the fees associated with provided liquidity", "metadata": {"page_number": 54, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6ecdbaf1fde2", "text": "This function collects all fees, sending them to the original owner of the NFT , while maintaining custody of the position NFT .\n    /// @notice Collects the fees associated with provided liquidity\n    /// @dev The contract must hold the erc721 token before it can collect fees\n    /// @param tokenId The id of the erc721 token\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function  collectAllFees (uint256 tokenId ) external  returns (uint256 amount0 , uint256 amount1 ) {\n        // Caller must own the ERC721 position\n        // Call to safeTransfer will trigger `onERC721Received` which must return the selector else transfer will fail\n        nonfungiblePositionManager .safeTransferFrom (msg.sender, address(this), tokenId );", "metadata": {"page_number": 54, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "da9c6f0e87f5", "text": "// set amount0Max and amount1Max to uint256.max to collect all fees\n        // alternatively can set recipient to msg.sender and avoid another transaction in `sendToOwner`\n        INonfungiblePositionManager .CollectParams memory params =\n            INonfungiblePositionManager .CollectParams ({\n                tokenId : tokenId ,\n                recipient : address(this),\n                amount0Max : type(uint128).max,\n                amount1Max : type(uint128).max\n            });\n        (amount0, amount1 ) = nonfungiblePositionManager .collect(params);\n        // send collected feed back to owner\n        _sendToOwner (tokenId, amount0 , amount1 );\n    }\nCopy\nSending Fees To The Calling Addr ess", "metadata": {"page_number": 55, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "19918cc86667", "text": "// send collected feed back to owner\n        _sendToOwner (tokenId, amount0 , amount1 );\n    }\nCopy\nSending Fees To The Calling Addr ess \nThis internal helper function sends any tokens, in the form of fees or position tokens, to the owner of an NFT .\nIn _sendToOwner , we pass the amount of fees due, previously populated in the last function, as ar guments to safeTransfer , which transfers\nthe fees to owner .\n    /// @notice Transfers funds to owner of NFT\n    /// @param tokenId The id of the erc721\n    /// @param amount0 The amount of token0\n    /// @param amount1 The amount of token1\n    function  _sendToOwner (\n        uint256 tokenId ,\n        uint256 amount0 ,\n        uint256 amount1\n    ) internal  {", "metadata": {"page_number": 55, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "17146d39e73c", "text": "function  _sendToOwner (\n        uint256 tokenId ,\n        uint256 amount0 ,\n        uint256 amount1\n    ) internal  {\n        // get owner of contract\n        address owner = deposits [tokenId].owner;\n        address token0 = deposits [tokenId].token0;\n        address token1 = deposits [tokenId].token1;\n        // send collected fees to owner\n        TransferHelper .safeTransfer (token0, owner, amount0 );\n        TransferHelper .safeTransfer (token1, owner, amount1 );\n    }\nCopy\nEdit this page\nHelpful?\nPrevious\nMint a New Position\nNext\nDecrease Liquidity\nCollect Fees\nSending Fees To The Calling Address\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper", "metadata": {"page_number": 55, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6f9dfc1f2931", "text": "Mint a New Position\nNext\nDecrease Liquidity\nCollect Fees\nSending Fees To The Calling Address\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 55, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fef0143d9e35", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 56, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fe774684bd64", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 57, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46a5f0043949", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nCollectOptionsHelpful?", "metadata": {"page_number": 57, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "57f623995900", "text": "On this page\nCollectOptions\n@uniswap/v3-sdk  / Exports  / CollectOptions\nInterface: CollectOptions\nTable of contents  \nProperties \nexpectedCurrencyOwed0\nexpectedCurrencyOwed1\nrecipient\ntokenId\nProperties  \nexpectedCurrencyOwed0 \n\u2022 expectedCurr encyOwed0 : CurrencyAmount <Currency >\nExpected value of tokensOwed0, including as-of-yet-unaccounted-for fees/liquidity value to be burned\nDefined in  \nnonfungiblePositionManager .ts:114\nexpectedCurrencyOwed1 \n\u2022 expectedCurr encyOwed1 : CurrencyAmount <Currency >\nExpected value of tokensOwed1, including as-of-yet-unaccounted-for fees/liquidity value to be burned\nDefined in  \nnonfungiblePositionManager .ts:119", "metadata": {"page_number": 58, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c6a128d88fb4", "text": "Expected value of tokensOwed1, including as-of-yet-unaccounted-for fees/liquidity value to be burned\nDefined in  \nnonfungiblePositionManager .ts:119\nrecipient \n\u2022 recipient : string\nThe account that should receive the tokens.\nDefined in  \nnonfungiblePositionManager .ts:124\ntokenId", "metadata": {"page_number": 58, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "513c64b500c0", "text": "\u2022 tokenId : BigintIsh\nIndicates the ID of the position to collect for .\nDefined in  \nnonfungiblePositionManager .ts:109\nEdit this page\nHelpful?\nPrevious\nClaimOptions\nNext\nCommonAddLiquidityOptions\nTable of contents\nProperties\nProperties\nexpectedCurrencyOwed0\nexpectedCurrencyOwed1\nrecipient\ntokenId\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 59, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cb9afd9f8aa1", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 59, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "11961b5f0e0c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02", "metadata": {"page_number": 60, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3e85adb32b23", "text": "Technical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02\nCommon Errors\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nSmart Contracts\nCommon ErrorsHelpful?\nOn this page\nCommon Err ors", "metadata": {"page_number": 60, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4fa18e9675e3", "text": "This document covers a few error codes frequently encountered while building on Uniswap V2.\nUniswapV2: K\nThis is an error that is frequently encountered, and requires a bit of context to understand it.\nThe Uniswap constant product formula is \u201cX * Y = K\u201d. Where X and Y represent the respective reserve balances of two\nERC-20 tokens, and \u201cK\u201d represents the product of the reserves. It is this \u201cK\u201d to which the \u201cK\u201d error refers.\nIn essence, the \u201cK\u201d error means that a trade was attempted that somehow left the trading pair with less reserves than should\nbe there, and as a result the transaction is reverted.\nThis can have a few dif ferent causes.\nFee On Transfer  Tokens  \nThe most common examples are caused by \u201cfee on transfer\u201d tokens.\nInclusive Fee On Transfer Tokens \nIn most cases, a fee on transfer token burns or diverts a small portion of every transfer such that the recipient of the transfer", "metadata": {"page_number": 61, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7f6dad566e18", "text": "The most common examples are caused by \u201cfee on transfer\u201d tokens.\nInclusive Fee On Transfer Tokens \nIn most cases, a fee on transfer token burns or diverts a small portion of every transfer such that the recipient of the transfer\nends up with slightly less than the sender gave. This is called an \u201cinclusive\u201d fee on transfer .\nIn the case of inclusive fee on transfer tokens, you can use the corresponding swap functions in the router contract which\nend with \u201cSupportingFeeOnT ransfer\u201d . These functions succeed by adjusting the \u201camountOutMin\u201d parameter to check the\nrecipient amount rather than the sending amount when calculating the invariant.\nExclusive Fee On Transfer Tokens \nThe other type, \u201cexclusive\u201d fee on transfer tokens, work by sending an additional transfer from the sending address after the\nprimary transfer . Because the router contract cannot anticipate this trailing transfer when calculating the invariant, the\ntransaction will either revert, or partially succeed by sending the primary transfer but breaking the pool upon the trailing\ntransfer .", "metadata": {"page_number": 61, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12190099a567", "text": "primary transfer . Because the router contract cannot anticipate this trailing transfer when calculating the invariant, the\ntransaction will either revert, or partially succeed by sending the primary transfer but breaking the pool upon the trailing\ntransfer .\nIn the case of exclusive fee on transfer tokens, the SupportingFeeOnT ransfer functions may work, but there will be some\ntokens designed in such a way that they fundamentally break the router . If you are still getting a \u201cK\u201d error when using these\nfunctions, you may need to make a fork of the router contract that accommodates your token design.\nRebasing Tokens  \nThe less common instance of the \u201cK\u201d error is as a result of rebasing tokens.\nRebasing tokens can alter the balance of any addresses holding their tokens arbitrarily . This usually works at pre specified\nintervals and as a result of a handful of variables used in the economics of a rebasing token.\nRebasing tokens typically work in two ways.", "metadata": {"page_number": 61, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5c1114eb0396", "text": "intervals and as a result of a handful of variables used in the economics of a rebasing token.\nRebasing tokens typically work in two ways.\nNegative Rebasing Tokens \nA negative rebasing token, the more common variant, deflates the balances of token owners. Because the rebasing is not\ntriggered by transfers, the router cannot expect when or how a rebasing will happen. Once it does, the pair reserves will be\nunbalanced, and the next person to transact with the pair will bear the cost of the delta as a result of the rebasing.\nNeedless to say , an unenviable position.", "metadata": {"page_number": 61, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ea5b93cd683", "text": "Negative rebasing tokens have solved this error by altering their token contract to call sync on the trading pair at the end of\nevery transaction involving the Uniswap router contract. Those interested in forking the router contract should anticipate that\nnegative rebasing tokens will break the pair until the token contracts are updated to accommodate your new router .\nPositive Rebasing Tokens \nPositive rebasing tokens arbitrarily increase the balances of token holders. When a positive rebase happens, it creates a\nsurplus that is unaccounted for in the trading pair . Because the extra tokens are unaccounted for in the trading pair , anyone\ncan call skim() on the trading pair and ef fectively steal the positive dif ference from the rebalance.\nWhile positive rebalancing does not break any functionality of Uniswap, those interested in them should be aware that the\npositive balance found in any pair will be freely available for taking.\nA Note on Rebasing Tokens", "metadata": {"page_number": 62, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "514eaeab7b46", "text": "While positive rebalancing does not break any functionality of Uniswap, those interested in them should be aware that the\npositive balance found in any pair will be freely available for taking.\nA Note on Rebasing Tokens \nFor those interested in building a rebasing token, a word of caution: many contracts involving decentralized trading and\nliquidity provisioning will break upon interacting with your token. An example approach that will lead to much easier\nintegration in future protocols can be found in CHAI . CHAI uses a wrapper function that contains the rebalancing within the\nwrapper , such that the redeemable token can be easily integrated into many dif ferent systems.\nUniswapV2: LOCKED\nThe LOCKED error is a guard built into the router contract that prevents customized reentrancy contracts from attempting to\nreturn malicious code into the router contract at the end of a transaction.\nThis error is commonly encountered when using Ganache CLI to fork the Ethereum mainnet to a local instance as a part of a", "metadata": {"page_number": 62, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dba0f3e7219e", "text": "return malicious code into the router contract at the end of a transaction.\nThis error is commonly encountered when using Ganache CLI to fork the Ethereum mainnet to a local instance as a part of a\ndevelopment environment. The error is a bug in Ganache-Cli that will hopefully be fixed in a future release by the truf fle\nteam.\nA temporary fix is available by simply restarting the local fork.\nNo Access To Archive Node\nThis is an error with either Metamask or Ganache-CLI. It usually occurs after a local fork is instantiated and contracts are\ndeployed but there is one failed transaction.\nA temporary fix is available by restarting the local fork and resetting metamask.\nUniswapV2: TRANSFER_F AILED\nThis means the core contract was unable to send tokens to the recipient. This is most likely due to a scam token, where the", "metadata": {"page_number": 62, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a443cb36f2f2", "text": "UniswapV2: TRANSFER_F AILED\nThis means the core contract was unable to send tokens to the recipient. This is most likely due to a scam token, where the\ntoken owner has maliciously disabled the transfer function in a way that allows users to buy the token, but not sell them.\nUniswapV2: EXPIRED\nThis is a result of a transaction that took too long to be broadcast to the mainnet.\nUniswap does not set gas prices natively , so most users default to the suggested gas prices in metamask. Sometimes\nmetamask gets it wrong, though, and sets the gas price too low . If a swap takes more than 20 minutes to execute, the core\ncontract won\u2019 t allow it to go through.\nAction Requir es an Active Reserve\nVM Exception While Processing Transaction: Action Requires an Active Reserve", "metadata": {"page_number": 62, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fe311fb24b71", "text": "This is potentially a ganache bug encountered when working on flash swaps. We haven't figured out the source of it yet.\nUnable To Appr ove Transaction On The Fr ont End\nThere are rare circumstances where users are unable to approve a token on the Uniswap front end.\nThis is a result of some token contracts taking steps to defend against malicious contracts that attempt to front run approvals\nand steal a users tokens. It happens only when the user is trying to increase an approval allowance from a preallocated\namount to a lar ger one, and only happens with a few token contracts.\nThe solution is have the user manually set the router contract approval amount to zero, then to the number they want. The\neasiest way to do this is through Etherscan.\nEdit this page\nHelpful?\nPrevious\nRouter02\nNext\nOverview\nFee On Transfer Tokens\nInclusive Fee On Transfer Tokens", "metadata": {"page_number": 63, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "af1eb6e98395", "text": "Edit this page\nHelpful?\nPrevious\nRouter02\nNext\nOverview\nFee On Transfer Tokens\nInclusive Fee On Transfer Tokens\nExclusive Fee On Transfer Tokens\nRebasing Tokens\nNegative Rebasing Tokens\nPositive Rebasing Tokens\nA Note on Rebasing Tokens\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 63, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fa78f8d126b1", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 64, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6a1266474000", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nCommonAddLiquidityOptionsHelpful?", "metadata": {"page_number": 64, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac05a0fe862b", "text": "On this page\nCommonAddLiquidityOptions\n@uniswap/v3-sdk  / Exports  / CommonAddLiquidityOptions\nInterface: CommonAddLiquidityOptions\nOptions for producing the calldata to add liquidity .\nTable of contents  \nProperties \ndeadline\nslippageT olerance\ntoken0Permit\ntoken1Permit\nuseNative\nProperties  \ndeadline \n\u2022 deadline : BigintIsh\nWhen the transaction expires, in epoch seconds.\nDefined in  \nnonfungiblePositionManager .ts:56\nslippageTolerance \n\u2022 slippageT olerance : Percent\nHow much the pool price is allowed to move.\nDefined in  \nnonfungiblePositionManager .ts:51\ntoken0Permit \n\u2022 Optional  token0Permit : PermitOptions", "metadata": {"page_number": 65, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "51e273c62e85", "text": "How much the pool price is allowed to move.\nDefined in  \nnonfungiblePositionManager .ts:51\ntoken0Permit \n\u2022 Optional  token0Permit : PermitOptions\nThe optional permit parameters for spending token0\nDefined in  \nnonfungiblePositionManager .ts:66", "metadata": {"page_number": 65, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c34daf9283c5", "text": "token1Permit \n\u2022 Optional  token1Permit : PermitOptions\nThe optional permit parameters for spending token1\nDefined in  \nnonfungiblePositionManager .ts:71\nuseNative \n\u2022 Optional  useNative : NativeCurrency\nWhether to spend ether . If true, one of the pool tokens must be WETH, by default false\nDefined in  \nnonfungiblePositionManager .ts:61\nEdit this page\nHelpful?\nPrevious\nCollectOptions\nNext\nFeeOptions\nTable of contents\nProperties\nProperties\ndeadline\nslippageT olerance\ntoken0Permit\ntoken1Permit\nuseNative\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 66, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8fd1dc983b6c", "text": "token0Permit\ntoken1Permit\nuseNative\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 66, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8045415954aa", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 67, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "deada6d9e6b5", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\nOverview\nGuides\nGetting Started\nTechnical Reference\nData\nComputation\nFormat\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nComputationHelpful?\nOn this page\ngetMarketDetails", "metadata": {"page_number": 68, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "77992610a9a7", "text": "Orchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nComputationHelpful?\nOn this page\ngetMarketDetails\nThis function computes market details for the passed reserves data. Markets are defined as ETH <>ERC20, ERC20 <>ETH, or\nERC20 <>ERC20 pairs, where the first currency is the input and the second is the output. Reserves must be specified for both the input and\noutput currency .\nIn the case of ETH, undefined  should be passed as the reserves data. getTokenReserves  formatted ERC20 reserves, or the requisite\ndata can be fetched manually and passed in.\nRates are calculated to 18 decimal places of precision.\nFunction Signatur e \nexport function  getMarketDetails (\n  optionalReservesInput : OptionalReserves ,", "metadata": {"page_number": 68, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d1d887a4cc5f", "text": "data can be fetched manually and passed in.\nRates are calculated to 18 decimal places of precision.\nFunction Signatur e \nexport function  getMarketDetails (\n  optionalReservesInput : OptionalReserves ,\n  optionalReservesOutput : OptionalReserves\n): MarketDetails\nCopy", "metadata": {"page_number": 68, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4c2207345705", "text": "Input Parameters  \nParameter Type Description\noptionalReservesInput OptionalReserves Reserves data for the input currency .\noptionalReservesOutput OptionalReserves Reserves data for the output currency .\nExample Usage\nconst reserves : ChainIdOrProvider  = await getTokenReserves (tokenAddress )\nconst marketDetails : MarketDetails  = getMarketDetails (undefined , reserves ) // ETH<>ERC20\n/*\n{\n  // market type\n  tradeType: 'ETH_TO_TOKEN',\n  // dummy ETH reserves\n  inputReserves: {\n    token: {\n      chainId: 1,\n      address: 'ETH',\n      decimals: 18\n    }\n  },\n  // normalized token reserves\n  outputReserves: <NormalizedReserves>,", "metadata": {"page_number": 69, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4e6b19de24db", "text": "chainId: 1,\n      address: 'ETH',\n      decimals: 18\n    }\n  },\n  // normalized token reserves\n  outputReserves: <NormalizedReserves>,\n  // market rate calculated to 18 decimals of precision\n  marketRate: {\n    rate: <BigNumber>,        // x output / 1 input\n    rateInverted: <BigNumber> // x input / 1 output\n  }\n}\n*/\nCopy\ngetTradeDetails\nThis function computes trade details for the passed market data.\n-This function throws an error if the passed _tradeAmount is greater than the amount of ETH/tokens in the relevant Uniswap exchange.\nTrade amounts must be passed in non-decimal form (where e.g. 1 ETH is represented as 1000000000000000000 wei ).\nFunction Signatur e", "metadata": {"page_number": 69, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4a5ff1675218", "text": "Trade amounts must be passed in non-decimal form (where e.g. 1 ETH is represented as 1000000000000000000 wei ).\nFunction Signatur e \nexport function  getTradeDetails (\n  tradeExact : TRADE_EXACT ,\n  _tradeAmount : BigNumberish ,\n  marketDetails : MarketDetails\n): TradeDetails\nCopy\nInput Parameters  \nParameter Type Description\ntradeExact TRADE_EXACT Whether either the input or the output currency is the exact amount.\n_tradeAmount BigNumberish The amount to buy/sell (of the output/input currency , depending on tradeExact )\nmarketDetails MarketDetails Market details.\nExample Usage", "metadata": {"page_number": 69, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e15a5935e61", "text": "const _purchaseAmount : BigNumber  = new BigNumber ('2.5')\nconst _decimals : number = 18\nconst tradeAmount : BigNumber  = _purchaseAmount .multipliedBy (10 ** _decimals )\nconst marketDetails : MarketDetails  = getMarketDetails (undefined , reserves ) // ETH<>ERC20\n// buy exactly 2.5 of an 18 decimal ERC20 with ETH\nconst tradeDetails : TradeDetails  = getTradeDetails (TRADE_EXACT .OUTPUT, tradeAmount , marketDetails )\n/*\n{\n  marketDetailsPre: <MarketDetails>,\n  marketDetailsPost: <MarketDetails>,\n  tradeType: 'ETH_TO_TOKEN',\n  tradeExact: 'OUTPUT',\n  inputAmount: {\n    token: <Token>,\n    amount: <BigNumber>", "metadata": {"page_number": 70, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ce11cb94d54a", "text": "tradeType: 'ETH_TO_TOKEN',\n  tradeExact: 'OUTPUT',\n  inputAmount: {\n    token: <Token>,\n    amount: <BigNumber>\n  },\n  outputAmount: {\n    token: <Token>,\n    amount: <BigNumber>\n  },\n  // execution rate calculated to 18 decimals of precision\n  executionRate: {\n    rate: <BigNumber>         // x output / 1 input\n    rateInverted: <BigNumber> // x input / 1 output\n  },\n  // slippage between the pre- and post-trade market rates, in basis points, calculated to 18 decimals of precision\n  marketRateSlippage: <BigNumber>,\n  // slippage between the execution and pre-trade market rate, in basis points, calculated to 18 decimals of precision\n  executionRateSlippage: <BigNumber>", "metadata": {"page_number": 70, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12b8a6ea44fe", "text": "marketRateSlippage: <BigNumber>,\n  // slippage between the execution and pre-trade market rate, in basis points, calculated to 18 decimals of precision\n  executionRateSlippage: <BigNumber>\n}\n*/\nCopy\nEdit this page\nHelpful?\nPrevious\nData\nNext\nFormat\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 70, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "439e61657ec6", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 71, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1e040b45486c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nConcentrated Liquidity\nFees\nOracle\nRange Orders\nSwaps\nToken Integration Issues\nGovernance\nResearch\nResources\nGlossary\n\u0000\nProtocol Concepts\nConcentrated LiquidityHelpful?\nOn this page\nConcentrated Liquidity", "metadata": {"page_number": 72, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b9a2d2869071", "text": "Introduction  \nThe defining idea of Uniswap v3 is concentrated liquidity: liquidity that is allocated within a custom price range. In earlier\nversions, liquidity was distributed uniformly along the price curve between 0 and infinity .\nThe previously uniform distribution allowed trading across the entire price interval (0, \u221e) without any loss of liquidity .\nHowever , in many pools, the majority of the liquidity was never used.\nConsider stablecoin pairs, where the relative price of the two assets stays relatively constant. The liquidity outside the\ntypical price range of a stablecoin pair is rarely touched. For example, the v2 DAI/USDC pair utilizes ~0.50% of the total\navailable capital for trading between $0.99 and $1.01, the price range in which LPs would expect to see the most volume -\nand consequently earn the most fees.\nWith v3, liquidity providers may concentrate their capital to smaller price intervals than (0, \u221e). In a stablecoin/stablecoin", "metadata": {"page_number": 73, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0512bb44eb51", "text": "and consequently earn the most fees.\nWith v3, liquidity providers may concentrate their capital to smaller price intervals than (0, \u221e). In a stablecoin/stablecoin\npair, for example, an LP  may choose to allocate capital solely to the 0.99 - 1.01 range. As a result, traders are of fered deeper\nliquidity around the mid-price, and LPs earn more trading fees with their capital. We call liquidity concentrated to a finite\ninterval a position. LPs may have many dif ferent positions per pool, creating individualized price curves that reflect the\npreferences of each LP .\nActive Liquidity  \nAs the price of an asset rises or falls, it may exit the price bounds that LPs have set in a position. When the price exits a\nposition's interval, the position's liquidity is no longer active and no longer earns fees.\nAs price moves in one direction, LPs gain more of the one asset as swappers demand the other , until their entire liquidity", "metadata": {"page_number": 73, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "31da51d27271", "text": "position's interval, the position's liquidity is no longer active and no longer earns fees.\nAs price moves in one direction, LPs gain more of the one asset as swappers demand the other , until their entire liquidity\nconsists of only one asset. (In v2, we don't typically see this behavior because LPs rarely reach the upper or lower bound of\nthe price of two assets, i.e., 0 and \u221e). If the price ever reenters the interval, the liquidity becomes active again, and in-range\nLPs begin earning fees once more.\nImportantly , LPs are free to create as many positions as they see fit, each with its own price interval. Concentrated liquidity\nserves as a mechanism to let the market decide what a sensible distribution of liquidity is, as rational LPs are incentivize to\nconcentrate their liquidity while ensuring that their liquidity remains active.0:00", "metadata": {"page_number": 73, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3f8ce8cfd4b5", "text": "Ticks \nTo achieve concentrated liquidity , the once continuous spectrum of price space has been partitioned with ticks.\nTicks are the boundaries between discrete areas in price space. Ticks are spaced such that an increase or decrease of 1 tick\nrepresents a 0.01% increase or decrease in price at any point in price space.\nTicks function as boundaries for liquidity positions. When a position is created, the provider must choose the lower and\nupper tick that will represent their position's borders.\nAs the spot price changes during swapping, the pool contract will continuously exchange the outbound asset for the inbound,\nprogressively using all the liquidity available within the current tick interval1 until the next tick is reached. At this point, the\ncontract switches to a new tick and activates any dormant liquidity within a position that has a boundary at the newly active\ntick.\nWhile each pool has the same number of underlying ticks, in practice only a portion of them are able to serve as active ticks.", "metadata": {"page_number": 74, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "211b689f9c07", "text": "contract switches to a new tick and activates any dormant liquidity within a position that has a boundary at the newly active\ntick.\nWhile each pool has the same number of underlying ticks, in practice only a portion of them are able to serve as active ticks.\nDue to the nature of the v3 smart contracts, tick spacing is directly correlated to the swap fee. Lower fee tiers allow closer\npotentially active ticks, and higher fees allow a relatively wider spacing of potential active ticks.\nWhile inactive ticks have no impact on transaction cost during swaps, crossing an active tick does increase the cost of the\ntransaction in which it is crossed, as the tick crossing will activate the liquidity within any new positions using the given tick\nas a border .\nIn areas where capital ef ficiency is paramount, such as stable coin pairs, narrower tick spacing increases the granularity of\nliquidity provisioning and will likely lower price impact when swapping - the result being significantly improved prices for\nstable coin swaps.", "metadata": {"page_number": 74, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4f121629741b", "text": "In areas where capital ef ficiency is paramount, such as stable coin pairs, narrower tick spacing increases the granularity of\nliquidity provisioning and will likely lower price impact when swapping - the result being significantly improved prices for\nstable coin swaps.\nFor more information on fee levels and their correlation to tick spacing, see the whitepaper .\n1. Tick interval refers to the area of price space between two nearest active ticks \u21a9\nEdit this page\nHelpful?\nPrevious\nThe Uniswap Protocol\nNext\nFees\nIntroduction\nActive Liquidity\nTicks\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 74, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d3aad82248c8", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 75, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "732681c9b5f6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\nOverview\nGuides\nConnect to Uniswap\nPool Liquidity\nTrade Tokens\nCustom Linking\nIframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nConnect to UniswapHelpful?", "metadata": {"page_number": 76, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3c0f08164b6c", "text": "Iframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nConnect to UniswapHelpful?\nOn this page\nConnect to Uniswap\nThe Uniswap smart contracts exist on the Ethereum blockchain. Use ethers.js  or web3.js  to connect your website to\nEthereum. Users will need a web3-enabled browser . On desktop this means using the MetaMask  extension or something\nsimilar . On mobile, web3-compatible browsers include Trust Wallet and Coinbase Wallet. See ethereum.or g to learn more.\nFactory Contract", "metadata": {"page_number": 76, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8a5216d8cea2", "text": "The Uniswap factory contract  can be used to create exchange contracts for any ERC20 token that does not already have one.\nIt also functions as a registry of ERC20 tokens that have been added to the system, and the exchange with which they are\nassociated.\nThe factory contract can be instantiated using the factory address and ABI:\nFactory Addr ess \n// mainnet\nconst factory = '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95'\n// testnets\nconst ropsten = '0x9c83dCE8CA20E9aAF9D3efc003b2ea62aBC08351'\nconst rinkeby = '0xf5D915570BC477f9B8D6C0E980aA81757A3AaC36'", "metadata": {"page_number": 77, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "080f15cc0f90", "text": "const rinkeby = '0xf5D915570BC477f9B8D6C0E980aA81757A3AaC36'\nconst kovan = '0xD3E51Ef092B2845f10401a0159B2B96e8B6c3D30'\nconst g\u00f6rli = '0x6Ce570d02D73d4c384b46135E87f8C592A8c86dA'\nCopy\nFactory Interface \nCreating the factory interface in web3 requires the factory addr ess and the factory ABI:\nconst factoryABI = [\n  {\n    name : 'NewExchange' ,\n    inputs : [\n      { type: 'address' , name: 'token', indexed : true },\n      { type: 'address' , name: 'exchange' , indexed : true },\n    ],", "metadata": {"page_number": 77, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "582abf3c59d5", "text": "inputs : [\n      { type: 'address' , name: 'token', indexed : true },\n      { type: 'address' , name: 'exchange' , indexed : true },\n    ],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : 'initializeFactory' ,\n    outputs : [],\n    inputs : [{ type: 'address' , name: 'template'  }],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 35725,\n  },\n  {\n    name : 'createExchange' ,\n    outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [{ type: 'address' , name: 'token' }],\n    constant : false,\n    payable : false,", "metadata": {"page_number": 77, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac979dc55912", "text": "outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [{ type: 'address' , name: 'token' }],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 187911,\n  },\n  {\n    name : 'getExchange' ,\n    outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [{ type: 'address' , name: 'token' }],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 715,\n  },\n  {\n    name : 'getToken' ,\n    outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [{ type: 'address' , name: 'exchange'  }],", "metadata": {"page_number": 77, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6c3d2ec1de53", "text": "{\n    name : 'getToken' ,\n    outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [{ type: 'address' , name: 'exchange'  }],\n    constant : true,\n    payable : false,", "metadata": {"page_number": 77, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "17f482c9b04f", "text": "type : 'function' ,\n    gas: 745,\n  },\n  {\n    name : 'getTokenWithId' ,\n    outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [{ type: 'uint256' , name: 'token_id'  }],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 736,\n  },\n  {\n    name : 'exchangeTemplate' ,\n    outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 633,\n  },\n  {\n    name : 'tokenCount' ,", "metadata": {"page_number": 78, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2578d1b650a9", "text": "constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 633,\n  },\n  {\n    name : 'tokenCount' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 663,\n  },\n]\nCopy\nconst factoryContract = new web3.eth.Contract (factoryABI , factoryAddress )\nCopy\nExchange Contracts\nGet Exchange Addr ess \nThere is a separate exchange contract for every ERC20 token. The getExchange  method in the factory contract can be used\nto find the Ethereum address associated with an ERC20 token address.", "metadata": {"page_number": 78, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3758b314739c", "text": "Exchange Contracts\nGet Exchange Addr ess \nThere is a separate exchange contract for every ERC20 token. The getExchange  method in the factory contract can be used\nto find the Ethereum address associated with an ERC20 token address.\nconst exchangeAddress = factoryContract .methods.getExchange (tokenAddress )\nCopy\nIf the return value is 0x0000000000000000000000000000000000000000  the token does not yet have an exchange.\nExchange Interface  \nCreating an exchange interface in web3 requires the exchange addr ess and the exchange ABI:\nconst exchangeABI = [\n  {\n    name : 'TokenPurchase' ,\n    inputs : [\n      { type: 'address' , name: 'buyer', indexed : true },\n      { type: 'uint256' , name: 'eth_sold' , indexed : true },", "metadata": {"page_number": 78, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e50039038c2a", "text": "inputs : [\n      { type: 'address' , name: 'buyer', indexed : true },\n      { type: 'uint256' , name: 'eth_sold' , indexed : true },\n      { type: 'uint256' , name: 'tokens_bought' , indexed : true },\n    ],\n    anonymous : false,", "metadata": {"page_number": 78, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b2222fdf6fd", "text": "type : 'event',\n  },\n  {\n    name : 'EthPurchase' ,\n    inputs : [\n      { type: 'address' , name: 'buyer', indexed : true },\n      { type: 'uint256' , name: 'tokens_sold' , indexed : true },\n      { type: 'uint256' , name: 'eth_bought' , indexed : true },\n    ],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : 'AddLiquidity' ,\n    inputs : [\n      { type: 'address' , name: 'provider' , indexed : true },\n      { type: 'uint256' , name: 'eth_amount' , indexed : true },\n      { type: 'uint256' , name: 'token_amount' , indexed : true },\n    ],", "metadata": {"page_number": 79, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2611f0db9473", "text": "{ type: 'uint256' , name: 'eth_amount' , indexed : true },\n      { type: 'uint256' , name: 'token_amount' , indexed : true },\n    ],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : 'RemoveLiquidity' ,\n    inputs : [\n      { type: 'address' , name: 'provider' , indexed : true },\n      { type: 'uint256' , name: 'eth_amount' , indexed : true },\n      { type: 'uint256' , name: 'token_amount' , indexed : true },\n    ],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : 'Transfer' ,\n    inputs : [", "metadata": {"page_number": 79, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "92be830204f6", "text": "],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : 'Transfer' ,\n    inputs : [\n      { type: 'address' , name: '_from', indexed : true },\n      { type: 'address' , name: '_to', indexed : true },\n      { type: 'uint256' , name: '_value' , indexed : false },\n    ],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : 'Approval' ,\n    inputs : [\n      { type: 'address' , name: '_owner' , indexed : true },\n      { type: 'address' , name: '_spender' , indexed : true },\n      { type: 'uint256' , name: '_value' , indexed : false },\n    ],", "metadata": {"page_number": 79, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "63a75200efba", "text": "{ type: 'address' , name: '_spender' , indexed : true },\n      { type: 'uint256' , name: '_value' , indexed : false },\n    ],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : 'setup',\n    outputs : [],\n    inputs : [{ type: 'address' , name: 'token_addr'  }],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 175875,\n  },\n  {\n    name : 'addLiquidity' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'min_liquidity'  },", "metadata": {"page_number": 79, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b748554771a4", "text": "outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'min_liquidity'  },\n      { type: 'uint256' , name: 'max_tokens'  },\n      { type: 'uint256' , name: 'deadline'  },\n    ],\n    constant : false,", "metadata": {"page_number": 79, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "efdf55b5163a", "text": "payable : true,\n    type : 'function' ,\n    gas: 82605,\n  },\n  {\n    name : 'removeLiquidity' ,\n    outputs : [\n      { type: 'uint256' , name: 'out' },\n      { type: 'uint256' , name: 'out' },\n    ],\n    inputs : [\n      { type: 'uint256' , name: 'amount'  },\n      { type: 'uint256' , name: 'min_eth'  },\n      { type: 'uint256' , name: 'min_tokens'  },\n      { type: 'uint256' , name: 'deadline'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 116814,\n  },", "metadata": {"page_number": 80, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d751b718c1c", "text": "],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 116814,\n  },\n  {\n    name : '__default__' ,\n    outputs : [],\n    inputs : [],\n    constant : false,\n    payable : true,\n    type : 'function' ,\n  },\n  {\n    name : 'ethToTokenSwapInput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'min_tokens'  },\n      { type: 'uint256' , name: 'deadline'  },\n    ],\n    constant : false,\n    payable : true,\n    type : 'function' ,", "metadata": {"page_number": 80, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "139337332de5", "text": "{ type: 'uint256' , name: 'deadline'  },\n    ],\n    constant : false,\n    payable : true,\n    type : 'function' ,\n    gas: 12757,\n  },\n  {\n    name : 'ethToTokenTransferInput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'min_tokens'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },\n    ],\n    constant : false,\n    payable : true,\n    type : 'function' ,\n    gas: 12965,\n  },\n  {\n    name : 'ethToTokenSwapOutput' ,", "metadata": {"page_number": 80, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "afdd3165f5e8", "text": "constant : false,\n    payable : true,\n    type : 'function' ,\n    gas: 12965,\n  },\n  {\n    name : 'ethToTokenSwapOutput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_bought'  },\n      { type: 'uint256' , name: 'deadline'  },\n    ],\n    constant : false,\n    payable : true,\n    type : 'function' ,\n    gas: 50455,\n  },\n  {\n    name : 'ethToTokenTransferOutput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [", "metadata": {"page_number": 80, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9a3b263c3092", "text": "{ type: 'uint256' , name: 'tokens_bought'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },\n    ],\n    constant : false,\n    payable : true,\n    type : 'function' ,\n    gas: 50663,\n  },\n  {\n    name : 'tokenToEthSwapInput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_sold'  },\n      { type: 'uint256' , name: 'min_eth'  },\n      { type: 'uint256' , name: 'deadline'  },\n    ],\n    constant : false,\n    payable : false,", "metadata": {"page_number": 81, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b51f06f0f9a5", "text": "{ type: 'uint256' , name: 'deadline'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 47503,\n  },\n  {\n    name : 'tokenToEthTransferInput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_sold'  },\n      { type: 'uint256' , name: 'min_eth'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 47712,", "metadata": {"page_number": 81, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bedb5c74265e", "text": "{ type: 'address' , name: 'recipient'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 47712,\n  },\n  {\n    name : 'tokenToEthSwapOutput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'eth_bought'  },\n      { type: 'uint256' , name: 'max_tokens'  },\n      { type: 'uint256' , name: 'deadline'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 50175,\n  },\n  {", "metadata": {"page_number": 81, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0517468e120b", "text": "],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 50175,\n  },\n  {\n    name : 'tokenToEthTransferOutput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'eth_bought'  },\n      { type: 'uint256' , name: 'max_tokens'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 50384,\n  },\n  {", "metadata": {"page_number": 81, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5874ce2ff485", "text": "],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 50384,\n  },\n  {\n    name : 'tokenToTokenSwapInput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_sold'  },\n      { type: 'uint256' , name: 'min_tokens_bought'  },\n      { type: 'uint256' , name: 'min_eth_bought'  },", "metadata": {"page_number": 81, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "02a954c9cfb9", "text": "{ type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'token_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 51007,\n  },\n  {\n    name : 'tokenToTokenTransferInput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_sold'  },\n      { type: 'uint256' , name: 'min_tokens_bought'  },\n      { type: 'uint256' , name: 'min_eth_bought'  },\n      { type: 'uint256' , name: 'deadline'  },", "metadata": {"page_number": 82, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ba30f55eb57f", "text": "{ type: 'uint256' , name: 'min_eth_bought'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },\n      { type: 'address' , name: 'token_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 51098,\n  },\n  {\n    name : 'tokenToTokenSwapOutput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_bought'  },\n      { type: 'uint256' , name: 'max_tokens_sold'  },", "metadata": {"page_number": 82, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fb48e1f99fe8", "text": "inputs : [\n      { type: 'uint256' , name: 'tokens_bought'  },\n      { type: 'uint256' , name: 'max_tokens_sold'  },\n      { type: 'uint256' , name: 'max_eth_sold'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'token_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 54928,\n  },\n  {\n    name : 'tokenToTokenTransferOutput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_bought'  },", "metadata": {"page_number": 82, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0d1b0bb1904", "text": "outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_bought'  },\n      { type: 'uint256' , name: 'max_tokens_sold'  },\n      { type: 'uint256' , name: 'max_eth_sold'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },\n      { type: 'address' , name: 'token_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 55019,\n  },\n  {\n    name : 'tokenToExchangeSwapInput' ,", "metadata": {"page_number": 82, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dcb0fe6eb72a", "text": "constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 55019,\n  },\n  {\n    name : 'tokenToExchangeSwapInput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_sold'  },\n      { type: 'uint256' , name: 'min_tokens_bought'  },\n      { type: 'uint256' , name: 'min_eth_bought'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'exchange_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 49342,", "metadata": {"page_number": 82, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33ce7bd6173b", "text": "{ type: 'address' , name: 'exchange_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 49342,\n  },", "metadata": {"page_number": 82, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f1eb620f6a2e", "text": "{\n    name : 'tokenToExchangeTransferInput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_sold'  },\n      { type: 'uint256' , name: 'min_tokens_bought'  },\n      { type: 'uint256' , name: 'min_eth_bought'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },\n      { type: 'address' , name: 'exchange_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 49532,\n  },\n  {", "metadata": {"page_number": 83, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "72526b87e3cf", "text": "],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 49532,\n  },\n  {\n    name : 'tokenToExchangeSwapOutput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_bought'  },\n      { type: 'uint256' , name: 'max_tokens_sold'  },\n      { type: 'uint256' , name: 'max_eth_sold'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'exchange_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,", "metadata": {"page_number": 83, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "21784a245379", "text": "{ type: 'address' , name: 'exchange_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 53233,\n  },\n  {\n    name : 'tokenToExchangeTransferOutput' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'uint256' , name: 'tokens_bought'  },\n      { type: 'uint256' , name: 'max_tokens_sold'  },\n      { type: 'uint256' , name: 'max_eth_sold'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },", "metadata": {"page_number": 83, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f8c0279254ce", "text": "{ type: 'uint256' , name: 'max_eth_sold'  },\n      { type: 'uint256' , name: 'deadline'  },\n      { type: 'address' , name: 'recipient'  },\n      { type: 'address' , name: 'exchange_addr'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 53423,\n  },\n  {\n    name : 'getEthToTokenInputPrice' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [{ type: 'uint256' , name: 'eth_sold'  }],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 5542,\n  },\n  {", "metadata": {"page_number": 83, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ecd636469e1", "text": "constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 5542,\n  },\n  {\n    name : 'getEthToTokenOutputPrice' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [{ type: 'uint256' , name: 'tokens_bought'  }],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 6872,\n  },\n  {\n    name : 'getTokenToEthInputPrice' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [{ type: 'uint256' , name: 'tokens_sold'  }],\n    constant : true,", "metadata": {"page_number": 83, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f81ae90bafcf", "text": "payable : false,\n    type : 'function' ,\n    gas: 5637,\n  },\n  {\n    name : 'getTokenToEthOutputPrice' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [{ type: 'uint256' , name: 'eth_bought'  }],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 6897,\n  },\n  {\n    name : 'tokenAddress' ,\n    outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1413,\n  },\n  {", "metadata": {"page_number": 84, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "845ac83ef01d", "text": "inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1413,\n  },\n  {\n    name : 'factoryAddress' ,\n    outputs : [{ type: 'address' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1443,\n  },\n  {\n    name : 'balanceOf' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [{ type: 'address' , name: '_owner'  }],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1645,\n  },\n  {", "metadata": {"page_number": 84, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e3e6a36e8cce", "text": "constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1645,\n  },\n  {\n    name : 'transfer' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_to' },\n      { type: 'uint256' , name: '_value'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 75034,\n  },\n  {\n    name : 'transferFrom' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_from' },", "metadata": {"page_number": 84, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2273d1f8d912", "text": "{\n    name : 'transferFrom' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_from' },\n      { type: 'address' , name: '_to' },\n      { type: 'uint256' , name: '_value'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 110907,\n  },\n  {\n    name : 'approve' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_spender'  },", "metadata": {"page_number": 84, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1fbb1e82f9ff", "text": "{ type: 'uint256' , name: '_value'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 38769,\n  },\n  {\n    name : 'allowance' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_owner'  },\n      { type: 'address' , name: '_spender'  },\n    ],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1925,\n  },\n  {\n    name : 'name',\n    outputs : [{ type: 'bytes32' , name: 'out' }],\n    inputs : [],", "metadata": {"page_number": 85, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "80b34e7487f1", "text": "gas: 1925,\n  },\n  {\n    name : 'name',\n    outputs : [{ type: 'bytes32' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1623,\n  },\n  {\n    name : 'symbol' ,\n    outputs : [{ type: 'bytes32' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1653,\n  },\n  {\n    name : 'decimals' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,", "metadata": {"page_number": 85, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1206ddb4907b", "text": "name : 'decimals' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1683,\n  },\n  {\n    name : 'totalSupply' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1713,\n  },\n]\nCopy\nconst exchangeContract = new web3.eth.Contract (exchangeABI , exchangeAddress )\nCopy\nToken Contracts\nSome Uniswap interactions require making calls directly to ERC20 token contracts rather than the exchanges with which", "metadata": {"page_number": 85, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e1ba111021a2", "text": "const exchangeContract = new web3.eth.Contract (exchangeABI , exchangeAddress )\nCopy\nToken Contracts\nSome Uniswap interactions require making calls directly to ERC20 token contracts rather than the exchanges with which\nthey are associated.", "metadata": {"page_number": 85, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "59b1b2112131", "text": "Get Token Addr ess \nThe getToken  method in the factory contract can be used to find the ERC20 token address associated with an exchange\ncontract. There is no barrier of entry for adding an ERC20 token to Uniswap or checks on the validity of the token contracts.\nFrontend interfaces should maintain a list of valid ERC20 tokens that users can safely trade or allow users to paste in\narbitrary addresses.\nconst tokenAddress = factoryContract .methods.getToken (exchangeAddress )\nCopy\nIf the return value is 0x0000000000000000000000000000000000000000  the input address is not a Uniswap exchange.\nToken Interface  \nCreating a token interface in web3 requires the token addr ess and the token ABI:\nconst tokenABI = [\n  {\n    name : 'Transfer' ,\n    inputs : [", "metadata": {"page_number": 86, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5d03ed0e1d0b", "text": "Token Interface  \nCreating a token interface in web3 requires the token addr ess and the token ABI:\nconst tokenABI = [\n  {\n    name : 'Transfer' ,\n    inputs : [\n      { type: 'address' , name: '_from', indexed : true },\n      { type: 'address' , name: '_to', indexed : true },\n      { type: 'uint256' , name: '_value' , indexed : false },\n    ],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : 'Approval' ,\n    inputs : [\n      { type: 'address' , name: '_owner' , indexed : true },\n      { type: 'address' , name: '_spender' , indexed : true },", "metadata": {"page_number": 86, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3f2179511b18", "text": "name : 'Approval' ,\n    inputs : [\n      { type: 'address' , name: '_owner' , indexed : true },\n      { type: 'address' , name: '_spender' , indexed : true },\n      { type: 'uint256' , name: '_value' , indexed : false },\n    ],\n    anonymous : false,\n    type : 'event',\n  },\n  {\n    name : '__init__' ,\n    outputs : [],\n    inputs : [\n      { type: 'bytes32' , name: '_name' },\n      { type: 'bytes32' , name: '_symbol'  },\n      { type: 'uint256' , name: '_decimals'  },\n      { type: 'uint256' , name: '_supply'  },\n    ],\n    constant : false,", "metadata": {"page_number": 86, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dccbdd5eff56", "text": "{ type: 'uint256' , name: '_decimals'  },\n      { type: 'uint256' , name: '_supply'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'constructor' ,\n  },\n  {\n    name : 'deposit' ,\n    outputs : [],\n    inputs : [],\n    constant : false,\n    payable : true,\n    type : 'function' ,\n    gas: 74279,\n  },\n  {\n    name : 'withdraw' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [{ type: 'uint256' , name: '_value'  }],\n    constant : false,\n    payable : false,", "metadata": {"page_number": 86, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "106c3f5c583f", "text": "type : 'function' ,\n    gas: 108706,\n  },\n  {\n    name : 'totalSupply' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 543,\n  },\n  {\n    name : 'balanceOf' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [{ type: 'address' , name: '_owner'  }],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 745,\n  },\n  {\n    name : 'transfer' ,", "metadata": {"page_number": 87, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "200e94d93d7b", "text": "constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 745,\n  },\n  {\n    name : 'transfer' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_to' },\n      { type: 'uint256' , name: '_value'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 74698,\n  },\n  {\n    name : 'transferFrom' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_from' },", "metadata": {"page_number": 87, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0349441424dc", "text": "{\n    name : 'transferFrom' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_from' },\n      { type: 'address' , name: '_to' },\n      { type: 'uint256' , name: '_value'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 110600,\n  },\n  {\n    name : 'approve' ,\n    outputs : [{ type: 'bool', name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_spender'  },\n      { type: 'uint256' , name: '_value'  },\n    ],\n    constant : false,", "metadata": {"page_number": 87, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "97628654cdfc", "text": "inputs : [\n      { type: 'address' , name: '_spender'  },\n      { type: 'uint256' , name: '_value'  },\n    ],\n    constant : false,\n    payable : false,\n    type : 'function' ,\n    gas: 37888,\n  },\n  {\n    name : 'allowance' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [\n      { type: 'address' , name: '_owner'  },\n      { type: 'address' , name: '_spender'  },\n    ],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 1025,\n  },", "metadata": {"page_number": 87, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3e9152bd0d6a", "text": "{\n    name : 'name',\n    outputs : [{ type: 'bytes32' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 723,\n  },\n  {\n    name : 'symbol' ,\n    outputs : [{ type: 'bytes32' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 753,\n  },\n  {\n    name : 'decimals' ,\n    outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,", "metadata": {"page_number": 88, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b8de33a14c29", "text": "outputs : [{ type: 'uint256' , name: 'out' }],\n    inputs : [],\n    constant : true,\n    payable : false,\n    type : 'function' ,\n    gas: 783,\n  },\n]\nCopy\nconst tokenContract = new web3.eth.Contract (tokenABI , tokenAddress )\nCopy\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nPool Liquidity\nFactory Address\nFactory Interface\nGet Exchange Address\nExchange Interface\nGet Token Address\nToken Interface\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 88, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "97cc7e804716", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 88, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f0886d7e42ee", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 89, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc4944635a8f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nOverview\nGuides\nConnecting to Wallets\nSupported Connectors\nSwitching Chains\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nweb3-react\nGuides\nConnecting to WalletsHelpful?\nOn this page\nConnecting to Wallets\nIntroduction", "metadata": {"page_number": 90, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "322d424ab881", "text": "V2 SDK\nV1 SDK\n\u0000\nweb3-react\nGuides\nConnecting to WalletsHelpful?\nOn this page\nConnecting to Wallets\nIntroduction  \nThis guide will cover how to connect wallets with web3-react . It is based on the web3-react  example  found in the\nUniswap code examples repository . To run this example, check out the examples's README  and follow the setup\ninstructions.\nIn this example we will walk through setting up web3-react  and connecting the most popular browser -injected connector ,\nMetaMask , using @web3-react/metamask .\nThe input parameters to this guide are the chains that we want our app to be able to connect to and their RPC URLs.\nThe guide will cover :\n1. Creating a web3-react  Web3ReactProvider\n2. Building a web3-react  InjectedConnector", "metadata": {"page_number": 90, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6bf78a95bcc3", "text": "3. Connecting and disconnecting the application to the connector\nAt the end of the guide, we should be able to connect and disconnect your dApp to a MetaMask connector .\nFor this guide, the following web3-react  packages are used:\n@web3-react/core\n@web3-react/types\n@web3-react/metamask\ninfo\nThis guide uses web3-react  version 8, which is a beta version.\nThese will be automatically installed by following the example's README .\nThe core code of this guide can be found in Web3ContextProvider  and InjectedConnector .\nCreating a Web3ReactProvider  \nTo be able to interact with the methods that web3-react  offers, we first need to setup a Web3ReactProvider  and wrap our\napplication in it. web3-react  uses a React Context  to allow us to use the exposed hooks without additional configuration.", "metadata": {"page_number": 91, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1446d9db42fd", "text": "To be able to interact with the methods that web3-react  offers, we first need to setup a Web3ReactProvider  and wrap our\napplication in it. web3-react  uses a React Context  to allow us to use the exposed hooks without additional configuration.\nTo start, we create a React component called Web3ContextProvider  in order to wrap the logic of configuring the\nWeb3ReactProvider . In this component, we first import Web3ReactProvider  from @web3-react/core .\nThe component receives just one prop which is the children  to which it will be providing the Context :\nDefining the Web3React component\nloading...\nCopy\nView on Github\nWe then implement the component by rendering the imported Web3ReactProvider  with the children  within that:\nImplementing the component\nloading...\nCopy\nView on Github", "metadata": {"page_number": 91, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6535e5dbb699", "text": "View on Github\nWe then implement the component by rendering the imported Web3ReactProvider  with the children  within that:\nImplementing the component\nloading...\nCopy\nView on Github\nNote that we map our list of Connections  to a tuple  of the connector  and hooks  of the connection. The third element of a\nConnection  refers to the type of Connection  being established, which we will later use to keep track of the actively\nconnected wallet.\nFinally , having created the Web3ContextProvider  component, we can navigate to our index file  and wrap the whole\napplication with it:\nWrapping our app with the web3 context\nloading...\nCopy\nView on Github\nBuilding an Injected Connector", "metadata": {"page_number": 91, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eb879811488d", "text": "The only parameter that we provided to the Web3ReactProvider  component is a list of prioritized connectors, declared as\nPRIORITIZED_CONNECTORS . The prioritization ordering is with regards to which connector we want to be active when more\nthan one connector is connected to our application. The list is defined inside our connectors module:\nCreating the prioritized Connectors list\nloading...\nCopy\nView on Github\nEach one of those connectors lives within its own file, and they all follow a similar setup pattern.\nAn example of a connector in the list is the InjectedConnector , which supports wallets that inject an Ether eum Pr ovider\ninto the browser window . The most popular example of an injected connector is the MetaMask  browser extension. To set it\nup, we import initializeConnector  function from core and the MetaMask  type from metamask :\nImporting Connector dependencies\nloading...\nCopy", "metadata": {"page_number": 92, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "22aaeab29008", "text": "up, we import initializeConnector  function from core and the MetaMask  type from metamask :\nImporting Connector dependencies\nloading...\nCopy\nView on Github\nWe then utilize the templated initializeConnector  function with MetaMask  as the type ar gument:\nInitializing the MetaMask connector\nloading...\nCopy\nView on Github\nBy passing in MetaMask  as the type ar gument, we define the function's required input parameters. In this case, the only\nparameter we need to pass is an instance of Metamask , which receives the actions  and onError  parameters. The first\nparameter defines the actions that web3-react  performs on its local store for the connector (this usually can be passed\nthrough without modification), while the second parameter is the callback invoked when an error occurs.", "metadata": {"page_number": 92, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2caf04d73ba3", "text": "parameter defines the actions that web3-react  performs on its local store for the connector (this usually can be passed\nthrough without modification), while the second parameter is the callback invoked when an error occurs.\nThe return type of the function is a tuple of the initialized Connector  and the Hooks  that we can use on it. Using this tuple,\nwe create an instance of a Connection  type, by setting the type  property to INJECTED :\nCreating a connection instance\nloading...\nCopy\nView on Github\nFinally , we return the instance of Connection  we created, which is added to the list of prioritized connectors.\ninfo\nFor help on creating the rest of the supported connectors of this examples, please visit our connectors  page!\nConnecting and disconnecting the application to the connector  \nHaving built our InjectedConnector , we can now use it in the Context that allows our application to use that connector:\nCreating the Option component\nloading...", "metadata": {"page_number": 92, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "254ca8f2499c", "text": "Copy\nView on Github\nThe component receives 5 parameters:\nisEnabled  determines whether the connector is eligible to be activated\nisConnected  determines whether the connector is currently active\nconnectionType  determines the ConnectionType\nonActivate  is called once the component has established a connection\nonDeactivate  is called once the component has disconnected\nIn the case of MetaMask , when declaring the InjectedConnector  we pass the connector -specific ar guments:\nCreating an injected connector\nloading...\nCopy\nView on Github\nThen, in the html  portion of the Option , we can figure out whether we want the current Option 's action button to be\ndisabled, and whether clicking the button would result in the connector being connected or disconnected:\nThe component user interface\nloading...\nCopy\nView on Github", "metadata": {"page_number": 93, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a9ba374ff6cb", "text": "disabled, and whether clicking the button would result in the connector being connected or disconnected:\nThe component user interface\nloading...\nCopy\nView on Github\nFinally , we also have enough information to figure out what action to take when the button is clicked. In the case that the\nclick triggers a connection:\nOn connecting to a Connector\nloading...\nCopy\nView on Github\nTo connect our wallet, all we need to do is to call the tryActivateConnector  function and pass it the InjectedConnector .\nWe then call the onActivate  callback, which makes the InjectedConnector  the active connector in our application's state.\ntryActivateConnector  takes as its ar gument the connector that we want to activate, and attempts to call activate  on it. If\nthis activation succeeds, it returns the new ConnectionType :\nThe implementation of tryActivateConnector\nloading...", "metadata": {"page_number": 93, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a93ea5615961", "text": "this activation succeeds, it returns the new ConnectionType :\nThe implementation of tryActivateConnector\nloading...\nCopy\nView on Github\nIn the case that the click triggers a disconnection:\nOn disconnecting from a Connector\nloading...\nCopy\nView on Github", "metadata": {"page_number": 93, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a08f349b33d7", "text": "To disconnect, all we need to do is to call tryDeactivateConnector  and pass in it the InjectedConnector  we created\nbefore. We then call the onDeactivate  callback, which removes the InjectedConnector  as the currently active connector\nfrom our application's state.\ntryDeactivateConnector  takes as its ar gument the connector that we want to deactivate, and attempts to call deactivate\non it. If this deactivation succeeds, it resets the connector's state by calling resetState  and returns null :\nThe implementation of tryDeactivateConnector\nloading...\nCopy\nView on Github\nNext Steps  \nNow that we have gone through connecting and disconnecting from an InjectedConnector , we will learn how to connect\nand disconnect  from all the dif ferent types of connectors that web3-react  supports.\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 94, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f252ce5b3ada", "text": "and disconnect  from all the dif ferent types of connectors that web3-react  supports.\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nSupported Connectors\nIntroduction\nCreating a Web3ReactProvider\nBuilding an Injected Connector\nConnecting and disconnecting the application to the connector\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter", "metadata": {"page_number": 94, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e33b5d6d569e", "text": "Blog", "metadata": {"page_number": 95, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f619a54f0306", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nOverview\nGuides\nConnecting to Wallets\nSupported Connectors\nSwitching Chains\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nweb3-react\nGuides\nSupported ConnectorsHelpful?\nOn this page\nSupported Connectors\nIntroduction", "metadata": {"page_number": 96, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ffbe8a9253df", "text": "V2 SDK\nV1 SDK\n\u0000\nweb3-react\nGuides\nSupported ConnectorsHelpful?\nOn this page\nSupported Connectors\nIntroduction  \nThis guide will cover how to connect our dApp to all the dif ferent connectors that web3-react  supports. It is based on the\nweb3-react  example , found in the Uniswap code examples repository . To run this example, check out the examples's\nREADME  and follow the setup instructions.\nIn this example we will cover connecting our dApp to the following connectors:\nCoinbase wallet\nWalletConnect wallet\nNetwork\nGnosis safe\ninfo", "metadata": {"page_number": 96, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "da016eb881ad", "text": "For help on setting up web3-react  and interacting with a MetaMask wallet, please visit our connecting to wallets  page!\nThe input parameters to this guide are the chains that we want our dApp to be able to connect to and their RPC URLs.\nThe guide will cover :\n1. Building a Coinbase Wallet connector\n2. Building a WalletConnect Wallet connector\n3. Building a Network connector\n4. Building a Gnosis Safe connector\nAt the end of the guide, we should be able to connect and disconnect the application to the dif ferent connectors listed above.\nFor this guide, the following web3-react  packages are used:\n@web3-react/core\n@web3-react/types\n@web3-react/coinbase-wallet\n@web3-react/walletconnect\n@web3-react/network\n@web3-react/gnosis-safe\ninfo", "metadata": {"page_number": 97, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8db15d2f8deb", "text": "@web3-react/coinbase-wallet\n@web3-react/walletconnect\n@web3-react/network\n@web3-react/gnosis-safe\ninfo\nThis guide uses web3-react  version 8, which is a beta version.\nThe core code of this guide can be found in the top level of our examples repository , under each connectors' name. For\nexample, the code for the Coinbase Wallet connector can be found in the the coinbase file .\nBuilding a Coinbase Wallet connector  \nThe second connector in the list of prioritized connectors that we provided  as a parameter to Web3ReactProvider  is the\nCoinbase W allet connector:\nCreating the prioritized Connectors list\nloading...\nCopy\nView on Github\nTo connect to a Coinbase W allet connector , we first need to install @web3-react/coinbase-wallet , as well as", "metadata": {"page_number": 97, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "47e4a1077697", "text": "loading...\nCopy\nView on Github\nTo connect to a Coinbase W allet connector , we first need to install @web3-react/coinbase-wallet , as well as\n@coinbase/wallet-sdk . Having installed the packages, we can import the CoinbaseWallet  class from @web3-\nreact/coinbase-wallet , as well as the initializeConnector  function from the @web3-react/core  package:\nImporting the Coinbase Wallet connector\nloading...\nCopy\nView on Github\nWe can now build our connector , supplying the required ar guments:\nInitializing the Coinbase Wallet Connector\nloading...\nCopy\nView on Github", "metadata": {"page_number": 97, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "62dfb5ae8ce6", "text": "We pass CoinbaseWallet  as the type ar gument to initializeConnector 's templated parameter . Similar to the case of the\nInjectedConnector , the CoinbaseWallet  class is a class that extends the AbstractConnector  class, which is part of the\n@web3-react/core  package. The parameter provided to initializeConnector  is a function that receives an actions\nobject, and expects an instance of CoinbaseWallet  (to match the type ar gument) to be returned.\nWe build the new CoinbaseWallet  instance by passing the actions  object, an options  object, and an onError  callback.\nonError  handles errors that occur during interaction with the connector , and options  is used to configure the connector . In\nour case, we pass the url, appName  and reloadOnDisconnect  options: url is the RPC URL  to connect to that was provided\nas an ar gument to the example application, appName  is the name of our application, and reloadOnDisconnect  is a boolean", "metadata": {"page_number": 98, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ff64a4eeb75c", "text": "as an ar gument to the example application, appName  is the name of our application, and reloadOnDisconnect  is a boolean\nthat indicates whether the application should reload when the user disconnects from the wallet.\nAfter building the connector , we use its two return types, the Connector  and it's respective hooks, and build a Connection\nobject by setting the connection's type as the Coinbase wallet:\nBuilding the Coinbase Wallet Connection\nloading...\nCopy\nView on Github\nHaving built the connector , all that remains is to build the user interface and supply it to our ConnectionOptions\ncomponent, just as we did with the InjectedConnector :\nBuilding the Coinbase Wallet component\nloading...\nCopy\nView on Github\nBuilding a WalletConnect Wallet connector  \nThe third connector in the list of prioritized connectors that we provided to Web3ReactProvider  is the WalletConnect Wallet", "metadata": {"page_number": 98, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ea44c1d8d1ca", "text": "Copy\nView on Github\nBuilding a WalletConnect Wallet connector  \nThe third connector in the list of prioritized connectors that we provided to Web3ReactProvider  is the WalletConnect Wallet\nconnector .\nTo connect to a WalletConnect Wallet connector , we first need to install @web3-react/walletconnect , as well as\n@walletconnect/ethereum-provider . Having installed the packages, we can import the WalletConnect  class from @web3-\nreact/walletconnect , as well as the initializeConnector  function from @web3-react/core  package:\nImporting the WalletConnect Wallet Connector\nloading...\nCopy\nView on Github\nWe can now build our connector , supplying the required ar guments:\nInitializing the WalletConnect Wallet Connector\nloading...\nCopy\nView on Github", "metadata": {"page_number": 98, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "423e088dc1d2", "text": "View on Github\nWe can now build our connector , supplying the required ar guments:\nInitializing the WalletConnect Wallet Connector\nloading...\nCopy\nView on Github\nThe main dif ference from the Coinbase Wallet connector lies in the ar guments that the WalletConnect  class requires to be\ninstantiated. web3-react  knows about this dif ference, as we passed the type ar gument WalletConnect  to\ninitializeConnector , thus specializing the type of AbstractConnector . In this case, the class receives three ar guments,\nincluding actions  and onError , identical to those supplied in the Coinbase Wallet connector case.", "metadata": {"page_number": 98, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "359afd1a8b27", "text": "The dif ference lies in the second ar gument, which is an options  object. In this case, we are passing the rpc parameter ,\nwhich is an object that maps the chain ID to the RPC URL  to connect to. We have already created this map in our constants\nfile using our example's parameters. The other option that we are passing is the qrcode , which is a boolean  that indicates\nwhether the QR code should be displayed in the browser . In our case, we are passing true  as we want to show the QR code.\nHaving built the connector , we just need to build the user interface to enable user interaction with the connector , and supply\nit to our ConnectionOptions :\nBuilding the WalletConnect Wallet component\nloading...\nCopy\nView on Github\nBuilding a Network connector  \nThe Network connector , alongside the Gnosis Safe connector , are two of the connectors that we do not surface through our", "metadata": {"page_number": 99, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "72c2b31004eb", "text": "loading...\nCopy\nView on Github\nBuilding a Network connector  \nThe Network connector , alongside the Gnosis Safe connector , are two of the connectors that we do not surface through our\nuser interface, but instead we connect to them programmatically . In contrast to the previous Connectors , these do not come\nwith any pre-built user interface for the user to interact with. We attempt to connect to them eagerly  in our\nWeb3ContextProvider  component through a hook:\nHook to connect eagerly\nloading...\nCopy\nView on Github\nThe useEagerlyConnect  hook is called in the Web3ContextProvider  component and attempts to connect to the Network\nConnector and the Gnosis Safe Connector . The hook is named eagerly  as it is called in the component's body as React ef fect\nwhen the component is first rendered. In the hook implementation we attempt to call web3-react 's connectEagerly", "metadata": {"page_number": 99, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4cabdce10743", "text": "Connector and the Gnosis Safe Connector . The hook is named eagerly  as it is called in the component's body as React ef fect\nwhen the component is first rendered. In the hook implementation we attempt to call web3-react 's connectEagerly\nfunction if it exists on the connector , otherwise we call activate  otherwise. The connectEagerly  function attempts to\nconnect our application to the connector , and fails silently  if it does not succeed:\nConnecting eagerly\nloading...\nCopy\nView on Github\nBefore eagerly connecting, we first need to initialize the connectors. We start by building the Network connector , and we\nfirst need to install @web3-react/network , and import the Network  class from it. Note how this Connect does not require\nany package besides its web3-react  package to function. We also need to import the initializeConnector  function from\n@web3-react/core :\nImporting the Network Connector\nloading...\nCopy", "metadata": {"page_number": 99, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "954451109751", "text": "any package besides its web3-react  package to function. We also need to import the initializeConnector  function from\n@web3-react/core :\nImporting the Network Connector\nloading...\nCopy\nView on Github\nWe can now build our connector , supplying the required ar guments:\nInitializing the Network Connector\nloading...\nCopy", "metadata": {"page_number": 99, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a7928bf39d07", "text": "View on Github\nThe main dif ference from the other connectors lies in the ar guments that the Network  class requires to be instantiated. web3-\nreact  knows about this dif ference, as we passed the type ar gument Network  to initializeConnector , thus specializing the\ntype of AbstractConnector . In this case, the class receives actions , which is identical to that supplied in the rest of the\nconnectors; urlMap , which is an object that maps the chain ID to the RPC URL  to connect to, which we have already created\nin our constants  file; and defaultChainId  which is the chain ID to connect to by default.\nAfter building, the connector , we can create a Connection  instance by supplying it the return value of the\ninitializeConnector  function, and the Network  class:\nCreating a Network connection\nloading...\nCopy\nView on Github\nAll that remains is to return the constructed Connection  instance.", "metadata": {"page_number": 100, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0a187ef49221", "text": "initializeConnector  function, and the Network  class:\nCreating a Network connection\nloading...\nCopy\nView on Github\nAll that remains is to return the constructed Connection  instance.\nBuilding a Gnosis Safe connector  \nSimilar to the Network connector , we build the Gnosis Safe connector . We start by first installing @web3-react/gnosis-\nsafe , and import the GnosisSafe  class from it. We also need to import the initializeConnector  function from @web3-\nreact/core :\nImporting the Gnosis Safe connector\nloading...\nCopy\nView on Github\nThe Gnosis Safe connector is the simplest of them all, as it does not require any additional parameterization other than\nactions :\nInitializing a Gnosis Safe Connector\nloading...\nCopy\nView on Github", "metadata": {"page_number": 100, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1dff9348283c", "text": "The Gnosis Safe connector is the simplest of them all, as it does not require any additional parameterization other than\nactions :\nInitializing a Gnosis Safe Connector\nloading...\nCopy\nView on Github\nHaving initialized the connector , we can now build the Connection  instance and return it:\nCreating a Gnosis Safe Connection\nloading...\nCopy\nView on Github\nNext steps  \nNow that we have gone through building all of the dif ferent types of supported connectors, we will learn how to switch\nchains .\nEdit this page\nHelpful?", "metadata": {"page_number": 100, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b05e6388e1a", "text": "Previous\nConnecting to Wallets\nNext\nSwitching Chains\nIntroduction\nBuilding a Coinbase Wallet connector\nBuilding a WalletConnect Wallet connector\nBuilding a Network connector\nBuilding a Gnosis Safe connector\nNext steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 101, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e5a2a58384b4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\nOverview\nGuides\nGetting Started\nTechnical Reference\nData\nComputation\nFormat\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nConstantsHelpful?\nConstants", "metadata": {"page_number": 102, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8548f56fab63", "text": "Format\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nConstantsHelpful?\nConstants\nBelow is an exhaustive list of all external constants used in the SDK.\nimport BigNumber  from 'bignumber.js'\nimport ERC20 from './abis/ERC20.json'\nimport FACTORY from './abis/FACTORY.json'\nimport EXCHANGE  from './abis/EXCHANGE.json'\nexport const ETH = 'ETH'\nexport enum SUPPORTED_CHAIN_ID  {\n  Mainnet = 1,", "metadata": {"page_number": 102, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d9e34c5c61f5", "text": "Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42,\n}\nexport const FACTORY_ADDRESS : { [key: number]: string } = {}\nexport const FACTORY_ABI : string = JSON.stringify (FACTORY)\nexport const EXCHANGE_ABI : string = JSON.stringify (EXCHANGE )\nexport enum TRADE_TYPE  {\n  ETH_TO_TOKEN  = 'ETH_TO_TOKEN' ,\n  TOKEN_TO_ETH  = 'TOKEN_TO_ETH' ,\n  TOKEN_TO_TOKEN  = 'TOKEN_TO_TOKEN' ,\n}\nexport enum TRADE_EXACT  {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT' ,\n}\nexport enum TRADE_METHODS  {\n  ethToTokenSwapInput = 'ethToTokenSwapInput' ,", "metadata": {"page_number": 103, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "69588d9e3ddc", "text": "INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT' ,\n}\nexport enum TRADE_METHODS  {\n  ethToTokenSwapInput = 'ethToTokenSwapInput' ,\n  ethToTokenTransferInput = 'ethToTokenTransferInput' ,\n  ethToTokenSwapOutput = 'ethToTokenSwapOutput' ,\n  ethToTokenTransferOutput = 'ethToTokenTransferOutput' ,\n  tokenToEthSwapInput = 'tokenToEthSwapInput' ,\n  tokenToEthTransferInput = 'tokenToEthTransferInput' ,\n  tokenToEthSwapOutput = 'tokenToEthSwapOutput' ,\n  tokenToEthTransferOutput = 'tokenToEthTransferOutput' ,\n  tokenToTokenSwapInput = 'tokenToTokenSwapInput' ,", "metadata": {"page_number": 103, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4fee0f722abc", "text": "tokenToEthTransferOutput = 'tokenToEthTransferOutput' ,\n  tokenToTokenSwapInput = 'tokenToTokenSwapInput' ,\n  tokenToTokenTransferInput = 'tokenToTokenTransferInput' ,\n  tokenToTokenSwapOutput = 'tokenToTokenSwapOutput' ,\n  tokenToTokenTransferOutput = 'tokenToTokenTransferOutput' ,\n}\nexport const TRADE_METHOD_IDS : { [key: string]: string } = {}\nexport enum FIXED_UNDERFLOW_BEHAVIOR  {\n  ZERO = 'ZERO',\n  LESS_THAN  = 'LESS_THAN' ,\n  ONE_DIGIT  = 'ONE_DIGIT' ,\n}\nC o p y\nEdit this page\nHelpful?\nPrevious\nTransact\nNext\nTypes\nDevelopers", "metadata": {"page_number": 103, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1b62ff3485c3", "text": "ONE_DIGIT  = 'ONE_DIGIT' ,\n}\nC o p y\nEdit this page\nHelpful?\nPrevious\nTransact\nNext\nTypes\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 103, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2c7a9ed34934", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 104, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8890b8a8cc62", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nCurrencyAmount\nEther\nFraction\nNativeCurrency\nPercent\nPrice\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nCurrencyAmountHelpful?", "metadata": {"page_number": 105, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "58929721874a", "text": "Price\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nCurrencyAmountHelpful?\nOn this page\nCurr encyAmount\n@uniswap/sdk-core  / Exports  / CurrencyAmount\nClass: Curr encyAmount<T >\nType parameters", "metadata": {"page_number": 105, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fe82bb9e327f", "text": "Name Type\nT extends Currency\nHierar chy \nFraction\n\u21b3 CurrencyAmount\nTable of contents  \nConstructors \nconstructor\nProperties \ncurrency\ndecimalScale\ndenominator\nnumerator\nAccessors \nasFraction\nquotient\nremainder\nwrapped\nMethods \nadd\ndivide\nequalT o\ngreaterThan\ninvert\nlessThan\nmultiply\nsubtract\ntoExact\ntoFixed\ntoSignificant\nfromFractionalAmount\nfromRawAmount\nConstructors  \nconstructor \n\u2022 Protected  new Curr encyAmount <T>(currency , numerator , denominator? )\nType parameters", "metadata": {"page_number": 106, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0132e12d5939", "text": "Name Type\nT extends Currency\nParameters  \nName Type\ncurrency T\nnumerator BigintIsh\ndenominator? BigintIsh\nOverrides  \nFraction .constructor\nDefined in  \nentities/fractions/currencyAmount.ts:40\nProperties  \ncurrency \n\u2022 Readonly  currency : T\nDefined in  \nentities/fractions/currencyAmount.ts:14\ndecimalScale \n\u2022 Readonly  decimalScale : default\nDefined in  \nentities/fractions/currencyAmount.ts:15\ndenominator \n\u2022 Readonly  denominator : default\nInherited fr om \nFraction .denominator\nDefined in  \nentities/fractions/fraction.ts:26\nnumerator", "metadata": {"page_number": 107, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e3df0c26d191", "text": "\u2022 Readonly  numerator : default\nInherited fr om \nFraction .numerator\nDefined in  \nentities/fractions/fraction.ts:25\nAccessors  \nasFraction \n\u2022 get asFraction (): Fraction\nHelper method for converting any super class back to a fraction\nReturns  \nFraction\nInherited fr om \nFraction.asFraction\nDefined in  \nentities/fractions/fraction.ts:154\nquotient \n\u2022 get quotient (): default\nReturns  \ndefault\nInherited fr om \nFraction.quotient\nDefined in  \nentities/fractions/fraction.ts:42\nremainder \n\u2022 get remainder (): Fraction\nReturns", "metadata": {"page_number": 108, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "256abb5a300c", "text": "Fraction\nInherited fr om \nFraction.remainder\nDefined in  \nentities/fractions/fraction.ts:47\nwrapped \n\u2022 get wrapped (): CurrencyAmount <Token >\nReturns  \nCurrencyAmount <Token >\nDefined in  \nentities/fractions/currencyAmount.ts:91\nMethods  \nadd \n\u25b8 add(other ): CurrencyAmount <T>\nParameters  \nName Type\notherCurrencyAmount <T>\nReturns  \nCurrencyAmount <T>\nOverrides  \nFraction .add\nDefined in  \nentities/fractions/currencyAmount.ts:47\ndivide \n\u25b8 divide (other ): CurrencyAmount <T>\nParameters", "metadata": {"page_number": 109, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "15ceadcf108c", "text": "Name Type\notherBigintIsh  | Fraction\nReturns  \nCurrencyAmount <T>\nOverrides  \nFraction .divide\nDefined in  \nentities/fractions/currencyAmount.ts:64\nequalTo \n\u25b8 equalT o(other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nInherited fr om \nFraction .equalT o\nDefined in  \nentities/fractions/fraction.ts:91\ngreaterThan \n\u25b8 greaterThan (other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nInherited fr om", "metadata": {"page_number": 110, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3d78ecde69f6", "text": "Fraction .greaterThan\nDefined in  \nentities/fractions/fraction.ts:99\ninvert \n\u25b8 invert (): Fraction\nReturns  \nFraction\nInherited fr om \nFraction .invert\nDefined in  \nentities/fractions/fraction.ts:51\nlessThan \n\u25b8 lessThan (other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nInherited fr om \nFraction .lessThan\nDefined in  \nentities/fractions/fraction.ts:83\nmultiply \n\u25b8 multiply (other ): CurrencyAmount <T>\nParameters", "metadata": {"page_number": 111, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f704b8346b42", "text": "Name Type\notherBigintIsh  | Fraction\nReturns  \nCurrencyAmount <T>\nOverrides  \nFraction .multiply\nDefined in  \nentities/fractions/currencyAmount.ts:59\nsubtract \n\u25b8 subtract (other ): CurrencyAmount <T>\nParameters  \nName Type\notherCurrencyAmount <T>\nReturns  \nCurrencyAmount <T>\nOverrides  \nFraction .subtract\nDefined in  \nentities/fractions/currencyAmount.ts:53\ntoExact \n\u25b8 toExact (format? ): string\nParameters  \nName Type\nformatobject\nReturns  \nstring\nDefined in", "metadata": {"page_number": 112, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aa80096d8d10", "text": "entities/fractions/currencyAmount.ts:86\ntoFixed \n\u25b8 toFixed (decimalPlaces? , format? , rounding? ): string\nParameters  \nName Type Default value\ndecimalPlaces number undefined\nformat? object undefined\nrounding Rounding Rounding.ROUND_DOWN\nReturns  \nstring\nOverrides  \nFraction .toFixed\nDefined in  \nentities/fractions/currencyAmount.ts:77\ntoSignificant \n\u25b8 toSignificant (significantDigits? , format? , rounding? ): string\nParameters  \nName Type Default value\nsignificantDigits number 6\nformat? object undefined\nrounding Rounding Rounding.ROUND_DOWN\nReturns  \nstring\nOverrides  \nFraction .toSignificant\nDefined in", "metadata": {"page_number": 113, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c35da47bb150", "text": "significantDigits number 6\nformat? object undefined\nrounding Rounding Rounding.ROUND_DOWN\nReturns  \nstring\nOverrides  \nFraction .toSignificant\nDefined in  \nentities/fractions/currencyAmount.ts:69\nfromFractionalAmount", "metadata": {"page_number": 113, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "54c9459f64da", "text": "\u25b8 Static  fromFractionalAmount <T>(currency , numerator , denominator ): CurrencyAmount <T>\nConstruct a currency amount with a denominator that is not equal to 1\nType parameters  \nName Type\nT extends Currency\nParameters  \nName Type Description\ncurrency T the currency\nnumerator BigintIsh the numerator of the fractional token amount\ndenominator BigintIsh the denominator of the fractional token amount\nReturns  \nCurrencyAmount <T>\nDefined in  \nentities/fractions/currencyAmount.ts:32\nfromRawAmount \n\u25b8 Static  fromRawAmount <T>(currency , rawAmount ): CurrencyAmount <T>\nReturns a new currency amount instance from the unitless amount of token, i.e. the raw amount\nType parameters  \nName Type\nT extends Currency\nParameters  \nName Type Description", "metadata": {"page_number": 114, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ff1294406f75", "text": "Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\nType parameters  \nName Type\nT extends Currency\nParameters  \nName Type Description\ncurrency T the currency in the amount\nrawAmount BigintIsh the raw token or ether amount\nReturns  \nCurrencyAmount <T>\nDefined in  \nentities/fractions/currencyAmount.ts:22\nEdit this page", "metadata": {"page_number": 114, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32c92d6fcfa0", "text": "Helpful?\nPrevious\nOverview\nNext\nEther\nType parameters\nHierarchy\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties\ncurrency\ndecimalScale\ndenominator\nnumerator\nAccessors\nasFraction\nquotient\nremainder\nwrapped\nMethods\nadd\ndivide\nequalT o\ngreaterThan\ninvert\nlessThan\nmultiply\nsubtract\ntoExact\ntoFixed\ntoSignificant\nfromFractionalAmount\nfromRawAmount\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 115, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f077af7fd286", "text": "toExact\ntoFixed\ntoSignificant\nfromFractionalAmount\nfromRawAmount\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 115, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "59426263aa6c", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 116, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8bb88ea05a49", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nUsing the API\nCustom Linking\nIframe Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides", "metadata": {"page_number": 117, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ce8ed0cc46ba", "text": "Custom Linking\nIframe Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides\nInterface Integration\nCustom LinkingHelpful?\nOn this page\nQuery Parameters\nThe Uniswap front-end supports URL  query parameters to allow for custom linking to the Uniswap frontend. Users and developers can use\nthese query parameters to link to the Uniswap frontend with custom prefilled settings.\nEach Page has specific available URL  parameters that can be set. Global parameters can be used on all pages.\nA parameter used on an incorrect page will have no ef fect on frontend settings. Parameters not set with a URL  parameter will be set to\nstandard frontend defaults.\nGlobal", "metadata": {"page_number": 117, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "092f549fbfc2", "text": "Parameter Type Description\ntheme String Sets them to dark or light mode.\nTheme Options \nTheme can be set as light  or dark .\nExample Usage \nhttps://app.uniswap.org/#/swap?theme=dark\nSwap Page  \nParameter Type Description\ninputCurrency address Input currency that will be swapped for output currency .\noutputCurrency address or ETH Output currency that input currency will be swapped for .\nexactAmount number The custom token amount to buy or sell.\nexactField string The field to set custom token amount for . Must be input  or output .\nDefaults \nETH defaults as the input currency . When a dif ferent token is selected for either input or output ETH will default as the opposite selected\ncurrency .\nConstraints \nAddresses must be valid ERC20 addresses. Slippage and amount values must be valid numbers accepted by the frontend (or error will prevent", "metadata": {"page_number": 118, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cd33a31b5ae7", "text": "currency .\nConstraints \nAddresses must be valid ERC20 addresses. Slippage and amount values must be valid numbers accepted by the frontend (or error will prevent\nfrom swapping ). Slippage can 0, or within the range 10- >9999 bips (which converts to 0%, 0.01%- >99%)\nWhen selecting ETH as the output currency a user must also choose an inputCurrency that is not ETH (to prevent ETH being populated in\nboth fields )\nSetting Amounts \nTwo parameters, exactField and exactAmount can be used to set specific token amounts to be sold or bought. Both fields must be set in the\nURL  or there will be no ef fect on the settings.\nExample Usage \nhttps://app.uniswap.org/#/swap?", "metadata": {"page_number": 118, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc433317599d", "text": "URL  or there will be no ef fect on the settings.\nExample Usage \nhttps://app.uniswap.org/#/swap?\nexactField=input&exactAmount=10&inputCurrency=0x0F5D2fB29fb7d3CFeE444a200298f468908cC942\nPool Page  \nThe Pool page is made up of 2 subroutes: add, remove .\nAdd Liquidity \nParameter Type Description\nToken0 address Pool to withdraw liquidity from. (Must be an ERC20 address with an existing token )\nToken1 address Pool to withdraw liquidity from. (Must be an ERC20 address with an existing token )\nExample Usage", "metadata": {"page_number": 118, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0255692eb414", "text": "Token0 address Pool to withdraw liquidity from. (Must be an ERC20 address with an existing token )\nToken1 address Pool to withdraw liquidity from. (Must be an ERC20 address with an existing token )\nExample Usage \nhttps://app.uniswap.org/#/add/v2/0x6B175474E89094C44Da98b954EedeAC495271d0F/0xdAC17F958D2ee523a2206206994597C13D831ec7\nRemove Liquidity", "metadata": {"page_number": 118, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2e42e67f9a01", "text": "Parameter Type Description\nToken0 address Pool to withdraw liquidity from. (Must be an ERC20 address with an existing token )\nToken1 address Pool to withdraw liquidity from. (Must be an ERC20 address with an existing token )\nExample Usage \nhttps://app.uniswap.org/#/remove/0x6B175474E89094C44Da98b954EedeAC495271d0F-\n0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\nEdit this page\nHelpful?\nPrevious\nUsing the API\nNext\nIframe Integration\nGlobal\nTheme Options\nExample Usage\nSwap Page\nDefaults\nConstraints\nSetting Amounts\nExample Usage\nPool Page\nAdd Liquidity", "metadata": {"page_number": 119, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d305b4b85189", "text": "Global\nTheme Options\nExample Usage\nSwap Page\nDefaults\nConstraints\nSetting Amounts\nExample Usage\nPool Page\nAdd Liquidity\nExample Usage\nRemove Liquidity\nExample Usage\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 119, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "22b9698681c8", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\nOverview\nGuides\nConnect to Uniswap\nPool Liquidity\nTrade Tokens\nCustom Linking\nIframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nCustom LinkingHelpful?", "metadata": {"page_number": 120, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e3e35056870", "text": "Iframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nCustom LinkingHelpful?\nOn this page\nQuery Parameters\nThe Uniswap front-end supports URL  query parameters to allow for custom linking to the Uniswap exchange. Users and\ndevelopers can use these query parameters to link to the Uniswap exchange with custom prefilled settings.\nEach Page has specific available URL  parameters that can be set. Global parameters can be used on all pages.\nA parameter used on an incorrect page will have no ef fect on exchange settings. Parameters not set with a URL  parameter\nwill be set to standard exchange defaults.", "metadata": {"page_number": 120, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1275857657d5", "text": "Global  \nParameter Type Description\ntheme String Sets them to dark or light mode.\nTheme Options \nTheme can be set as light  or dark .\nExample Usage \nhttps://app.uniswap.org/#/swap?theme=dark&use=v1\nSwap Page  \nParameter Type Description\ninputCurrency address Input currency that will be swapped for output currency .\noutputCurrency address or ETH Output currency that input currency will be swapped for .\nslippage number Max slippage to be used during transaction (in bips )\nexactAmount number The custom token amount to buy or sell.\nexactField string The field to set custom token amount for . Must be input  or output .\nDefaults \nETH defaults as the input currency . When a dif ferent token is selected for either input or output ETH will default as the\nopposite selected currency .\nConstraints", "metadata": {"page_number": 121, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f64a473d96d2", "text": "Defaults \nETH defaults as the input currency . When a dif ferent token is selected for either input or output ETH will default as the\nopposite selected currency .\nConstraints \nAddresses must be valid ERC20 addresses. Slippage and amount values must be valid numbers accepted by the exchange\n(or error will prevent from swapping ). Slippage can 0, or within the range 10- >9999 bips (which converts to 0%, 0.01%-\n>99%)\nWhen selecting ETH as the output currency a user must also choose an inputCurrency that is not ETH (to prevent ETH\nbeing populated in both fields )\nSetting Amounts \nTwo parameters, exactField and exactAmount can be used to set specific token amounts to be sold or bought. Both fields\nmust be set in the URL  or there will be no ef fect on the settings.\nExample Usage \nhttps://app.uniswap.org/#/swap?", "metadata": {"page_number": 121, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "39d152268604", "text": "must be set in the URL  or there will be no ef fect on the settings.\nExample Usage \nhttps://app.uniswap.org/#/swap?\nexactField=input&exactAmount=10&inputCurrency=0x0F5D2fB29fb7d3CFeE444a200298f468908cC942?use=v1\nSend Page  \nThe send page has the same options available as the Swap page, plus one additional paramter , recipient .\nParameter Type Description\nrecipient address Address of the recipient of a send transaction.", "metadata": {"page_number": 121, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b930f8de598f", "text": "Example Usage \nhttps://app.uniswap.org/#/send?recipient=0x74Aa01d162E6dC6A657caC857418C403D48E2D77?use=v1\nPool Page  \nThe Pool page is made up of 3 subroutes: add-liquidity , remove-liquidity , create-exchange .\nAdd Liquidity \nParameter Type Description\nethAmount number Amount of ETH to deposit into the pool.\ntoken address ERC20 address of the pool to add liquidity to.\ntokenAmount number Amount of the selected token to deposit into the pool.\nExample Usage \nhttps://app.uniswap.org/#/add-liquidity?\nethAmount=2.34&token=0x42456D7084eacF4083f1140d3229471bbA2949A8&tokenAmount=300?use=v1", "metadata": {"page_number": 122, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "550ec5ad9a33", "text": "ethAmount=2.34&token=0x42456D7084eacF4083f1140d3229471bbA2949A8&tokenAmount=300?use=v1\nRemove Liquidity  \nParameter Type Description\npoolT okenAddress address Pool to withdraw liquidity from. (Must be an ERC20 address with an existing exchange )\npoolT okenAmount number Amount of pool token to be withdrawn from liquidity pool.\nExample Usage \nhttps://app.uniswap.org/#/remove-liquidity?poolTokenAmount=1.23&use=v1\nCreate Exchange  \nParameter Type Description\ntokenAddress addressERC20 token to create the exchange for . Must be valid ERC20 token for which there is no existing\nexchange.\nExample Usage \nhttps://app.uniswap.org/#/swap?use=v1&create-exchange?", "metadata": {"page_number": 122, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "89d056c13a5b", "text": "exchange.\nExample Usage \nhttps://app.uniswap.org/#/swap?use=v1&create-exchange?\ntokenAddress=0x0F5D2fB29fb7d3CFeE444a200298f468908cC942\nCustom Routes  \nCustom token routes can still be used in combination with URL  paramters. URL  paramters are higher in the settings\nhierarchy than custom routes.\nAn example using custom token route and URL  paramters.\nhttps://app.uniswap.org/#/swap/0x0F5D2fB29fb7d3CFeE444a200298f468908cC942?\nexactField=input&exactAmount=10&use=v1\nEdit this page", "metadata": {"page_number": 122, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d94ab7088ee6", "text": "Helpful?\nPrevious\nTrade Tokens\nNext\nIframe Integration\nGlobal\nTheme Options\nExample Usage\nSwap Page\nDefaults\nConstraints\nSetting Amounts\nExample Usage\nSend Page\nExample Usage\nPool Page\nAdd Liquidity\nExample Usage\nRemove Liquidity\nExample Usage\nCreate Exchange\nExample Usage\nCustom Routes\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets", "metadata": {"page_number": 123, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2f8dd17c4690", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 123, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6afef47259e7", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\nOverview\nGuides\nGetting Started\nTechnical Reference\nData\nComputation\nFormat\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nDataHelpful?\nOn this page", "metadata": {"page_number": 124, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7bfd3b6458aa", "text": "Format\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nDataHelpful?\nOn this page\ngetTokenReserves\nThis function fetches Uniswap reserve data for a given token address on a given network.\nIf only a chain id is specified, the Ethereum node used to fulfill data requests is determined by\nethers.getDefaultProvider , else it is the one specified by the passed provider .\nThis function throws an error if the provided tokenAddress is not a token with a Uniswap exchange.\nFunction Signatur e", "metadata": {"page_number": 124, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "320775c66c25", "text": "export async function  getTokenReserves (\n  tokenAddress : string,\n  chainIdOrProvider : ChainIdOrProvider  = 1\n): Promise<TokenReservesNormalized >\nCopy\nInput Parameters  \nParameter Type Description\ntokenAddress string The checksummed address of a token with a Uniswap exchange.\nchainIdOrProvider ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider  connected to\na chain with a supported chain id.\nExample Usage\nconst tokenAddress = '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359'  // DAI Mainnet\nconst chainIdOrProvider : ChainIdOrProvider  = 1 // could be e.g. window.ethereum instead", "metadata": {"page_number": 125, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a022c095e4fa", "text": "const chainIdOrProvider : ChainIdOrProvider  = 1 // could be e.g. window.ethereum instead\nconst tokenReserves : TokenReservesNormalized  = await getTokenReserves (tokenAddress , chainIdOrProvider )\n/*\n{\n  // details for the passed token\n  token: {\n    chainId: 1,\n    address: '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359',\n    decimals: 18\n  },\n  // details for the Uniswap exchange of the passed token\n  exchange: {\n    chainId: 1,\n    address: '0x09cabEC1eAd1c0Ba254B09efb3EE13841712bE14',\n    decimals: 18\n  },", "metadata": {"page_number": 125, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2dbf1e86942d", "text": "chainId: 1,\n    address: '0x09cabEC1eAd1c0Ba254B09efb3EE13841712bE14',\n    decimals: 18\n  },\n  // details for the ETH portion of the reserves of the passed token\n  ethReserve: {\n    token: {\n      chainId: 1,\n      address: 'ETH',\n      decimals: 18\n    },\n    amount: <BigNumber>\n  },\n  // details for the token portion of the reserves of the passed token\n  tokenReserve: {\n    token: {\n      chainId: 1,\n      address: '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359',\n      decimals: 18\n    },\n    amount: <BigNumber>", "metadata": {"page_number": 125, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f210c7b8e0b4", "text": "address: '0x89d24A6b4CcB1B6fAA2625fE562bDD9a23260359',\n      decimals: 18\n    },\n    amount: <BigNumber>\n  }\n}\n*/\nCopy\nEdit this page\nHelpful?", "metadata": {"page_number": 125, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7babfde8ce07", "text": "Previous\nGetting Started\nNext\nComputation\nFunction Signature\nInput Parameters\nExample Usage\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 126, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e3aa9119caf8", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nSet Up Your Contract\nMint a New Position\nCollecting Fees\nDecrease Liquidity\nIncrease Liquidity\nThe Full Contract\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nDecrease LiquidityHelpful?\nOn this page\nDecr ease Liquidity", "metadata": {"page_number": 127, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "add8a1e22e6e", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nDecrease LiquidityHelpful?\nOn this page\nDecr ease Liquidity\nMake sure to go through the Setting Up Your Contract  before continuing to this section\nHere we decrease the liquidity of our position without withdrawing all of it.\nThis example assumes the contract already has possession of the position NFT , and requires the calling address to be the same address that deposited the position NFT  to our contract.\nIn production, amount0Min  and amount1Min  should be adjusted to create slippage protections.\nDecr ease Liquidity  \n    /// @notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in peripher\n    /// @param tokenId The id of the erc721 token\n    /// @return amount0 The amount received back in token0", "metadata": {"page_number": 127, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "36e73103e2a0", "text": "/// @param tokenId The id of the erc721 token\n    /// @return amount0 The amount received back in token0\n    /// @return amount1 The amount returned back in token1\n    function  decreaseLiquidityInHalf (uint256 tokenId ) external  returns (uint256 amount0 , uint256 amount1 ) {\n        // caller must be the owner of the NFT\n        require(msg.sender == deposits [tokenId].owner, 'Not the owner' );\n        // get liquidity data for tokenId\n        uint128 liquidity = deposits [tokenId].liquidity ;\n        uint128 halfLiquidity = liquidity / 2;\n        // amount0Min and amount1Min are price slippage checks\n        // if the amount received after burning is not greater than these minimums, transaction will fail\n        INonfungiblePositionManager .DecreaseLiquidityParams memory params =", "metadata": {"page_number": 127, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4a3715ac918b", "text": "// amount0Min and amount1Min are price slippage checks\n        // if the amount received after burning is not greater than these minimums, transaction will fail\n        INonfungiblePositionManager .DecreaseLiquidityParams memory params =\n            INonfungiblePositionManager .DecreaseLiquidityParams ({\n                tokenId : tokenId ,\n                liquidity : halfLiquidity ,\n                amount0Min : 0,\n                amount1Min : 0,\n                deadline : block.timestamp\n            });\n        (amount0, amount1 ) = nonfungiblePositionManager .decreaseLiquidity (params);\n        //send liquidity back to owner\n        _sendToOwner (tokenId, amount0 , amount1 );\n    }\nCopy\nSending Fees To The Calling Addr ess", "metadata": {"page_number": 127, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae62fcb6d36b", "text": "//send liquidity back to owner\n        _sendToOwner (tokenId, amount0 , amount1 );\n    }\nCopy\nSending Fees To The Calling Addr ess \nThis internal helper function sends any tokens, in the form of fees or position tokens, to the owner of an NFT .\nIn _sendToOwner , we pass the amount of fees due, previously populated in the last function, as ar guments to safeTransfer , which transfers the fees to owner .", "metadata": {"page_number": 127, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f9bbb3332433", "text": "/// @notice Transfers funds to owner of NFT\n    /// @param tokenId The id of the erc721\n    /// @param amount0 The amount of token0\n    /// @param amount1 The amount of token1\n    function  _sendToOwner (\n        uint256 tokenId ,\n        uint256 amount0 ,\n        uint256 amount1\n    ) internal  {\n        // get owner of contract\n        address owner = deposits [tokenId].owner;\n        address token0 = deposits [tokenId].token0;\n        address token1 = deposits [tokenId].token1;\n        // send collected fees to owner\n        TransferHelper .safeTransfer (token0, owner, amount0 );\n        TransferHelper .safeTransfer (token1, owner, amount1 );\n    }\nCopy\nEdit this page\nHelpful?", "metadata": {"page_number": 128, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d2fe24832ac4", "text": "TransferHelper .safeTransfer (token1, owner, amount1 );\n    }\nCopy\nEdit this page\nHelpful?\nPrevious\nCollecting Fees\nNext\nIncrease Liquidity\nDecrease Liquidity\nSending Fees To The Calling Address\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 128, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1b01ae947961", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nDeployment AddressesHelpful?\nUniswap Contract Deployments", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "331339611492", "text": "Universal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nDeployment AddressesHelpful?\nUniswap Contract Deployments\nThe latest version of @uniswap/v3-core , @uniswap/v3-periphery , and @uniswap/swap-router-contracts  are deployed at the addresses listed below . Integrators should no longer\nassume that they ar e deployed to the same addr esses acr oss chains  and be extremely careful to confirm mappings below .\nContractMainnet, Goerli, Arbitrum, Optimism, Polygon\nAddr essCelo Addr ess BSC Addr ess", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "42e9e5394617", "text": "ContractMainnet, Goerli, Arbitrum, Optimism, Polygon\nAddr essCelo Addr ess BSC Addr ess\nUniswapV3Factory 0x1F98431c8aD98523631AE4a59f267346ea31F984 0xAfE208a311B21f13EF87E33A90049fC17A7acDEc 0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b446\nMulticall2 0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696 0x633987602DE5C4F337e3DbF265303A1080324204 0x963Df249eD09c358A4819E39d9Cd5736c3087", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6af214551e2c", "text": "ProxyAdmin 0xB753548F6E010e7e680BA186F9Ca1BdAB2E90cf2 0xc1b262Dd7643D4B7cA9e51631bBd900a564BF49A 0xC9A7f5b73E853664044ab31936D0E6583d8b1\nTickLens 0xbfd8137f7d1516D3ea5cA83523914859ec47F573 0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D 0xD9270014D396281579760619CCf4c3af0501A4", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ccc30ceb8428", "text": "Quoter 0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6 0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8\nSwapRouter 0xE592427A0AEce92De3Edee1F18E0157C05861564 0x5615CDAb10dc425a742d643d949a7F474C01abc4\nNFTDescriptor 0x42B24A95702b9986e82d421cC3568932790A48Ec 0xa9Fd765d85938D278cb0b108DbE4BF7186831186 0x831d93E55AF23A2977E4DA892d5005f4F29950", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dcef27510018", "text": "NonfungibleT okenPositionDescriptor 0x91ae842A5Ffd8d12023116943e72A606179294f3 0x644023b316bB65175C347DE903B60a756F6dd554 0x0281E98322e4e8E53491D576Ee6A2BFCE644C5\nTransparentUpgradeableProxy 0xEe6A57eC80ea46401049E92587E52f5Ec1c24785 0x505B43c452AA4443e0a6B84bb37771494633Fde9 0xAec98e489AE35F243eB63452f6ad233A6c97e", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b7d733662b2b", "text": "NonfungiblePositionManager 0xC36442b4a4522E871399CD717aBDD847Ab11FE88 0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A 0x7b8A01B39D58278b5DE7e48c8449c9f4F5170\nV3Migrator 0xA5644E29708357803b5A882D272c41cC0dF92B34 0x3cFd4d48EDfDCC53D3f173F596f621064614C582 0x32681814957e0C13117ddc0c2aba232b5c9e7", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0aa40664b3a2", "text": "QuoterV2 0x61fFE014bA17989E743c5F6cB21bF9697530B21e 0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8 0x78D78E420Da98ad378D7799bE8f4AF69033EB0\nSwapRouter02 0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45 0x5615CDAb10dc425a742d643d949a7F474C01abc4 0xB971eF87ede563556b2ED4b1C0b0019111Dd85", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "14340fb5269a", "text": "Permit2 0x000000000022d473030f116ddee9f6b43ac78ba3 0x000000000022d473030f116ddee9f6b43ac78ba3 0x000000000022d473030f116ddee9f6b43ac78\nThese addresses are final and were deployed from these npm package versions:\n@uniswap/v3-core@1.0.0\n@uniswap/v3-periphery@1.0.0\n@uniswap/swap-router-contracts@1.1.0\nUniswap V3 Staker\nAn up-to-date list of deploy addresses by chain is hosted on Github  for the UniswapV3Staker  contract.\nUniversal Router", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e4ccf078b73", "text": "Uniswap V3 Staker\nAn up-to-date list of deploy addresses by chain is hosted on Github  for the UniswapV3Staker  contract.\nUniversal Router\nThe UniversalRouter  contract is the current preferred entrypoint for ERC20 and NFT  swaps, replacing, among other contracts, SwapRouter02 . An up-to-date list of deploy addresses by\nchain is hosted on Github .\nUniswap Pool Deployments\nEvery Uniswap pool is a unique instance of the UniswapV3Pool  contract and is deployed at its own unique address. The contract source code of the pool will be auto-verified on etherscan.\nFor example, here is the ETH/USDC 0.3% pool  on Ethereum mainnet.", "metadata": {"page_number": 130, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "44119139da38", "text": "You can look up the address of an existing pool on Uniswap Info  or by calling the getPool  function on the UniswapV3Factory  contract.\ngetPool(\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" , \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\" , 3000)\nC o p y\nWrapped Native Token Addr esses\nThe Uniswap Protocol supports trading of ERC20 tokens. In order to swap a native asset like ETH (or MA TIC on Polygon), the Uniswap protocol wraps these assets in an ERC20 wrapped\nnative token contract. The protocol uses the following WETH9 addresses on Ethereum and WMA TIC addresses on Polygon.\nNetwork ChainId Wrapped Native Token Addr ess", "metadata": {"page_number": 131, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "17b799a0954a", "text": "native token contract. The protocol uses the following WETH9 addresses on Ethereum and WMA TIC addresses on Polygon.\nNetwork ChainId Wrapped Native Token Addr ess\nEthereum 1 WETH 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\nGoerli 5 WETH 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\nArbitrum 42161 WETH 0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\nArbitrum Goerli 421613 WETH 0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3\nOptimism 10 WETH 0x4200000000000000000000000000000000000006", "metadata": {"page_number": 131, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b045be4327e8", "text": "Optimism 10 WETH 0x4200000000000000000000000000000000000006\nOptimism Goerli 420 WETH 0x4200000000000000000000000000000000000006\nPolygon 137 WMA TIC 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\nPolygon Mumbai 80001 WMA TIC 0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889\nBinance Smart Chain 56 WBNB 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\nEdit this page\nHelpful?\nPrevious\nV3Migrator\nNext\nError Codes\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 131, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "19f16dbf9825", "text": "Edit this page\nHelpful?\nPrevious\nV3Migrator\nNext\nError Codes\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 131, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aafaf0561981", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nUniswap V3 Staker Design\nUniswap V3 Staker Contract\nInterfaces\nLibraries\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator", "metadata": {"page_number": 132, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "748019fd54c9", "text": "Interfaces\nLibraries\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nStaker\nUniswap V3 Staker DesignHelpful?\nOn this page", "metadata": {"page_number": 132, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6ebb697ed72a", "text": "Uniswap V3 Staker  Design\nThe liquidity mining staker design is comprised of one canonical position staking contract, Staker . The technical reference\nfor this contract is here and the source code is here.\nData Structur es \nstruct Incentive  {\n  uint128 totalRewardUnclaimed ;\n  uint128 numberOfStakes ;\n  uint160 totalSecondsClaimedX128 ;\n}\nstruct Deposit {\n  address owner;\n  uint96 numberOfStakes ;\n}\nstruct Stake {\n  uint160 secondsPerLiquidityInsideInitialX128 ;\n  uint128 liquidity ;\n}\nstruct IncentiveKey  {\n        IERC20Minimal rewardToken ;\n        IUniswapV3Pool pool ;\n        uint256 startTime ;", "metadata": {"page_number": 133, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a07394eee6df", "text": "uint128 liquidity ;\n}\nstruct IncentiveKey  {\n        IERC20Minimal rewardToken ;\n        IUniswapV3Pool pool ;\n        uint256 startTime ;\n        uint256 endTime ;\n        address refundee ;\n}\nCopy\nState:\nIUniswapV3Factory public immutable factory ;\nINonfungiblePositionManager public immutable nonfungiblePositionManager ;\n/// @dev bytes32 refers to the return value of IncentiveId.compute\nmapping(bytes32 => Incentive ) public incentives ;\n/// @dev deposits[tokenId] => Deposit\nmapping(uint256 => Deposit ) public deposits ;\n/// @dev stakes[tokenId][incentiveHash] => Stake\nmapping(uint256 => mapping(bytes32 => Stake)) public stakes;", "metadata": {"page_number": 133, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "307009e6a4a6", "text": "mapping(uint256 => Deposit ) public deposits ;\n/// @dev stakes[tokenId][incentiveHash] => Stake\nmapping(uint256 => mapping(bytes32 => Stake)) public stakes;\n/// @dev rewards[rewardToken][msg.sender] => uint256\nmapping(address => mapping(address => uint256)) public rewards ;\nCopy\nParams:\nstruct CreateIncentiveParams  {\n  address rewardToken ;\n  address pool;\n  uint256 startTime ;\n  uint256 endTime ;\n  uint128 totalReward ;\n}\nstruct EndIncentiveParams  {\n  address creator ;\n  address rewardToken ;\n  address pool;", "metadata": {"page_number": 133, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3911c9f9a60c", "text": "uint256 startTime ;\n  uint256 endTime ;\n}\nCopy\nIncentives\ncreateIncentive(CreateIncentiveParams memory params) \ncreateIncentive  creates a liquidity mining incentive program. The key used to look up an Incentive is the hash of its\nimmutable properties.\nCheck:\nIncentive with these params does not already exist\nTimestamps: params.endTime >= params.startTime , params.startTime >= block.timestamp\nIncentive with this ID does not already exist.\nEffects:\nSets incentives[key] = Incentive(totalRewardUnclaimed=totalReward, totalSecondsClaimedX128=0,\nrewardToken=rewardToken)\nInteraction:\nTransfers params.totalReward  from msg.sender  to self.\nMake sure there is a check here and it fails if the transfer fails", "metadata": {"page_number": 134, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "19cfc61731ab", "text": "rewardToken=rewardToken)\nInteraction:\nTransfers params.totalReward  from msg.sender  to self.\nMake sure there is a check here and it fails if the transfer fails\nEmits IncentiveCreated\nendIncentive(EndIncentiveParams memory params) \nendIncentive  can be called by anyone to end an Incentive after the endTime  has passed, transferring\ntotalRewardUnclaimed  of rewardToken  back to refundee .\nCheck:\nblock.timestamp > params.endTime\nIncentive exists ( incentive.totalRewardUnclaimed != 0 )\nEffects:\ndeletes incentives[key]  (This is a new change)\nInteractions:\nsafeT ransfers totalRewardUnclaimed  of rewardToken  to the incentive creator msg.sender\nemits IncentiveEnded\nDeposit/W ithdraw Token  \nInteractions", "metadata": {"page_number": 134, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e70332c2076a", "text": "Interactions:\nsafeT ransfers totalRewardUnclaimed  of rewardToken  to the incentive creator msg.sender\nemits IncentiveEnded\nDeposit/W ithdraw Token  \nInteractions\nnonfungiblePositionManager.safeTransferFrom(sender, this, tokenId)\nThis transfer triggers the onERC721Received hook\nonERC721Received(address, address from, uint256 tokenId, bytes calldata data)", "metadata": {"page_number": 134, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e492b4191ff4", "text": "Check:\nMake sure sender is univ3 nft\nEffects:\nCreates a deposit for the token setting deposit owner  to from .\nSetting owner  to from  ensures that the owner of the token also owns the deposit. Approved addresses and\noperators may first transfer the token to themselves before depositing for deposit ownership.\nIf data.length>0 , stakes the token in one or more incentives\nwithdrawToken(uint256 tokenId, address to, bytes memory data) \nChecks\nCheck that a Deposit exists for the token and that msg.sender  is the owner  on that Deposit.\nCheck that numberOfStakes  on that Deposit is 0.\nEffects\nDelete the Deposit delete deposits[tokenId] .\nInteractions\nsafeTransferFrom  the token to to with data .\nemit DepositTransferred(token, deposit.owner, address(0))\nStake/Unstake/Rewards  \nstakeToken", "metadata": {"page_number": 135, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "650c210f7604", "text": "Interactions\nsafeTransferFrom  the token to to with data .\nemit DepositTransferred(token, deposit.owner, address(0))\nStake/Unstake/Rewards  \nstakeToken \nCheck:\ndeposits[params.tokenId].owner == msg.sender\nMake sure incentive actually exists and has reward that could be claimed (incentive.rewardT oken != address(0))\nCheck if this check can check totalRewardUnclaimed instead\nMake sure token not already staked\nclaimReward \nInteractions\nmsg.sender  to withdraw all of their reward balance in a specific token to a specified to address.\nemit RewardClaimed(to, reward)\nunstakeToken \nTo unstake an NFT , you call unstakeToken , which takes all the same ar guments as stake .\nChecks", "metadata": {"page_number": 135, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f98223c1ce0d", "text": "emit RewardClaimed(to, reward)\nunstakeToken \nTo unstake an NFT , you call unstakeToken , which takes all the same ar guments as stake .\nChecks\nIt checks that you are the owner of the Deposit\nIt checks that there exists a Stake  for the provided key (with exists=true).\nEffects\nDeletes the Stake.", "metadata": {"page_number": 135, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "90942e5b662a", "text": "Decrements numberOfStakes  for the Deposit by 1.\ntotalRewardsUnclaimed  is decremented by reward .\ntotalSecondsClaimed  is incremented by seconds .\nIncrements rewards[rewardToken][msg.sender]  by the amount given by getRewardInfo .\ngetRewardInfo \nIt computes secondsInsideX128  (the total liquidity seconds for which rewards are owed) for a given Stake, by:\nusingsnapshotCumulativesInside  from the Uniswap v3 core contract to get\nsecondsPerLiquidityInRangeX128 , and subtracting secondsPerLiquidityInRangeInitialX128 .\nMultiplying that by stake.liquidity  to get the total seconds accrued by the liquidity in that period\nNote that X128 means it's a UQ32X128 .", "metadata": {"page_number": 136, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4e16b7018ab5", "text": "Multiplying that by stake.liquidity  to get the total seconds accrued by the liquidity in that period\nNote that X128 means it's a UQ32X128 .\nIt computes totalSecondsUnclaimed  by taking max(endTime, block.timestamp) - startTime , casting it as a\nQ128, and subtracting totalSecondsClaimedX128 .\nIt computes rewardRate  for the Incentive casting incentive.totalRewardUnclaimed  as a Q128, then dividing it by\ntotalSecondsUnclaimedX128 .\nreward  is then calculated as secondsInsideX128  times the rewardRate , scaled down to a regular uint128.\nEdit this page\nHelpful?\nPrevious\nWeightedOracleLibrary\nNext\nUniswap V3 Staker Contract\nData Structures\nIncentives\ncreateIncentive(CreateIncentiveParams memory params)", "metadata": {"page_number": 136, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "17c9e72b9964", "text": "Previous\nWeightedOracleLibrary\nNext\nUniswap V3 Staker Contract\nData Structures\nIncentives\ncreateIncentive(CreateIncentiveParams memory params)\nendIncentive(EndIncentiveParams memory params)\nDeposit/W ithdraw Token\nonERC721Received(address, address from, uint256 tokenId, bytes calldata data)\nwithdrawToken(uint256 tokenId, address to, bytes memory data)\nStake/Unstake/Rewards\nstakeToken\nclaimReward\nunstakeToken\ngetRewardInfo\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 136, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "30afcbdefd82", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 136, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5d0a2607ccad", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 137, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e35a8f549ba1", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nHow Uniswap works\nEcosystem Participants\nSmart contracts\nGlossary\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000", "metadata": {"page_number": 138, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1068543d2a80", "text": "Core Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nProtocol Overview\nEcosystem ParticipantsHelpful?\nEcosystem Participants", "metadata": {"page_number": 138, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "51893d1e96cf", "text": "The Uniswap ecosystem is primarily comprised of three types of users: liquidity providers, traders, and developers. Liquidity providers are incentivized to contribute ERC-20  tokens to\ncommon liquidity pools. Traders can swap these tokens for one another for a fixed 0.30% fee  (which goes to liquidity providers). Developers can integrate directly with Uniswap smart\ncontracts to power new and exciting interactions with tokens, trading interfaces, retail experiences, and more.\nIn total, interactions between these classes create a positive feedback loop, fueling digital economies by defining a common language through which tokens can be pooled, traded and used.\nLiquidity Pr oviders\nLiquidity providers, or LPs, are not a homogenous group:\nPassive LPs are token holders who wish to passively invest their assets to accumulate trading fees.\nProfessional LPs are focused on market making as their primary strategy . They usually develop custom tools and ways of tracking their liquidity positions across dif ferent DeFi\nprojects.", "metadata": {"page_number": 139, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b29490299301", "text": "Passive LPs are token holders who wish to passively invest their assets to accumulate trading fees.\nProfessional LPs are focused on market making as their primary strategy . They usually develop custom tools and ways of tracking their liquidity positions across dif ferent DeFi\nprojects.\nToken projects sometimes choose to become LPs to create a liquid marketplace for their token. This allows tokens to be bought and sold more easily , and unlocks interoperability\nwith other DeFi projects through Uniswap.\nFinally , some DeFi pioneers are exploring complex liquidity provision interactions like incentivized liquidity , liquidity as collateral, and other experimental strategies. Uniswap is the\nperfect protocol for projects to experiment with these kinds of ideas.\nTraders\nThere are a several categories of traders in the protocol ecosystem:\nSpeculators use a variety of community built tools and products to swap tokens using liquidity pulled from the Uniswap protocol.", "metadata": {"page_number": 139, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e0ccbebc158a", "text": "Arbitrage bots seek profits by comparing prices across dif ferent platforms to find an edge. (Though it might seem extractive, these bots actually help equalize prices across broader\nEthereum markets and keep things fair .)\nDAPP  users buy tokens on Uniswap for use in other applications on Ethereum.\nSmart contracts that execute trades on the protocol by implementing swap functionality (from products like DEX aggregators to custom Solidity scripts).\nIn all cases, trades are subject to the same flat fee for trading on the protocol. Each is important for increasing the accuracy of prices and incentivizing liquidity .\nDevelopers/Pr ojects\nThere are far too many ways Uniswap is used in the wider Ethereum ecosystem to count, but some examples include:\nThe open-source, accessible nature of Uniswap means there are countless UX experiments and front-ends built to of fer access to Uniswap functionality . You can find Uniswap", "metadata": {"page_number": 140, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5ac344d6fd4e", "text": "The open-source, accessible nature of Uniswap means there are countless UX experiments and front-ends built to of fer access to Uniswap functionality . You can find Uniswap\nfunctions in most of the major DeFi dashboard projects. There are also many Uniswap-specific tools  built by the community .\nWallets often integrate swapping and liquidity provision functionality as a core of fering of their product.\nDEX (decentralized exchange) aggregators pull liquidity from many liquidity protocols to of fer traders the best prices by splitting their trades. Uniswap is the biggest single\ndecentralized liquidity source for these projects.\nSmart contract developers use the suite of functions available to invent new DeFi tools and other various experimental ideas. See projects like Unisocks  or Zora , among many , many\nothers.\nUniswap Team and Community\nThe Uniswap team along with the broader Uniswap community drives development of the protocol and ecosystem.\nEdit this page\nHelpful?", "metadata": {"page_number": 140, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fd7ac94dcb6b", "text": "others.\nUniswap Team and Community\nThe Uniswap team along with the broader Uniswap community drives development of the protocol and ecosystem.\nEdit this page\nHelpful?\nPrevious\nHow Uniswap works\nNext\nSmart contracts\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 140, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2649390152e2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nAPI Overview\nEntities\nQueries\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference", "metadata": {"page_number": 141, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "800a9513f43e", "text": "Technical Reference\nAPI\nAPI Overview\nEntities\nQueries\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nAPI\nEntitiesHelpful?\nOn this page\nEntities\nEntities define the schema of the subgraph, and represent the data that can be queried. Within each entity are sets of fields\nthat store useful information related to the entity . Below is a list of the available entities within the Uniswap Subgraph, and\ndescriptions for the available fields.", "metadata": {"page_number": 141, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aa6ac9370dba", "text": "To see an interactive sandbox of all entities see the Graph Explorer .\nEach entity is defined with a value type, which will always be a base AssemblyScript type, or a custom type provided by\nThe Graph's custom TypeScript library . For more information on value types see here.\nUniswap Factory \nThe Uniswap Factory entity is responsible for storing aggregate information across all Uniswap pairs. It can be used to view\nstats about total liquidity , volume, amount of pairs and more. There is only one UniswapFactory entity in the subgraph.\nField Name Value Type Description\nid ID factory address\npairCount Int amount of pairs created by the Uniswap factory\ntotalV olumeUSD BigDecimal all time USD volume across all pairs (USD is derived)\ntotalV olumeETH BigDecimal all time volume in ETH across all pairs (ETH is derived)", "metadata": {"page_number": 142, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5395c978ec86", "text": "totalV olumeUSD BigDecimal all time USD volume across all pairs (USD is derived)\ntotalV olumeETH BigDecimal all time volume in ETH across all pairs (ETH is derived)\ntotalLiquidityUSD BigDecimal total liquidity across all pairs stored as a derived USD amount\ntotalLiquidityETH BigDecimal total liquidity across all pairs stored as a derived ETH amount\ntxCount BigInt all time amount of transactions across all pairs\nToken \nStores aggregated information for a specific token across all pairs that token is included in.\nField Name Value Type Description\nid ID token address\nsymbol String token symbol\nname String token name\ndecimals BigInt token decimals\ntradeV olume BigDecimal amount of token traded all time across all pairs\ntradeV olumeUSD BigDecimalamount of token in USD traded all time across pairs (only for tokens with liquidity\nabove minimum threshold)", "metadata": {"page_number": 142, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cb59bd961359", "text": "tradeV olume BigDecimal amount of token traded all time across all pairs\ntradeV olumeUSD BigDecimalamount of token in USD traded all time across pairs (only for tokens with liquidity\nabove minimum threshold)\nuntrackedV olumeUSD BigDecimal amount of token in USD traded all time across pairs (no minimum liquidity threshold)\ntxCount BigInt amount of transactions all time in pairs including token\ntotalLiquidity BigDecimal total amount of token provided as liquidity across all pairs\nderivedETH BigDecimal ETH per token\nPair \nInformation about a pair . Includes references to each token within the pair , volume information, liquidity information, and\nmore. The pair entity mirrors the pair smart contract, and also contains aggregated information about use.\nField Name Value Type Description\nid ID pair contract address\nfactory UniswapFactory reference to Uniswap factory entity\ntoken0 Token reference to token0 as stored in pair contract", "metadata": {"page_number": 142, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e45d0441504", "text": "Field Name Value Type Description\nid ID pair contract address\nfactory UniswapFactory reference to Uniswap factory entity\ntoken0 Token reference to token0 as stored in pair contract\ntoken1 Token reference to token1 as stored in pair contract\nreserve0 BigDecimal reserve of token0\nreserve1 BigDecimal reserve of token1\ntotalSupply BigDecimal total supply of liquidity token distributed to LPs\nreserveETH BigDecimal total liquidity in pair stored as an amount of ETH\nreserveUSD BigDecimal total liquidity amount in pair stored as an amount of USD", "metadata": {"page_number": 142, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "adc8159dc932", "text": "Field Name Value Type Description\ntrackedReserveETH BigDecimal total liquidity with only tracked amount (see tracked amounts)\ntoken0Price BigDecimal token0 per token1\ntoken1Price BigDecimal token1 per token0\nvolumeT oken0 BigDecimal amount of token0 swapped on this pair\nvolumeT oken1 BigDecimal amount of token1 swapped on this pair\nvolumeUSD BigDecimaltotal amount swapped all time in this pair stored in USD (only tracked if USD\nliquidity is above minimum threshold)\nuntrackedV olumeUSD BigDecimaltotal amount swapped all time in this pair stored in USD, no minimum liquidity\nthreshold\ntxCount BigInt all time amount of transactions on this pair\ncreatedAtT imestamp BigInt timestamp contract was created\ncreatedAtBlockNumber BigInt Ethereum block contract was created", "metadata": {"page_number": 143, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "06ce90d8e0d1", "text": "threshold\ntxCount BigInt all time amount of transactions on this pair\ncreatedAtT imestamp BigInt timestamp contract was created\ncreatedAtBlockNumber BigInt Ethereum block contract was created\nliquidityPositions [LiquidityPosition] array of liquidity providers, used as a reference to LP  entities\nUser \nA user entity is created for any address that provides liquidity to a pool on Uniswap. This entity can be used to track open\npositions for users. LiquidyPosition entities can be referenced to get specific data about each position.\nField Name Value Type Description\nid ID user address\nliquidityPositions [LiquidityPosition] array of all liquidity positions user has open\nusdSwapped BigDecimal total USD value swapped\nLiquidityPositiion \nThis entity is used to store data about a user's liquidity position. This information, along with information from the pair itself\ncan be used to provide position sizes, token deposits, and more.", "metadata": {"page_number": 143, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "25e36d0df2d6", "text": "LiquidityPositiion \nThis entity is used to store data about a user's liquidity position. This information, along with information from the pair itself\ncan be used to provide position sizes, token deposits, and more.\nField Name Value Type Description\nid ID user address and pair address concatenated with a dash\nuser User reference to user\npair Pair reference to the pair liquidity is being provided on\nliquidityT okenBalance BigDecimal amount of LP  tokens minted for this position\nTransaction \nTransaction entities are created for each Ethereum transaction that contains an interaction within Uniswap contracts. This\nsubgraph tracks Mint, Burn, and Swap events on the Uniswap core contracts. Each transaction contains 3 arrays, and at least\none of these arrays has a length of 1.\nField Name Value Type Description\nid ID Ethereum transaction hash\nblockNumber BigInt block transaction was mined in\ntimestamp BigInt timestamp for transaction", "metadata": {"page_number": 143, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cf272e3cf196", "text": "one of these arrays has a length of 1.\nField Name Value Type Description\nid ID Ethereum transaction hash\nblockNumber BigInt block transaction was mined in\ntimestamp BigInt timestamp for transaction\nmints [Mint] array of Mint events within the transaction, 0 or greater\nburns [Burn] array of Burn events within transaction, 0 or greater\nswaps [Swap] array of Swap events within transaction, 0 or greater\nMint", "metadata": {"page_number": 143, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eab7251e6dfd", "text": "Mint entities are created for every emitted Mint event on the Uniswap core contracts. The Mint entity stores key data about\nthe event like token amounts, who sent the transaction, who received the liquidity , and more. This entity can be used to track\nliquidity provisions on pairs.\nField Name Value Type Description\nid ID Transaction hash plus index in the transaction mint array\ntransaction Transaction reference to the transaction Mint was included in\ntimestamp BigInt timestamp of Mint, used to sort recent liquidity provisions\npair Pair reference to pair\nto Bytes recipient of liquidity tokens\nliquidity BigDecimal amount of liquidity tokens minted\nsender Bytes address that initiated the liquidity provision\namount0 BigDecimal amount of token0 provided\namount1 BigDecimal amount of token1 provided\nlogIndex BigInt index in the transaction event was emitted\namountUSD BigDecimal derived USD value of token0 amount plus token1 amount", "metadata": {"page_number": 144, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c1610276a016", "text": "amount1 BigDecimal amount of token1 provided\nlogIndex BigInt index in the transaction event was emitted\namountUSD BigDecimal derived USD value of token0 amount plus token1 amount\nfeeTo Bytes address of fee recipient (if fee is on)\nfeeLiquidity BigDecimal amount of liquidity sent to fee recipient (if fee is on)\nBurn \nBurn entities are created for every emitted Burn event on the Uniswap core contracts. The Burn entity stores key data about\nthe event like token amounts, who burned LP  tokens, who received tokens, and more. This entity can be used to track\nliquidity removals on pairs.\nField Name Value Type Description\nid ID Transaction hash plus index in the transaction burn array\ntransaction Transaction reference to the transaction Burn was included in\ntimestamp BigInt timestamp of Burn, used to sort recent liquidity removals\npair Pair reference to pair\nto Bytes recipient of tokens", "metadata": {"page_number": 144, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "16d64d247c44", "text": "transaction Transaction reference to the transaction Burn was included in\ntimestamp BigInt timestamp of Burn, used to sort recent liquidity removals\npair Pair reference to pair\nto Bytes recipient of tokens\nliquidity BigDecimal amount of liquidity tokens burned\nsender Bytes address that initiated the liquidity removal\namount0 BigDecimal amount of token0 removed\namount1 BigDecimal amount of token1 removed\nlogIndex BigInt index in the transaction event was emitted\namountUSD BigDecimal derived USD value of token0 amount plus token1 amount\nfeeTo Bytes address of fee recipient (if fee is on)\nfeeLiquidity BigDecimal amount of tokens sent to fee recipient (if fee is on)\nSwap \nSwap entities are created for each token swap within a pair . The Swap entity can be used to get things like swap size (in", "metadata": {"page_number": 144, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c6a65d2faf88", "text": "feeLiquidity BigDecimal amount of tokens sent to fee recipient (if fee is on)\nSwap \nSwap entities are created for each token swap within a pair . The Swap entity can be used to get things like swap size (in\ntokens and USD), sender , recipient and more. See the Swap overview page for more information on amounts.\nField Name Value Type Description\nid ID transaction hash plus index in Transaction swap array\ntransaction Transaction reference to transaction swap was included in\ntimestamp BigInt timestamp of swap, used for sorted lookups\npair Pair reference to pair", "metadata": {"page_number": 144, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4baac324a4c5", "text": "Field Name Value Type Description\nsender Bytes address that initiated the swap\namount0In BigDecimal amount of token0 sold\namount1In BigDecimal amount of token1 sold\namount0Out BigDecimal amount of token0 received\namount1Out BigDecimal amount of token1 received\nto Bytes recipient of output tokens\nlogIndex BigInt event index within transaction\namountUSD BigDecimal derived amount of tokens sold in USD\nBundle \nThe Bundle is used as a global store of derived ETH price in USD. Because there is no guaranteed common base token\nacross pairs, a global reference of USD price is useful for deriving other USD values. The Bundle entity stores an updated\nweighted average of ETH<->Stablecoin pair prices. This provides a strong estimate for the USD price of ETH that can be\nused in other places in the subgraph.\nField Name Value Type Description\nid ID constant 1", "metadata": {"page_number": 145, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4f8fb17321a8", "text": "weighted average of ETH<->Stablecoin pair prices. This provides a strong estimate for the USD price of ETH that can be\nused in other places in the subgraph.\nField Name Value Type Description\nid ID constant 1\nethPrice BigDecimal derived price of ETH in USD based on stablecoin pairs\nHistorical Entities  \nThe subgraph tracks aggregated information grouped by days to provide insights to daily activity on Uniswap. While time\ntravel queries  can be used for direct comparison against values in the past, it is much more expensive to query grouped data.\nFor this reason the subgraph tracks information grouped in daily buckets, using timestamps provided by contract events.\nThese entities can be used to query things like total volume on a given day , price of a token on a given day , etc.\nFor each DayData type, a new entity is created each day .\nUniswapDayData \nTracks data across all pairs aggregated into a daily bucket.", "metadata": {"page_number": 145, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cff09e3584b7", "text": "For each DayData type, a new entity is created each day .\nUniswapDayData \nTracks data across all pairs aggregated into a daily bucket.\nField Name Value Type Description\nid ID unix timestamp for start of day / 86400 giving a unique day index\ndate Int unix timestamp for start of day\ndailyV olumeETH BigDecimal total volume across all pairs on this day , stored as a derived amount of ETH\ndailyV olumeUSD BigDecimal total volume across all pairs on this day , stored as a derived amount of USD\ntotalV olumeETH BigDecimal all time volume across all pairs in ETH up to and including this day\ntotalLiquidityETH BigDecimal total liquidity across all pairs in ETH up to and including this day\ntotalV olumeUSD BigDecimal all time volume across all pairs in USD up to and including this day", "metadata": {"page_number": 145, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b5767ca633d7", "text": "totalLiquidityETH BigDecimal total liquidity across all pairs in ETH up to and including this day\ntotalV olumeUSD BigDecimal all time volume across all pairs in USD up to and including this day\ntotalLiquidityUSD BigDecimal total liquidity across all pairs in USD up to and including this day\nmaxStored Int reference used to store most liquid tokens, used for historical liquidity charts\nmostLiquidT okens [TokenDayData!] tokens with most liquidity in Uniswap\ntxCount BigInt number of transactions throughout this day\nPair Day Data \nTracks pair data across each day .", "metadata": {"page_number": 145, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "472f4f8cc071", "text": "Field Name Value Type Description\nid IDpair contract address and day id (day start timestamp in unix / 86400) concatenated with a\ndash\ndate Int unix timestamp for start of day\npairAddress Bytes address for pair contract\ntoken0 Token reference to token0\ntoken1 Token reference to token1\nreserve0 BigDecimal reserve of token0 (updated during each transaction on pair)\nreserve1 BigDecimal reserve of token1 (updated during each transaction on pair)\ntotalSupply BigDecimal total supply of liquidity token distributed to LPs\nreserveUSD BigDecimal reserve of token0 plus token1 stored as a derived USD amount\ndailyV olumeT oken0 BigDecimal total amount of token0 swapped throughout day\ndailyV olumeT oken1 BigDecimal total amount of token1 swapped throughout day\ndailyV olumeUSD BigDecimal total volume within pair throughout day", "metadata": {"page_number": 146, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "47d97e2037f8", "text": "dailyV olumeT oken1 BigDecimal total amount of token1 swapped throughout day\ndailyV olumeUSD BigDecimal total volume within pair throughout day\ndailyTxns BigInt amount of transactions on pair throughout day\nTokenDayData \nTracks token data aggregated across all pairs that include token.\nField Name Value Type Description\nid ID token address and day id (day start timestamp in unix / 86400) concatenated with a dash\ndate Int unix timestamp for start of day\ntoken Token reference to token entity\ndailyV olumeT oken BigDecimal amount of token swapped across all pairs throughout day\ndailyV olumeETH BigDecimalamount of token swapped across all pairs throughout day stored as a derived amount of\nETH\ndailyV olumeUSD BigDecimalamount of token swapped across all pairs throughout day stored as a derived amount of\nUSD", "metadata": {"page_number": 146, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c02da5192669", "text": "ETH\ndailyV olumeUSD BigDecimalamount of token swapped across all pairs throughout day stored as a derived amount of\nUSD\ndailyTxns BigInt amount of transactions with this token across all pairs\ntotalLiquidityT oken BigDecimal token amount of token deposited across all pairs\ntotalLiquidityETH BigDecimal token amount of token deposited across all pairs stored as amount of ETH\ntotalLiquidityUSD BigDecimal token amount of token deposited across all pairs stored as amount of USD\npriceUSD BigDecimal price of token in derived USD\nmaxStored Intamount of token deposited in pair with highest token liquidity - used only as a reference\nfor storing most liquid pairs for this token\nmostLiquidPairs [PairDayData] pairs with most liquidity for this token\nEdit this page\nHelpful?\nPrevious\nAPI Overview\nNext\nQueries", "metadata": {"page_number": 146, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a65130a21417", "text": "mostLiquidPairs [PairDayData] pairs with most liquidity for this token\nEdit this page\nHelpful?\nPrevious\nAPI Overview\nNext\nQueries\nUniswap Factory\nToken\nPair\nUser\nLiquidityPositiion\nTransaction", "metadata": {"page_number": 146, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "05722fb5b1ff", "text": "Mint\nBurn\nSwap\nBundle\nHistorical Entities\nUniswapDayData\nPair Day Data\nTokenDayData\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 147, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "62f12b8e0c61", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nBlockT imestamp\nERC721Permit\nLiquidityManagement\nMulticall\nPeripheryImmutableState\nPeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest", "metadata": {"page_number": 148, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0107c36e5fdc", "text": "PeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeripheryHelpful?", "metadata": {"page_number": 148, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "95f000f75b79", "text": "Base\nERC721Permit\nOn this page\nERC721Permit\nNonfungible tokens that support an approve via signature, i.e. permit\nFunctions  \n_getAndIncrementNonce \n  function  _getAndIncrementNonce (\n    uint256 tokenId\n  ) internal  virtual returns (uint256)\nCopy\nGets the current nonce for a token ID and then increments it, returning the original value\nconstructor \n  function  constructor (\n    string memory name_,\n    string memory symbol_ ,\n    string memory version_\n  ) internal\nCopy\nComputes the nameHash and versionHash\nDOMAIN_SEPARATOR \n  function  DOMAIN_SEPARATOR (\n  ) public view override returns (bytes32)\nCopy\nThe domain separator used in the permit signature", "metadata": {"page_number": 149, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fe6525ac81c8", "text": "DOMAIN_SEPARATOR \n  function  DOMAIN_SEPARATOR (\n  ) public view override returns (bytes32)\nCopy\nThe domain separator used in the permit signature\nReturn Values:  \nType Description\nbytes32 domain seperator used in encoding of permit signature\npermit \n  function  permit(\n    address spender ,\n    uint256 tokenId ,\n    uint256 deadline ,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external", "metadata": {"page_number": 149, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4379528c4585", "text": "Copy\nApprove of a specific token ID for spending by spender via signature\nParameters:  \nName Type Description\nspender address The account that is being approved\ntokenId uint256 The ID of the token that is being approved for spending\ndeadline uint256 The deadline timestamp by which the call must be mined for the approve to work\nv uint8 Must produce valid secp256k1 signature from the holder along with r and s\nr bytes32 Must produce valid secp256k1 signature from the holder along with v and s\ns bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nEdit this page\nHelpful?\nPrevious\nBlockT imestamp\nNext\nLiquidityManagement\nFunctions\n_getAndIncrementNonce\nconstructor\nDOMAIN_SEP ARA TOR\npermit\nDevelopers\nFeedback", "metadata": {"page_number": 150, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8456f17d1519", "text": "Next\nLiquidityManagement\nFunctions\n_getAndIncrementNonce\nconstructor\nDOMAIN_SEP ARA TOR\npermit\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 150, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "873fc74c63c4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nError CodesHelpful?\nError Codes\nLiquidityMath.sol\nLS: Liquidity Sub\nLA: Liquidity Add", "metadata": {"page_number": 151, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7efad121605b", "text": "\u0000\nV3 Protocol\nTechnical Reference\nError CodesHelpful?\nError Codes\nLiquidityMath.sol\nLS: Liquidity Sub\nLA: Liquidity Add\nOracle.sol\nOLD: The tar get must be chronologically after the oldest observation\nI: The pool has not been initialized\nPosition.sol\nNP: Burn cannot be called for a position with 0 liquidity\nTick.sol", "metadata": {"page_number": 151, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "079d810b6aeb", "text": "LO: LiquidityGrossAfter must be less than MaxLiquidity\nTickMath.sol\nT: The given tick must be less than, or equal to, the maximum tick\nR: second inequality must be < because the price can never reach the price at the max tick\nTransferHelper .sol\nTF: Transfer Failed : errors with TF if transfer fails\nUniswapV3Pool.sol\nLOK: The reentrancy guard. A transaction cannot re-enter the pool mid-swap\nTLU: The lower tick must be below the upper tick\nTLM: The lower tick must be greater , or equal to, the minimum tick\nTUM: The upper tick must be lesser than, or equal to, the maximum tick\nAI: The pool is already initialized\nM0: Mint 0, The balance of token0 in the given pool before minting must be less than, or equal to, the balance after\nminting", "metadata": {"page_number": 152, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "07045ec44eed", "text": "AI: The pool is already initialized\nM0: Mint 0, The balance of token0 in the given pool before minting must be less than, or equal to, the balance after\nminting\nM1: Mint 1, The balance of token1 in the given pool before minting must be less than, or equal to, the balance after\nminting\nAS: amountSpecified  cannot be zero\nSPL: Square root price limit\nIIA: Insuf ficient input amount, an insuf ficient amount of input token was sent during the callback\nL: Liquidity in the pool must be greater than zero for a flash to be executed\nF0: The balance of token0 in the given pool before the flash transaction must be less than, or equal to, the balance of\ntoken0 after the flash plus the fee\nF1: The balance of token1 in the given pool before the flash transaction must be less than, or equal to, the balance of\ntoken1 after the flash plus the fee", "metadata": {"page_number": 152, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3c3d28d822d3", "text": "token0 after the flash plus the fee\nF1: The balance of token1 in the given pool before the flash transaction must be less than, or equal to, the balance of\ntoken1 after the flash plus the fee\nEdit this page\nHelpful?\nPrevious\nDeployment Addresses\nNext\nOverview\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 152, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "104808713dc5", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 153, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2c6178179142", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nCurrencyAmount\nEther\nFraction\nNativeCurrency\nPercent\nPrice\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nEtherHelpful?", "metadata": {"page_number": 154, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cbc01c6496e7", "text": "Price\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nEtherHelpful?\nOn this page\nEther\n@uniswap/sdk-core  / Exports  / Ether\nClass: Ether\nEther is the main usage of a 'native' currency , i.e. for Ethereum mainnet and all testnets", "metadata": {"page_number": 154, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cc35aee2a1cc", "text": "Hierar chy \nNativeCurrency\n\u21b3 Ether\nTable of contents  \nConstructors \nconstructor\nProperties \nchainId\ndecimals\nisNative\nisToken\nname\nsymbol\n_etherCache\nAccessors \nwrapped\nMethods \nequals\nonChain\nConstructors  \nconstructor \n\u2022 Protected  new Ether (chainId )\nParameters  \nName Type\nchainId number\nOverrides  \nNativeCurrency .constructor\nDefined in  \nentities/ether .ts:11\nProperties", "metadata": {"page_number": 155, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4659377c7fc6", "text": "chainId \n\u2022 Readonly  chainId : number\nThe chain ID on which this currency resides\nInherited fr om \nNativeCurrency .chainId\nDefined in  \nentities/baseCurrency .ts:21\ndecimals \n\u2022 Readonly  decimals : number\nThe decimals used in representing currency amounts\nInherited fr om \nNativeCurrency .decimals\nDefined in  \nentities/baseCurrency .ts:25\nisNative \n\u2022 Readonly  isNative : true\nInherited fr om \nNativeCurrency .isNative\nDefined in  \nentities/nativeCurrency .ts:7\nisToken \n\u2022 Readonly  isToken : false\nInherited fr om \nNativeCurrency .isToken\nDefined in  \nentities/nativeCurrency .ts:8", "metadata": {"page_number": 156, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4cf059718c47", "text": "name \n\u2022 Optional  Readonly  name : string\nThe name of the currency , i.e. a descriptive textual non-unique identifier\nInherited fr om \nNativeCurrency .name\nDefined in  \nentities/baseCurrency .ts:33\nsymbol \n\u2022 Optional  Readonly  symbol : string\nThe symbol of the currency , i.e. a short textual non-unique identifier\nInherited fr om \nNativeCurrency .symbol\nDefined in  \nentities/baseCurrency .ts:29\n_etherCache \n\u25aa Static  Private  _etherCache : Object  = {}\nIndex signatur e \n\u25aa [chainId: number ]: Ether\nDefined in  \nentities/ether .ts:21\nAccessors  \nwrapped \n\u2022 get wrapped (): Token", "metadata": {"page_number": 157, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "113764d65872", "text": "Index signatur e \n\u25aa [chainId: number ]: Ether\nDefined in  \nentities/ether .ts:21\nAccessors  \nwrapped \n\u2022 get wrapped (): Token\nReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to\nbe used in Uniswap\nReturns", "metadata": {"page_number": 157, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6ce355c434f1", "text": "Token\nOverrides  \nNativeCurrency .wrapped\nDefined in  \nentities/ether .ts:15\nMethods  \nequals \n\u25b8 equals (other ): boolean\nReturns whether this currency is functionally equivalent to the other currency\nParameters  \nName Type Description\notherCurrency the other currency\nReturns  \nboolean\nOverrides  \nNativeCurrency .equals\nDefined in  \nentities/ether .ts:27\nonChain \n\u25b8 Static  onChain (chainId ): Ether\nParameters  \nName Type\nchainId number\nReturns  \nEther\nDefined in  \nentities/ether .ts:23", "metadata": {"page_number": 158, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc2a66848a63", "text": "Edit this page\nHelpful?\nPrevious\nCurrencyAmount\nNext\nFraction\nHierarchy\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties\nchainId\ndecimals\nisNative\nisToken\nname\nsymbol\n_etherCache\nAccessors\nwrapped\nMethods\nequals\nonChain\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 159, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "329f52911521", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 159, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7ad58ee34385", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nSubgraph\nOverview\nGuides\nQuery Examples\n\u0000\nSubgraph\nGuides\nQuery ExamplesHelpful?\nOn this page\nSubgraph Query Examples\nThis doc will teach you how to query Uniswap V3 analytics by writing GraphQL  queries on the subgraph. You can fetch data points like :\ncollected fees for a position\ncurrent liquidity  of a pool\nvolume on a certain day\nand much more. Below are some example queries. To run a query copy and paste it into the v3 explorer  to get fresh data.\nGlobal Data", "metadata": {"page_number": 160, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ff1a7271fa9b", "text": "current liquidity  of a pool\nvolume on a certain day\nand much more. Below are some example queries. To run a query copy and paste it into the v3 explorer  to get fresh data.\nGlobal Data  \nGlobal data refers to data points about the Uniswap v3 protocol as a whole. Some examples of global data points are total value locked in the protocol,\ntotal pools deployed, or total transaction counts. Thus, to query global data you must pass in the Uniswap V3 Factory address\n0x1F98431c8aD98523631AE4a59f267346ea31F984  and select the desired fields. Reference the full factory schema  to see all possible fields.\nCurrent Global Data \nAn example querying total pool count, transaction count, and total volume in USD and ETH:\n{", "metadata": {"page_number": 160, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1e0f3147508a", "text": "Current Global Data \nAn example querying total pool count, transaction count, and total volume in USD and ETH:\n{\n  factory(id: \"0x1F98431c8aD98523631AE4a59f267346ea31F984\" ) {\n    poolCount\n    txCount\n    totalVolumeUSD\n    totalVolumeETH\n  }\n}\nCopy\nHistorical Global Data \nYou can also query historical data by specifying a block number .\n{\n  factory(id: \"0x1F98431c8aD98523631AE4a59f267346ea31F984\", block: {number: 13380584}){\n    poolCount\n    txCount\n    totalVolumeUSD\n    totalVolumeETH\n  }\n}\nCopy", "metadata": {"page_number": 160, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1c7db3d4c425", "text": "poolCount\n    txCount\n    totalVolumeUSD\n    totalVolumeETH\n  }\n}\nCopy", "metadata": {"page_number": 160, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "211edb18c86c", "text": "Pool Data  \nTo get data about a certain pool, pass in the pool address. Reference the full pool schema  and adjust the query fields to retrieve the data points you\nwant.\nGeneral Pool Query \nThe query below returns the feeT ier, spot price, and liquidity for the ETH-USDC pool.\n{\n  pool(id: \"0x8ad599c3a0ff1de082011efddc58f1908eb6e6d8\") {\n    tick\n    token0 {\n      symbol\n      id\n      decimals\n    }\n    token1 {\n      symbol\n      id\n      decimals\n    }\n    feeTier\n    sqrtPrice\n    liquidity\n  }\n}\nCopy\nAll Possible Pools", "metadata": {"page_number": 161, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c0b99a50906c", "text": "symbol\n      id\n      decimals\n    }\n    feeTier\n    sqrtPrice\n    liquidity\n  }\n}\nCopy\nAll Possible Pools \nThe maxiumum items you can query at once is 1000. Thus to get all possible pools, you can interate using the skip variable. To get pools beyond the\nfirst 1000 you can also set the skip as shown below .\nSkipping First 1000 Pools \nThis query sets the skip value and returns the first 10 responses after the first 1000.\n{\n  pools(first:10, skip:1000){\n    id\n    token0 {\n      id\n      symbol\n    }\n    token1 {\n      id\n      symbol\n    }\n  }\n}\nCopy\nCreating a Skip Variable", "metadata": {"page_number": 161, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6df166859582", "text": "id\n      symbol\n    }\n    token1 {\n      id\n      symbol\n    }\n  }\n}\nCopy\nCreating a Skip Variable \nThis next query sets a skip variable. In your language and environment of choice you can then iterate through a loop, query to get 1000 pools each time,\nand continually adjust skip by 1000 until all pool responses are returned.\nCheck out this example  from our interface for poolDayData that does something similar .\nNote: This query will not work in the graph explorer and more resembles the structure of a query you'd pass to some graphql middleware like Apollo.\nquery pools( $skip: Int!) {\n    pools(\n      first: 1000\n      skip: $skip\n      orderDirection: asc\n    ) {\n      id\n      sqrtPrice\n      token0 {\n        id\n      }", "metadata": {"page_number": 161, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3ffdc10bc154", "text": "first: 1000\n      skip: $skip\n      orderDirection: asc\n    ) {\n      id\n      sqrtPrice\n      token0 {\n        id\n      }\n      token1 {\n        id", "metadata": {"page_number": 161, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1c06e0981471", "text": "}\n    }\n  }\nCopy\nMost Liquid Pools \nRetrieve the top 1000 most liquid pools. You can use this similar set up to orderBy other variables like number of swaps or volume.\n{\n pools(first: 1000, orderBy: liquidity, orderDirection: desc) {\n   id\n }\n}\nCopy\nPool Daily Aggregated \nThis query returns daily aggregated data for the first 10 days since the given timestamp for the UNI-ETH pool.\n{\n  poolDayDatas(first: 10, orderBy: date, where: {\n    pool: \"0x1d42064fc4beb5f8aaf85f4617ae8b3b5b8bd801\",\n    date_gt: 1633642435\n  } ) {\n    date\n    liquidity\n    sqrtPrice", "metadata": {"page_number": 162, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d906dc0a8e18", "text": "date_gt: 1633642435\n  } ) {\n    date\n    liquidity\n    sqrtPrice\n    token0Price\n    token1Price\n    volumeToken0\n    volumeToken1\n  }\n}\nCopy\nSwap Data  \nGeneral Swap Data \nTo query data about a particular swap, input the transaction hash + \"#\" + the index in the swaps the transaction array .R This is the reference for the full\nswap schema .\nThis query fetches data about the sender , receiver , amounts, transaction data, and timestamp for a particular swap.\n{\n   swap(id: \"0x000007e1111cbd97f74cfc6eea2879a5b02020f26960ac06f4af0f9395372b64#66785\") {\n    sender\n    recipient", "metadata": {"page_number": 162, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5c8ecb682e4b", "text": "sender\n    recipient\n    amount0\n    amount1\n    transaction {\n      id\n      blockNumber\n      gasUsed\n      gasPrice\n    }\n    timestamp\n    token0 {\n      id\n      symbol\n    }\n    token1 {\n      id\n      symbol\n    }\n   }\n }\nCopy\nRecent Swaps Within a Pool", "metadata": {"page_number": 162, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "620e74ce1aae", "text": "You can set the where  field to filter swap data by pool address. This example fetches data about multiple swaps for the USDC-USDT  pool, ordered by\ntimestamp.\n{\nswaps(orderBy: timestamp, orderDirection: desc, where:\n { pool: \"0x7858e59e0c01ea06df3af3d20ac7b0003275d4bf\" }\n) {\n  pool {\n    token0 {\n      id\n      symbol\n    }\n    token1 {\n      id\n      symbol\n    }\n  }\n  sender\n  recipient\n  amount0\n  amount1\n }\n}\nCopy\nToken Data  \nInput the the token contract address to fetch token data. Any token that exists in at least one Uniswap V3 pool can be queried. The output will aggregate", "metadata": {"page_number": 163, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "916232d405b1", "text": "amount1\n }\n}\nCopy\nToken Data  \nInput the the token contract address to fetch token data. Any token that exists in at least one Uniswap V3 pool can be queried. The output will aggregate\ndata across all v3 pools that include the token.\nGeneral Token Data \nThis queries the decimals, symbol, name, pool count, and volume in USD for the UNI token. Reference the full token schema  for all possible fields you\ncan query .\n{\n  token(id:\"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\") {\n    symbol\n    name\n    decimals\n    volumeUSD\n    poolCount\n  }\n}\nCopy\nToken Daily Aggregated", "metadata": {"page_number": 163, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0664285d5c69", "text": "symbol\n    name\n    decimals\n    volumeUSD\n    poolCount\n  }\n}\nCopy\nToken Daily Aggregated \nYou can fetch aggregate data about a specific token over a 24-hour period. This query gets 10-days of the 24-hour volume data for the UNI token\nordered from oldest to newest.\n{\n  tokenDayDatas(first: 10, where: {token: \"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\"}, orderBy: date, orderDirection: asc) {\n    date\n    token {\n      id\n      symbol\n    }\n    volumeUSD\n  }\n}\nCopy\nAll Tokens", "metadata": {"page_number": 163, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4589c25e46c9", "text": "date\n    token {\n      id\n      symbol\n    }\n    volumeUSD\n  }\n}\nCopy\nAll Tokens \nSimilar to retrieving all pools, you can fetch all tokens by using skip. Note: This query will not work in the graph sandbox and more resembles the\nstructure of a query you'd pass to some graphql middleware like Apollo.\nquery tokens($skip: Int!) {\n  tokens(first: 1000, skip: $skip) {\n    id\n    symbol\n    name\n  }\n}", "metadata": {"page_number": 163, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "408ad0219807", "text": "Copy\nPosition Data\nGeneral Position Data \nTo get data about a specific position, input the NFT  tokenId. This queries the collected fees for token0 and token1 and current liquidity for the position\nwith tokedId 3. Reference the full position schema  to see all fields.\n{\n  position(id:3) {\n    id\n    collectedFeesToken0\n    collectedFeesToken1\n    liquidity\n    token0 {\n      id\n      symbol\n    }\n    token1\n    {\n      id\n      symbol\n    }\n  }\n}\nCopy\nContribute  \nThere are many more queries you can do with the Uniswap v3 subgraph including data related to ticks, mints, positions, and burns. Once again you can", "metadata": {"page_number": 164, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "603172109b7d", "text": "}\n}\nCopy\nContribute  \nThere are many more queries you can do with the Uniswap v3 subgraph including data related to ticks, mints, positions, and burns. Once again you can\nreference the full schema here. If you'd like to suggest more example queries to showcase, feel free to drop some suggestions in discord  under #dev-\nchat or contribute  your own queries by submitting a pull request to the docs repo.\nEdit this page\nHelpful?\nPrevious\nOverview\nGlobal Data\nCurrent Global Data\nHistorical Global Data\nPool Data\nGeneral Pool Query\nAll Possible Pools\nSkipping First 1000 Pools\nCreating a Skip Variable\nMost Liquid Pools\nPool Daily Aggregated\nSwap Data\nGeneral Swap Data\nRecent Swaps Within a Pool\nToken Data\nGeneral Token Data", "metadata": {"page_number": 164, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0741e2493acb", "text": "Creating a Skip Variable\nMost Liquid Pools\nPool Daily Aggregated\nSwap Data\nGeneral Swap Data\nRecent Swaps Within a Pool\nToken Data\nGeneral Token Data\nToken Daily Aggregated\nAll Tokens\nPosition Data\nGeneral Position Data\nContribute\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 164, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6ac12505d66a", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 165, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3c11528ef611", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\nOverview\nGuides\nConnect to Uniswap\nPool Liquidity\nTrade Tokens\nCustom Linking\nIframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nTechnical Reference\nExchangeHelpful?", "metadata": {"page_number": 166, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "19773f7a21d3", "text": "Iframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nTechnical Reference\nExchangeHelpful?\nOn this page\nsetup\nParameter Description\ntoken_addr Ethereum address of an ERC20 Token\nSmart Contract  \n# Can only be called by factory contract during createExchange()\nsetup(token_addr : address ):\nCopy\nWeb3", "metadata": {"page_number": 166, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94f56ea244b8", "text": "// Can only be called by factory contract during createExchange()\nexchangeContract .methods.setup((token: String)).send()\nCopy\naddLiquidity\nParameter Type Description\nmsg.value uint256 Amount of ETH added\nmin_liquidity uint256 Minimum minted liquidity\nmax_tokens uint256 Maximum ERC20 tokens added\ndeadline uint256 Transaction deadline\nReturns\nuint256 Amount of liquidity tokens minted\nSmart Contract  \n@payable\naddLiquidity (\n    min_liquidity : uint256 ,\n    max_tokens : uint256 ,\n    deadline : uint256\n): uint256\nCopy\nWeb3", "metadata": {"page_number": 167, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6894d999f6a6", "text": "min_liquidity : uint256 ,\n    max_tokens : uint256 ,\n    deadline : uint256\n): uint256\nCopy\nWeb3 \nexchangeContract .methods.addLiquidity (min_liquidity , max_tokens , deadline ).send({ value: ethValue })\nCopy\nremoveLiquidity\nParameter Type Description\namount uint256 Amount of liquidity burned\nmin_eth uint256 Minimum ETH removed\nmin_tokens uint256 Minimum ERC20 tokens removed\ndeadline uint256 Transaction deadline\nReturns\nuint256 Amount of ETH removed\nuint256 Amount of ERC20 tokens removed.\nSmart Contract  \nremoveLiquidity (\n    amount : uint256 ;\n    min_eth : uint256 ,", "metadata": {"page_number": 167, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "52e6ce770286", "text": "uint256 Amount of ERC20 tokens removed.\nSmart Contract  \nremoveLiquidity (\n    amount : uint256 ;\n    min_eth : uint256 ,\n    min_tokens : uint256 ,\n    deadline : uint256\n): (uint256, uint256 )\nCopy\nWeb3 \nexchangeContract .methods.removeLiquidity (amount, min_eth , min_tokens , deadline ).send()\nCopy", "metadata": {"page_number": 167, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "77c20ed5528b", "text": "default\nParameter Type Description\nmsg.value uint256 Amount of ETH sold\nSmart Contract  \n# Default function in Vyper replaces the \"fallback\" function in Solidity\n@payable\n__default__ ():\nCopy\nWeb3 \nweb3.eth.sendTransaction ({ value: ethAmount })\nCopy\nethT oTokenSwapInput\nParameter Type Description\nmsg.value uint256 Amount of ETH sold\nmin_tokens uint256 Minimum ERC20 tokens bought\ndeadline uint256 Transaction deadline\nReturns\nuint256 Amount of ERC20 tokens bought\nSmart Contract  \n@payable\nethToTokenSwapInput (\n    min_tokens : uint256 ,\n    deadline : uint256", "metadata": {"page_number": 168, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f58ac2dcf059", "text": "uint256 Amount of ERC20 tokens bought\nSmart Contract  \n@payable\nethToTokenSwapInput (\n    min_tokens : uint256 ,\n    deadline : uint256\n): uint256\nCopy\nWeb3 \nexchangeContract .methods.ethToTokenSwapInput (min_liquidity , max_tokens , deadline ).send({ value: ethValue })\nCopy\nethT oTokenT ransferInput\nParameter Type Description\nmsg.value uint256 Amount of ETH sold\nmin_tokens uint256 Minimum ERC20 tokens bought\ndeadline uint256 Transaction deadline\nrecipient address Address that receives ERC20 tokens\nReturns\nuint256 Amount of ERC20 tokens bought\nSmart Contract  \n@payable", "metadata": {"page_number": 168, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f961274b88a4", "text": "deadline uint256 Transaction deadline\nrecipient address Address that receives ERC20 tokens\nReturns\nuint256 Amount of ERC20 tokens bought\nSmart Contract  \n@payable\nethToTokenTransferInput (", "metadata": {"page_number": 168, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0cf57ea1e95c", "text": "min_tokens : uint256 ,\n    deadline : uint256 ,\n    recipient : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .ethToTokenTransferInput (min_liquidity , max_tokens , deadline , recipient )\n  .send({ value: ethValue })\nCopy\nethT oTokenSwapOutput\nParameter Type Description\nmsg.value uint256 Maximum ETH sold\ntokens_bought uint256 Amount of ERC20 tokens bought\ndeadline uint256 Transaction deadline\nReturns\nuint256 Amount of ETH sold\nSmart Contract  \n@payable\nethToTokenSwapOutput (\n    tokens_bought : uint256 ,\n    deadline : uint256\n): uint256", "metadata": {"page_number": 169, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b9234ae2e57c", "text": "Smart Contract  \n@payable\nethToTokenSwapOutput (\n    tokens_bought : uint256 ,\n    deadline : uint256\n): uint256\nCopy\nWeb3 \nexchangeContract .methods.ethToTokenSwapOutput (tokens_bought , deadline ).send({ value: ethValue })\nCopy\nethT oTokenT ransferOutput\nParameter Type Description\nmsg.value uint256 Maximum ETH sold\ntokens_bought uint256 Amount of ERC20 tokens bought\ndeadline uint256 Transaction deadline\nrecipient address Address that receives ERC20 tokens\nReturns\nuint256 Amount of ETH sold\nSmart Contract  \n@payable\nethToTokenTransferOutput (\n    tokens_bought : uint256 ,", "metadata": {"page_number": 169, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b4ac974a6fb5", "text": "Returns\nuint256 Amount of ETH sold\nSmart Contract  \n@payable\nethToTokenTransferOutput (\n    tokens_bought : uint256 ,\n    deadline : uint256 ,\n    recipient : address\n): uint256\nCopy", "metadata": {"page_number": 169, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9a367bf7dafb", "text": "Web3 \nexchangeContract .methods\n  .ethToTokenTransferOutput (tokens_bought , deadline , (recipient : String))\n  .send({ value: ethValue })\nCopy\ntokenT oEthSwapInput\nParameter Type Description\ntokens_sold uint256 Amount of ERC20 tokens sold\nmin_eth uint256 Minimum ETH bought\ndeadline uint256 Transaction deadline\nReturns\nuint256 Amount of ETH bought\nSmart Contract  \ntokenToEthSwapInput (\n    tokens_sold : uint256 ,\n    min_eth : uint256 ,\n    deadline : uint256\n): uint256\nCopy\nWeb3", "metadata": {"page_number": 170, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "29b0ea86b8d6", "text": "tokens_sold : uint256 ,\n    min_eth : uint256 ,\n    deadline : uint256\n): uint256\nCopy\nWeb3 \nexchangeContract .methods.tokenToEthSwapInput (tokens_sold , min_eth , deadline ).send()\nCopy\ntokenT oEthT ransferInput\nParameter Type Description\ntokens_sold uint256 Amount of ERC20 tokens sold\nmin_eth uint256 Minimum ETH bought\ndeadline uint256 Transaction deadline\nrecipient address Address that receives ETH\nReturns\nuint256 Amount of ETH bought\nSmart Contract  \ntokenToEthTransferInput (\n    tokens_sold : uint256 ,\n    min_eth : uint256 ,\n    deadline : uint256 ,", "metadata": {"page_number": 170, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8c5378189de9", "text": "Smart Contract  \ntokenToEthTransferInput (\n    tokens_sold : uint256 ,\n    min_eth : uint256 ,\n    deadline : uint256 ,\n    recipient : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods.tokenToEthTransferInput (tokens_sold , min_eth , deadline , recipient ).send()\nCopy", "metadata": {"page_number": 170, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eb8fb012f745", "text": "tokenT oEthSwapOutput\nParameter Type Description\neth_bought uint256 Amount of ETH bought\nmax_tokens uint256 Maximum ERC20 tokens sold\ndeadline uint256 Transaction deadline\nReturns\nuint256 Amount of ERC20 tokens sold\nSmart Contract  \ntokenToEthSwapOutput (\n    eth_bought : uint256 ,\n    max_tokens : uint256 ,\n    deadline : uint256\n): uint256\nCopy\nWeb3 \nexchangeContract .methods.tokenToEthSwapOutput (eth_bought , max_tokens , (deadline : Integer)).send()\nCopy\ntokenT oEthT ransferOutput\nParameter Type Description\neth_bought uint256 Amount of ETH bought", "metadata": {"page_number": 171, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "144503a2cae2", "text": "Copy\ntokenT oEthT ransferOutput\nParameter Type Description\neth_bought uint256 Amount of ETH bought\nmax_tokens uint256 Maximum ERC20 tokens sold\ndeadline uint256 Transaction deadline\nrecipient address Address that receives ETH\nReturns\nuint256 Amount of ERC20 tokens sold\nSmart Contract  \ntokenToEthTransferOutput (\n    eth_bought : uint256 ,\n    max_tokens : uint256 ,\n    deadline : uint256 ,\n    recipient : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .tokenToEthTransferOutput (eth_bought , max_tokens , (deadline : Integer), (recipient : String))\n  .send()\nCopy", "metadata": {"page_number": 171, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1eab19a59489", "text": "Web3 \nexchangeContract .methods\n  .tokenToEthTransferOutput (eth_bought , max_tokens , (deadline : Integer), (recipient : String))\n  .send()\nCopy\ntokenT oTokenSwapInput\nParameter Type Description\ntokens_sold uint256 Amount of input ERC20 tokens sold\nmin_tokens_bought uint256 Minimum output ERC20 tokens bought", "metadata": {"page_number": 171, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "535b3145185f", "text": "Parameter Type Description\nmin_eth_bought uint256 Minimum ETH bought as intermediary\ndeadline uint256 Transaction deadline\ntoken_addr address Address of output ERC20 token\nReturns\nuint256 Amount of output ERC20 tokens bought\nSmart Contract  \ntokenToTokenSwapInput (\n    tokens_sold : uint256 ,\n    min_tokens_bought : uint256 ,\n    min_eth_bought : uint256 ,\n    deadline : uint256 ,\n    token_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .tokenToTokenSwapInput (tokens_sold , min_tokens_bought , min_eth_bought , deadline , token_addr )\n  .send()\nCopy", "metadata": {"page_number": 172, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ef540c76cdf3", "text": "exchangeContract .methods\n  .tokenToTokenSwapInput (tokens_sold , min_tokens_bought , min_eth_bought , deadline , token_addr )\n  .send()\nCopy\ntokenT oTokenT ransferInput\nParameter Type Description\ntokens_sold uint256 Amount of input ERC20 tokens sold\nmin_tokens_bought uint256 Minimum output ERC20 tokens bought\nmin_eth_bought uint256 Minimum ETH bought as intermediary\ndeadline uint256 Transaction deadline\nrecipient address Address that receives output ERC20 tokens\ntoken_addr address Address of output ERC20 token\nReturns\nuint256 Amount of output ERC20 tokens bought\nSmart Contract  \ntokenToTokenTransferInput (\n    tokens_sold : uint256 ,", "metadata": {"page_number": 172, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2d01208b26da", "text": "Returns\nuint256 Amount of output ERC20 tokens bought\nSmart Contract  \ntokenToTokenTransferInput (\n    tokens_sold : uint256 ,\n    min_tokens_bought : uint256 ,\n    min_eth_bought : uint256 ,\n    deadline : uint256 ,\n    recipient : address\n    token_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .tokenToTokenTransferInput (tokens_sold , min_tokens_bought , min_eth_bought , deadline , recipient , token_addr )\n  .send()\nCopy\ntokenT oTokenSwapOutput", "metadata": {"page_number": 172, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8d5326ee1904", "text": "Parameter Type Description\ntokens_bought uint256 Amount of output ERC20 tokens bought\nmax_tokens_sold uint256 Maximum input ERC20 tokens bought\nmax_eth_sold uint256 Maximum ETH bought as intermediary\ndeadline uint256 Transaction deadline\ntoken_addr address Address of output ERC20 token\nReturns\nuint256 Amount of input ERC20 tokens sold\nSmart Contract  \ntokenToTokenSwapOutput (\n    tokens_bought : uint256 ,\n    max_tokens_sold : uint256 ,\n    max_eth_sold : uint256 ,\n    deadline : uint256 ,\n    token_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods", "metadata": {"page_number": 173, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e54f597e841", "text": "deadline : uint256 ,\n    token_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .tokenToTokenSwapOutput (tokens_bought , max_tokens_sold , max_eth_sold , deadline , token_addr )\n  .send()\nCopy\ntokenT oTokenT ransferOutput\nParameter Type Description\ntokens_bought uint256 Amount of output ERC20 tokens bought\nmax_tokens_sold uint256 Maximum input ERC20 tokens bought\nmax_eth_sold uint256 Maximum ETH bought as intermediary\ndeadline uint256 Transaction deadline\nrecipient address Address that receives output ERC20 tokens\ntoken_addr address Address of output ERC20 token\nReturns\nuint256 Amount of input ERC20 tokens sold", "metadata": {"page_number": 173, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1178fe54466f", "text": "deadline uint256 Transaction deadline\nrecipient address Address that receives output ERC20 tokens\ntoken_addr address Address of output ERC20 token\nReturns\nuint256 Amount of input ERC20 tokens sold\nSmart Contract  \ntokenToTokenTransferOutput (\n    tokens_bought : uint256 ,\n    max_tokens_sold : uint256 ,\n    max_eth_sold : uint256 ,\n    deadline : uint256 ,\n    recipient : address ,\n    token_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .tokenToTokenTransferOutput (tokens_bought , max_tokens_sold , max_eth_sold , deadline , recipient , token_addr )\n  .send()\nCopy", "metadata": {"page_number": 173, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b3899273e8e7", "text": "tokenT oExchangeSwapInput\nParameter Type Description\ntokens_sold uint256 Amount of input ERC20 tokens sold\nmin_tokens_bought uint256 Minimum output ERC20 tokens bought\nmin_eth_bought uint256 Minimum ETH bought as intermediary\ndeadline uint256 Transaction deadline\nexchange_addr address Address of output ERC20 token exchange\nReturns\nuint256 Amount of output ERC20 tokens bought\nSmart Contract  \ntokenToTokenSwapInput (\n    tokens_sold : uint256 ,\n    min_tokens_bought : uint256 ,\n    min_eth_bought : uint256 ,\n    deadline : uint256 ,\n    exchange_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods", "metadata": {"page_number": 174, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4e6b44a24f98", "text": "deadline : uint256 ,\n    exchange_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .tokenToTokenSwapInput (tokens_sold , min_tokens_bought , min_eth_bought , deadline , exchange_addr )\n  .send()\nCopy\ntokenT oExchangeT ransferInput\nParameter Type Description\ntokens_sold uint256 Amount of input ERC20 tokens sold\nmin_tokens_bought uint256 Minimum output ERC20 tokens bought\nmin_eth_bought uint256 Minimum ETH bought as intermediary\ndeadline uint256 Transaction deadline\nrecipient address Address that receives output ERC20 tokens\nexchange_addr address Address of output ERC20 token exchange\nReturns\nuint256 Amount of output ERC20 tokens bought", "metadata": {"page_number": 174, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc43975168e3", "text": "deadline uint256 Transaction deadline\nrecipient address Address that receives output ERC20 tokens\nexchange_addr address Address of output ERC20 token exchange\nReturns\nuint256 Amount of output ERC20 tokens bought\nSmart Contract  \ntokenToExchangeTransferInput (\n    tokens_sold : uint256 ,\n    min_tokens_bought : uint256 ,\n    min_eth_bought : uint256 ,\n    deadline : uint256 ,\n    recipient : address\n    exchange_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .tokenToExchangeTransferInput (tokens_sold , min_tokens_bought , min_eth_bought , deadline , recipient , exchange_addr )", "metadata": {"page_number": 174, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "71fd2c7c9421", "text": ".send()\nCopy\ntokenT oExchangeSwapOutput\nParameter Type Description\ntokens_bought uint256 Amount of output ERC20 tokens bought\nmax_tokens_sold uint256 Maximum input ERC20 tokens bought\nmax_eth_sold uint256 Maximum ETH bought as intermediary\ndeadline uint256 Transaction deadline\nexchange_addr address Address of output ERC20 token exchange\nReturns\nuint256 Amount of input ERC20 tokens sold\nSmart Contract  \ntokenToExchangeSwapOutput (\n    tokens_bought : uint256 ,\n    max_tokens_sold : uint256 ,\n    max_eth_sold : uint256 ,\n    deadline : uint256 ,\n    exchange_addr : address\n): uint256\nCopy\nWeb3", "metadata": {"page_number": 175, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "90338f880e37", "text": "max_eth_sold : uint256 ,\n    deadline : uint256 ,\n    exchange_addr : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods\n  .tokenToExchangeSwapOutput (tokens_bought , max_tokens_sold , max_eth_sold , deadline , exchange_addr )\n  .send()\nCopy\ntokenT oExchangeT ransferOutput\nParameter Type Description\ntokens_bought uint256 Amount of output ERC20 tokens bought\nmax_tokens_sold uint256 Maximum input ERC20 tokens bought\nmax_eth_sold uint256 Maximum ETH bought as intermediary\ndeadline uint256 Transaction deadline\nrecipient address Address that receives output ERC20 tokens\nexchange_addr address Address of output ERC20 token exchange\nReturns", "metadata": {"page_number": 175, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "36501ab394a9", "text": "deadline uint256 Transaction deadline\nrecipient address Address that receives output ERC20 tokens\nexchange_addr address Address of output ERC20 token exchange\nReturns\nuint256 Amount of input ERC20 tokens sold\nSmart Contract  \ntokenToExchangeTransferOutput (\n    tokens_bought : uint256 ,\n    max_tokens_sold : uint256 ,\n    max_eth_sold : uint256 ,\n    deadline : uint256 ,\n    recipient : address ,\n    exchange_addr : address\n): uint256\nCopy", "metadata": {"page_number": 175, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3e2457aa0c3e", "text": "Web3 \nexchangeContract .methods\n  .tokenToExchangeTransferOutput (tokens_bought , max_tokens_sold , max_eth_sold , deadline , recipient , exchange_addr )\n  .send()\nCopy\ngetEthT oTokenInputPrice\nParameter Type Description\neth_sold uint256 Amount of ETH sold\nReturns\nuint256 Amount of ERC20 tokens that can be bought\nSmart Contract  \n@constant\ngetEthToTokenInputPrice (eth_sold : uint256 ): uint256\nCopy\nWeb3 \nexchangeContract .methods.getEthToTokenInputPrice (eth_sold ).call()\nCopy\ngetEthT oTokenOutputPrice\nParameter Type Description", "metadata": {"page_number": 176, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5ff3a0a65273", "text": "Web3 \nexchangeContract .methods.getEthToTokenInputPrice (eth_sold ).call()\nCopy\ngetEthT oTokenOutputPrice\nParameter Type Description\ntokens_bought uint256 Amount of ERC20 tokens bought\nReturns\nuint256 Amount of ETH that must be sold\nSmart Contract  \n@constant\ngetEthToTokenOutputPrice (tokens_bought : uint256 ): uint256\nCopy\nWeb3 \nexchangeContract .methods.getEthToTokenOutputPrice (tokens_bought ).call()\nCopy\ngetTokenT oEthInputPrice\nParameter Type Description\ntokens_sold uint256 Amount of ERC20 tokens sold\nReturns\nuint256 Amount of ETH that can be bought\nSmart Contract", "metadata": {"page_number": 176, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a9f24b064506", "text": "@constant\ngetTokenToEthInputPrice (tokens_sold : uint256 ): uint256\nCopy\nWeb3 \nexchangeContract .methods.getTokenToEthInputPrice (tokens_sold ).call()\nCopy\ngetTokenT oEthOutputPrice\nParameter Type Description\neth_bought uint256 Amount of ETH bought\nReturns\nuint256 Amount of ERC20 tokens that must be sold\nSmart Contract  \n@constant\ngetTokenToEthOutputPrice (eth_bought : uint256 ): uint256\nCopy\nWeb3 \nexchangeContract .methods.getTokenToEthOutputPrice (eth_bought ).call()\nCopy\ntokenAddr ess\nReturns\naddress Address of ERC20 token sold on exchange", "metadata": {"page_number": 177, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "52002d0aeb83", "text": "exchangeContract .methods.getTokenToEthOutputPrice (eth_bought ).call()\nCopy\ntokenAddr ess\nReturns\naddress Address of ERC20 token sold on exchange\nSmart Contract  \n@constant\ntokenAddress (): address\nCopy\nWeb3 \nexchangeContract .methods.tokenAddress ().call()\nCopy\nfactoryAddr ess\nReturns\naddress Address of factory that created exchange\nSmart Contract  \n@constant\nfactoryAddress (): address", "metadata": {"page_number": 177, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8453f128a5dd", "text": "Copy\nWeb3 \nexchangeContract .methods.factoryAddress ().call()\nCopy\nname\nReturns\nbytes32 Name of liquidity token\nSmart Contract  \n# all exchange contracts have the same name\n@constant\nname(): bytes32 // Uniswap V1\nCopy\nWeb3 \nexchangeContract .methods.tokenAddress ().call()\nCopy\nsymbol\nReturns\nbytes32 Symbol of liquidity token\nSmart Contract  \n# all exchange contracts have the same symbol\n@constant\nsymbol(): bytes32 // UNI-V1\nCopy\nWeb3 \nexchangeContract .methods.tokenAddress ().call()\nCopy\ndecimals\nReturns", "metadata": {"page_number": 178, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "316e942d0185", "text": "symbol(): bytes32 // UNI-V1\nCopy\nWeb3 \nexchangeContract .methods.tokenAddress ().call()\nCopy\ndecimals\nReturns\nuint256 Decimals of liquidity token\nSmart Contract  \n# all exchange contracts have the same decimals\n@constant\ndecimals (): uint256 // 18\nCopy", "metadata": {"page_number": 178, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db3688539a0f", "text": "Web3 \nexchangeContract .methods.decimals ().call()\nCopy\nbalanceOf\nParameter Type Description\n_owner address Ethereum address\nReturns\nuint256 Liquidity token balance of address\nSmart Contract  \n@constant\nbalanceOf (_owner: address ): uint256\nCopy\nWeb3 \nexchangeContract .methods.balanceOf (_owner).call()\nCopy\ntransfer\nParameter Type Description\n_to address Recipient address\n_value uint256 Amount transferred\nReturns\nbool True if successful. Reverts or false on failure\nSmart Contract  \ntransfer (\n    _to: address ,\n    _value : uint256\n): bool\nCopy\nWeb3", "metadata": {"page_number": 179, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db31cd17a898", "text": "Smart Contract  \ntransfer (\n    _to: address ,\n    _value : uint256\n): bool\nCopy\nWeb3 \nexchangeContract .methods.transfer (_to, _value).send()\nCopy\ntransferFr om\nParameter Type Description\n_from address Sender address\n_to address Recipient address\n_value uint256 Amount transferred\nReturns\nbool True if successful. Reverts or false on failure", "metadata": {"page_number": 179, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1a8bde5a6d70", "text": "Smart Contract  \ntransferFrom (\n    _from : address ,\n    _to: address ,\n    _value : uint256\n): bool\nCopy\nWeb3 \nexchangeContract .methods.transferFrom (_from, _to, _value).send()\nCopy\nappr ove\nParameter Type Description\n_spender address Address of approved spender\n_value uint256 Spender allowance\nReturns\nbool True if successful. Reverts or false on failure\nSmart Contract  \napprove(\n    _spender : address ,\n    _value : uint256\n): bool\nCopy\nWeb3 \nexchangeContract .methods.approve(_spender , _value).send()\nCopy\nallowance\nParameter Type Description", "metadata": {"page_number": 180, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3334ac399dc8", "text": "): bool\nCopy\nWeb3 \nexchangeContract .methods.approve(_spender , _value).send()\nCopy\nallowance\nParameter Type Description\n_owner address Address of liquidity token owner\n_spender uint256 Address of approved spender\nReturns\nuint256 Spender allowance\nSmart Contract  \nallowance (\n    _owner : address ,\n    _spender : address\n): uint256\nCopy\nWeb3 \nexchangeContract .methods.allowance (_owner, _spender ).call()", "metadata": {"page_number": 180, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9d7881ef6e93", "text": "Copy\nEdit this page\nHelpful?\nPrevious\nFactory\nNext\nInterfaces\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3", "metadata": {"page_number": 181, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e64da52cbe75", "text": "Web3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3", "metadata": {"page_number": 181, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1577d52a2f8e", "text": "Smart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nSmart Contract\nWeb3\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 182, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "45d84a8e739c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02", "metadata": {"page_number": 183, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5ffc9901c780", "text": "Technical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02\nCommon Errors\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nSmart Contracts\nFactoryHelpful?\nOn this page\nFactory", "metadata": {"page_number": 183, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d3c646c8830a", "text": "Code  \nUniswapV2Factory.sol\nAddr ess\nUniswapV2Factory  is deployed at 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f  on the Ethereum mainnet , and the\nRopsten , Rinkeby , G\u00f6rli , and Kovan  testnets. It was built from commit 8160750 .\nEvents\nPairCr eated  \nevent PairCreated (address indexed token0, address indexed token1, address pair, uint);\nCopy\nEmitted each time a pair is created via createPair .\ntoken0  is guaranteed to be strictly less than token1  by sort order .\nThe final uint  log value will be 1 for the first pair created, 2 for the second, etc. (see allPairs /getPair ).\nRead-Only Functions\ngetPair", "metadata": {"page_number": 184, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e7a63f565cf8", "text": "The final uint  log value will be 1 for the first pair created, 2 for the second, etc. (see allPairs /getPair ).\nRead-Only Functions\ngetPair  \nfunction  getPair(address tokenA, address tokenB) external  view returns (address pair);\nCopy\nReturns the address of the pair for tokenA  and tokenB , if it has been created, else address(0)\n(0x0000000000000000000000000000000000000000 ).\ntokenA  and tokenB  are interchangeable.\nPair addresses can also be calculated deterministically via the SDK.\nallPairs  \nfunction  allPairs (uint) external  view returns (address pair);\nCopy\nReturns the address of the nth pair (0-indexed) created through the factory , or address(0)", "metadata": {"page_number": 184, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3969b58997cf", "text": "allPairs  \nfunction  allPairs (uint) external  view returns (address pair);\nCopy\nReturns the address of the nth pair (0-indexed) created through the factory , or address(0)\n(0x0000000000000000000000000000000000000000 ) if not enough pairs have been created yet.\nPass 0 for the address of the first pair created, 1 for the second, etc.\nallPairsLength  \nfunction  allPairsLength () external  view returns (uint);\nCopy\nReturns the total number of pairs created through the factory so far .", "metadata": {"page_number": 184, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7a568bd62afd", "text": "feeTo \nfunction  feeTo() external  view returns (address);\nCopy\nSee Protocol Char ge Calculation .\nfeeToSetter  \nfunction  feeToSetter () external  view returns (address);\nCopy\nThe address allowed to change feeTo.\nState-Changing Functions\ncreatePair  \nfunction  createPair (address tokenA, address tokenB) external  returns (address pair);\nCopy\nCreates a pair for tokenA  and tokenB  if one doesn't exist already .\ntokenA  and tokenB  are interchangeable.\nEmits PairCreated .\nInterface\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol' ;\nCopy\npragma solidity  >=0.5.0;\ninterface  IUniswapV2Factory  {", "metadata": {"page_number": 185, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6c0d0b0a2c1c", "text": "Copy\npragma solidity  >=0.5.0;\ninterface  IUniswapV2Factory  {\n  event PairCreated (address indexed token0, address indexed token1, address pair, uint);\n  function  getPair(address tokenA, address tokenB) external  view returns (address pair);\n  function  allPairs (uint) external  view returns (address pair);\n  function  allPairsLength () external  view returns (uint);\n  function  feeTo() external  view returns (address);\n  function  feeToSetter () external  view returns (address);\n  function  createPair (address tokenA, address tokenB) external  returns (address pair);\n}\nCopy\nABI\nimport IUniswapV2Factory  from '@uniswap/v2-core/build/IUniswapV2Factory.json'\nCopy", "metadata": {"page_number": 185, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "61734965b601", "text": "}\nCopy\nABI\nimport IUniswapV2Factory  from '@uniswap/v2-core/build/IUniswapV2Factory.json'\nCopy\nhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2Factory .json", "metadata": {"page_number": 185, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "878fd03cafe4", "text": "Edit this page\nHelpful?\nPrevious\nGovernance Reference\nNext\nPair\nCode\nPairCreated\ngetPair\nallPairs\nallPairsLength\nfeeTo\nfeeToSetter\ncreatePair\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 186, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "083d7de59f30", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\nFeeAmount\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\nenums\nFeeAmountHelpful?\nOn this page\nFeeAmount\n@uniswap/v3-sdk  / Exports  / FeeAmount", "metadata": {"page_number": 188, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c0ae4f2a4eca", "text": "V3 SDK\nTechnical Reference\nenums\nFeeAmountHelpful?\nOn this page\nFeeAmount\n@uniswap/v3-sdk  / Exports  / FeeAmount\nEnumeration: FeeAmount\nThe default factory enabled fee amounts, denominated in hundredths of bips.\nTable of contents  \nEnumeration Members \nHIGH\nLOW", "metadata": {"page_number": 188, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9668988e1e1a", "text": "LOWEST\nMEDIUM\nEnumeration Members  \nHIGH \n\u2022 HIGH  = 10000\nDefined in  \nconstants.ts:14\nLOW \n\u2022 LOW  = 500\nDefined in  \nconstants.ts:12\nLOWEST \n\u2022 LOWEST  = 100\nDefined in  \nconstants.ts:1 1\nMEDIUM \n\u2022 MEDIUM  = 3000\nDefined in  \nconstants.ts:13\nEdit this page\nHelpful?\nPrevious\nTrade\nNext\nAllowedPermitAr guments\nTable of contents\nEnumeration Members\nEnumeration Members\nHIGH\nLOW\nLOWEST\nMEDIUM", "metadata": {"page_number": 189, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1f9f4560bf96", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 190, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a380ef3fe488", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 191, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b01b1264fcf", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nFeeOptionsHelpful?", "metadata": {"page_number": 191, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1e735a6e4b4c", "text": "On this page\nFeeOptions\n@uniswap/v3-sdk  / Exports  / FeeOptions\nInterface: FeeOptions\nTable of contents  \nProperties \nfee\nrecipient\nProperties  \nfee \n\u2022 fee: Percent\nThe percent of the output that will be taken as a fee.\nDefined in  \npayments.ts:1 1\nrecipient \n\u2022 recipient : string\nThe recipient of the fee.\nDefined in  \npayments.ts:16\nEdit this page\nHelpful?\nPrevious\nCommonAddLiquidityOptions\nNext\nIncentiveKey\nTable of contents\nProperties\nProperties\nfee\nrecipient\nDevelopers", "metadata": {"page_number": 192, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8978f8e42954", "text": "Feedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 193, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3419f13e287a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nConcentrated Liquidity\nFees\nOracle\nRange Orders\nSwaps\nToken Integration Issues\nGovernance\nResearch\nResources\nGlossary\n\u0000\nProtocol Concepts\nFeesHelpful?\nOn this page\nFees\nSwap Fees  \nSwap fees are distributed pro-rata to all in-range1 liquidity at the time of the swap. If the spot price moves out of a position\u2019 s\nrange, the given liquidity is no longer active and does not generate any fees. If the spot price reverses and reenters the", "metadata": {"page_number": 194, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e7e2a9941637", "text": "range, the given liquidity is no longer active and does not generate any fees. If the spot price reverses and reenters the\nposition\u2019 s range, the position\u2019 s liquidity becomes active again and will generate fees.\nSwap fees are not automatically reinvested as they were in previous versions of Uniswap. Instead, they are collected\nseparately from the pool and must be manually redeemed when the owner wishes to collect their fees.\nPool Fees Tiers \nUniswap v3 introduces multiple pools for each token pair , each with a dif ferent swapping fee. Liquidity providers may\ninitially create pools at three fee levels: 0.05%, 0.30%, and 1%. More fee levels may be added by UNI governance, e.g. the\n0.01% fee level added by this governance proposal in November 2021, as executed here.\nBreaking pairs into separate pools was previously untenable due to the issue of liquidity fragmentation. Any incentive", "metadata": {"page_number": 194, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d8ff8a14543b", "text": "0.01% fee level added by this governance proposal in November 2021, as executed here.\nBreaking pairs into separate pools was previously untenable due to the issue of liquidity fragmentation. Any incentive\nalignments achieved by more fee optionality invariably resulted in a net loss to traders, due to lower pairwise liquidity and\nthe resulting increase in price impact upon swapping.", "metadata": {"page_number": 194, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7e4a57921e23", "text": "The introduction of concentrated liquidity decouples total liquidity from price impact. With price impact concerns out of the\nway, breaking pairs into multiple pools becomes a feasible approach to improving the functionality of a pool for assets\npreviously underserved by the 0.30% swap fee.\nFinding The Right Pool Fee  \nWe anticipate that certain types of assets will gravitate towards specific fee tiers, based on where the incentives for both\nswappers and liquidity providers come nearest to alignment.\nWe expect low volatility assets (stable coins) will likely congregate in the lowest fee tier , as the price risk for liquidity\nproviders holding these assets is very low , and those swapping will be motivated to pursue an execution price closest to 1:1\nas they can get.\nSimilarly , we anticipate more exotic assets, or those traded rarely , will naturally gravitate towards a higher fee - as liquidity\nproviders will be motivated to of fset the cost risk of holding these assets for the duration of their position.\nProtocol Fees", "metadata": {"page_number": 195, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "791e624a5eb1", "text": "Similarly , we anticipate more exotic assets, or those traded rarely , will naturally gravitate towards a higher fee - as liquidity\nproviders will be motivated to of fset the cost risk of holding these assets for the duration of their position.\nProtocol Fees  \nUniswap v3 has a protocol fee that can be turned on by UNI governance. Compared to v2, UNI governance has more\nflexibility in choosing the fraction of swap fees that go to the protocol. For details regarding the protocol fee, see the\nwhitepaper .\n1. In-range liquidity refers to the liquidity contained in any positions which span both sides of the spot price. \u21a9\nEdit this page\nHelpful?\nPrevious\nConcentrated Liquidity\nNext\nOracle\nSwap Fees\nPool Fees Tiers\nFinding The Right Pool Fee\nProtocol Fees\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper", "metadata": {"page_number": 195, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2f7f88c7bb26", "text": "Oracle\nSwap Fees\nPool Fees Tiers\nFinding The Right Pool Fee\nProtocol Fees\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists", "metadata": {"page_number": 195, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c5a9405f2922", "text": "Brand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 196, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e862cc5553c8", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 197, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a855d5c85732", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nTechnical Reference\nFetcherHelpful?\nOn this page\nFetcher\nThe data fetching logic is split from the rest of the code for better tree-shaking, i.e. so that it does not get packaged into your\ncode unless it is used. The SDK is otherwise unconcerned with how you get data from the blockchain.", "metadata": {"page_number": 197, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b07e0ea959e2", "text": "This class contains static methods for constructing instances of pairs and tokens from on-chain data. It cannot be\nconstructed.\nStatic Methods\nfetchT okenData  \nasync fetchTokenData (\n  chainId : ChainId,\n  address : string,\n  provider = getDefaultProvider (getNetwork (chainId)),\n  symbol?: string,\n  name?: string\n): Promise<Token>\nCopy\nInitializes a class instance from a chainId and token address, if the decimals of the token are unknown and cannot be fetched\nexternally . Decimals are fetched via an ethers.js  v5 provider . If not passed in, a default provider is used.\nfetchPairData  \nasync fetchPairData (\n  tokenA : Token,\n  tokenB : Token,", "metadata": {"page_number": 198, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "679866a34a91", "text": "fetchPairData  \nasync fetchPairData (\n  tokenA : Token,\n  tokenB : Token,\n  provider = getDefaultProvider (getNetwork (tokenA.chainId))\n): Promise<Pair>\nCopy\nInitializes a class instance from two Tokens, if the pair's balances of these tokens are unknown and cannot be fetched\nexternally . Pair reserves are fetched via an ethers.js  v5 provider . If not passed in, a default provider is used.\nEdit this page\nHelpful?\nPrevious\nFractions\nNext\nOther Exports\nfetchT okenData\nfetchPairData\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 198, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5861fd3dabd7", "text": "fetchPairData\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 198, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3a07ec4b3cb2", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 199, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "50ddf619b4ed", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 200, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f874d16fbffc", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nGuides\nFetching DataHelpful?\nOn this page\nFetching Data\nLooking for a quickstart ?\nWhile the SDK is fully self-contained, there are two cases where it needs on-chain data  to function. This guide will detail both of these\ncases, and of fer some strategies that you can use to fetch this data.\nCase 1: Tokens", "metadata": {"page_number": 200, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6a926d1fe09f", "text": "Unsurprisingly , the SDK needs some notion of an ERC-20 token to be able to function. This immediately raises the question of wher e\ndata about tokens comes fr om.\nAs an example, let's try to represent DAI in a format the SDK can work with. To do so, we need at least 3 pieces of data: a chainId , a\ntoken addr ess, and how many decimals  the token has. We also may be interested in the symbol  and/or name  of the token.\nIdentifying Data  \nThe first two pieces of data \u2014 chainId  and token addr ess \u2014 must be provided by us. Thinking about it, this makes sense, as there's\nreally no other way to unambiguously identify a token.\nSo, in the case of DAI, we know that the chainId  is 1 (we're on mainnet), and the token addr ess is", "metadata": {"page_number": 201, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a30dd80cdc23", "text": "really no other way to unambiguously identify a token.\nSo, in the case of DAI, we know that the chainId  is 1 (we're on mainnet), and the token addr ess is\n0x6B175474E89094C44Da98b954EedeAC495271d0F . Note that it's very important to externally verify token addresses. Don't use\naddresses from sources you don't trust!\nRequir ed Data  \nThe next piece of data we need is decimals .\nProvided by the User \nOne option here is to simply pass in the correct value, which we may know is 18. At this point, we're ready to represent DAI as a Token :\nimport { ChainId, Token } from '@uniswap/sdk'\nconst chainId = ChainId.MAINNET", "metadata": {"page_number": 201, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4e348c25f329", "text": "import { ChainId, Token } from '@uniswap/sdk'\nconst chainId = ChainId.MAINNET\nconst tokenAddress = '0x6B175474E89094C44Da98b954EedeAC495271d0F'  // must be checksummed\nconst decimals = 18\nconst DAI = new Token(chainId, tokenAddress , decimals )\nCopy\nIf we don't know or don't want to hardcode the value, we could look it up ourselves via any method of retrieving on-chain data in a\nfunction that looks something like:\nimport { ChainId } from '@uniswap/sdk'\nasync function  getDecimals (chainId: ChainId, tokenAddress : string): Promise<number> {\n  // implementation details\n}\nCopy\nFetched by the SDK", "metadata": {"page_number": 201, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12c18b601ca3", "text": "async function  getDecimals (chainId: ChainId, tokenAddress : string): Promise<number> {\n  // implementation details\n}\nCopy\nFetched by the SDK \nIf we don't want to provide or look up the value ourselves, we can ask the SDK to look it up for us with Fetcher .fetchT okenData\nimport { ChainId, Token, Fetcher } from '@uniswap/sdk'\nconst chainId = ChainId.MAINNET\nconst tokenAddress = '0x6B175474E89094C44Da98b954EedeAC495271d0F'  // must be checksummed\n// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option\nconst DAI: Token = await Fetcher.fetchTokenData (chainId, tokenAddress )", "metadata": {"page_number": 201, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "06f25ca5b841", "text": "// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option\nconst DAI: Token = await Fetcher.fetchTokenData (chainId, tokenAddress )\nCopy\nBy default, this method will use the default provider defined by ethers.js . If you're already using ethers.js in your application, you may\npass in your provider as a 3rd ar gument. If you're using another library , you'll have to fetch the data separately .\nOptional Data", "metadata": {"page_number": 201, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "45610da4a477", "text": "Finally , we can talk about symbol  and name . Because these fields aren't used anywhere in the SDK itself, they're optional, and can be\nprovided if you want to use them in your application. However , the SDK will not fetch them for you, so you'll have to provide them:\nimport { ChainId, Token } from '@uniswap/sdk'\nconst DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F' , 18, 'DAI', 'Dai Stablecoin' )\nCopy\nor:\nimport { ChainId, Token, Fetcher } from '@uniswap/sdk'\n// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option\nconst DAI = await Fetcher.fetchTokenData (", "metadata": {"page_number": 202, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cdb48ec743ab", "text": "// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option\nconst DAI = await Fetcher.fetchTokenData (\n  ChainId.MAINNET,\n  '0x6B175474E89094C44Da98b954EedeAC495271d0F' ,\n  undefined ,\n  'DAI',\n  'Dai Stablecoin'\n)\nCopy\nCase 2: Pairs\nNow that we've explored how to define a token, let's talk about pairs. To read more about what Uniswap pairs are, see Pair\nAs an example, let's try to represent the DAI-WETH pair .\nIdentifying Data  \nEach pair consists of two tokens (see previous section). Note that WETH used by the router is exported by the SDK .\nRequir ed Data", "metadata": {"page_number": 202, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e694115aa66b", "text": "Identifying Data  \nEach pair consists of two tokens (see previous section). Note that WETH used by the router is exported by the SDK .\nRequir ed Data  \nThe data we need is the reserves  of the pair . To read more about reserves, see getReserves .\nProvided by the User \nOne option here is to simply pass in values which we've fetched ourselves to create a Pair:\nimport { ChainId, Token, WETH, Pair, TokenAmount  } from '@uniswap/sdk'\nconst DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F' , 18)\nasync function  getPair(): Promise<Pair> {\n  const pairAddress = Pair.getAddress (DAI, WETH[DAI.chainId])\n  const reserves = [", "metadata": {"page_number": 202, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "68c5ed0cfac8", "text": "async function  getPair(): Promise<Pair> {\n  const pairAddress = Pair.getAddress (DAI, WETH[DAI.chainId])\n  const reserves = [\n    /* use pairAddress to fetch reserves here */\n  ]\n  const [reserve0 , reserve1 ] = reserves\n  const tokens = [DAI, WETH[DAI.chainId]]\n  const [token0, token1] = tokens[0].sortsBefore (tokens[1]) ? tokens : [tokens[1], tokens[0]]\n  const pair = new Pair(new TokenAmount (token0, reserve0 ), new TokenAmount (token1, reserve1 ))\n  return pair\n}\nCopy\nNote that these values can change as frequently as every block, and should be kept up-to-date.\nFetched by the SDK", "metadata": {"page_number": 202, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2478fb3e3a10", "text": "If we don't want to look up the value ourselves, we can ask the SDK to look them up for us with Fetcher .fetchT okenData :\nimport { ChainId, Token, WETH, Fetcher } from '@uniswap/sdk'\nconst DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F' , 18)\n// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option\nconst pair = await Fetcher.fetchPairData (DAI, WETH[DAI.chainId])\nCopy\nBy default, this method will use the default provider defined by ethers.js . If you're already using ethers.js in your application, you may", "metadata": {"page_number": 203, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "553995ad6b83", "text": "Copy\nBy default, this method will use the default provider defined by ethers.js . If you're already using ethers.js in your application, you may\npass in your provider as a 3rd ar gument. If you're using another library , you'll have to fetch the data separately .\nNote that these values can change as frequently as every block, and should be kept up-to-date.\nEdit this page\nHelpful?\nPrevious\nSDK Quick start\nNext\nPricing\nIdentifying Data\nRequired Data\nProvided by the User\nFetched by the SDK\nOptional Data\nIdentifying Data\nRequired Data\nProvided by the User\nFetched by the SDK\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 203, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b7a64a9207d7", "text": "Fetched by the SDK\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 203, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bb3034c4499f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGetting Started\nCalling Flash\nThe Flash Callback\nThe Final Contract\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement Flash Swaps\nThe Final ContractHelpful?\nOn this page\nThe Final Contract\nThe Full Contract", "metadata": {"page_number": 204, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a80012026206", "text": "V1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement Flash Swaps\nThe Final ContractHelpful?\nOn this page\nThe Final Contract\nThe Full Contract  \n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol' ;\nimport '@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol' ;\nimport '@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol' ;\nimport '@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol' ;", "metadata": {"page_number": 204, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "23fa1168f001", "text": "import '@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol' ;\nimport '@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;\n/// @title Flash contract implementation\n/// @notice An example contract using the Uniswap V3 flash function\ncontract  PairFlash  is IUniswapV3FlashCallback , PeripheryImmutableState , PeripheryPayments {", "metadata": {"page_number": 204, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e9476bf3e17", "text": "/// @notice An example contract using the Uniswap V3 flash function\ncontract  PairFlash  is IUniswapV3FlashCallback , PeripheryImmutableState , PeripheryPayments {\n    using LowGasSafeMath  for uint256;\n    using LowGasSafeMath  for int256;\n    ISwapRouter public immutable swapRouter ;\n    constructor (\n        ISwapRouter _swapRouter ,\n        address _factory ,\n        address _WETH9", "metadata": {"page_number": 204, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "15f74e402011", "text": ") PeripheryImmutableState (_factory , _WETH9) {\n        swapRouter = _swapRouter ;\n    }\n    /// @param fee0 The fee from calling flash for token0\n    /// @param fee1 The fee from calling flash for token1\n    /// @param data The data needed in the callback passed as FlashCallbackData from `initFlash`\n    /// @notice implements the callback called from flash\n    /// @dev fails if the flash is not profitable, meaning the amountOut from the flash is less than the amount borrowed\n    function  uniswapV3FlashCallback (\n        uint256 fee0,\n        uint256 fee1,\n        bytes calldata  data\n    ) external  override {\n        FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData ));", "metadata": {"page_number": 205, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "01ec74435219", "text": "uint256 fee1,\n        bytes calldata  data\n    ) external  override {\n        FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData ));\n        CallbackValidation .verifyCallback (factory, decoded .poolKey);\n        address token0 = decoded .poolKey.token0;\n        address token1 = decoded .poolKey.token1;\n        TransferHelper .safeApprove (token0, address(swapRouter ), decoded .amount0);\n        TransferHelper .safeApprove (token1, address(swapRouter ), decoded .amount1);\n        // profitable check\n        // exactInputSingle will fail if this amount not met\n        uint256 amount1Min = LowGasSafeMath .add(decoded.amount1, fee1);", "metadata": {"page_number": 205, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0bdf65bec98b", "text": "// profitable check\n        // exactInputSingle will fail if this amount not met\n        uint256 amount1Min = LowGasSafeMath .add(decoded.amount1, fee1);\n        uint256 amount0Min = LowGasSafeMath .add(decoded.amount0, fee0);\n        // call exactInputSingle for swapping token1 for token0 in pool w/fee2\n        uint256 amountOut0 =\n            swapRouter .exactInputSingle (\n                ISwapRouter .ExactInputSingleParams ({\n                    tokenIn : token1,\n                    tokenOut : token0,\n                    fee : decoded .poolFee2 ,\n                    recipient : address(this),\n                    deadline : block.timestamp ,\n                    amountIn : decoded .amount1,\n                    amountOutMinimum : amount0Min ,\n                    sqrtPriceLimitX96 : 0", "metadata": {"page_number": 205, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae8b15b890e4", "text": "recipient : address(this),\n                    deadline : block.timestamp ,\n                    amountIn : decoded .amount1,\n                    amountOutMinimum : amount0Min ,\n                    sqrtPriceLimitX96 : 0\n                })\n            );\n        // call exactInputSingle for swapping token0 for token 1 in pool w/fee3\n        uint256 amountOut1 =\n            swapRouter .exactInputSingle (\n                ISwapRouter .ExactInputSingleParams ({\n                    tokenIn : token0,\n                    tokenOut : token1,\n                    fee : decoded .poolFee3 ,\n                    recipient : address(this),\n                    deadline : block.timestamp ,\n                    amountIn : decoded .amount0,\n                    amountOutMinimum : amount1Min ,\n                    sqrtPriceLimitX96 : 0\n                })\n            );", "metadata": {"page_number": 205, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c484222f3769", "text": "deadline : block.timestamp ,\n                    amountIn : decoded .amount0,\n                    amountOutMinimum : amount1Min ,\n                    sqrtPriceLimitX96 : 0\n                })\n            );\n        // end up with amountOut0 of token0 from first swap and amountOut1 of token1 from second swap\n        uint256 amount0Owed = LowGasSafeMath .add(decoded.amount0, fee0);\n        uint256 amount1Owed = LowGasSafeMath .add(decoded.amount1, fee1);\n        TransferHelper .safeApprove (token0, address(this), amount0Owed );\n        TransferHelper .safeApprove (token1, address(this), amount1Owed );\n        if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed );", "metadata": {"page_number": 205, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "02f0fd622b3a", "text": "TransferHelper .safeApprove (token1, address(this), amount1Owed );\n        if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed );\n        if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed );\n        // if profitable pay profits to payer\n        if (amountOut0 > amount0Owed ) {\n            uint256 profit0 = LowGasSafeMath .sub(amountOut0 , amount0Owed );\n            TransferHelper .safeApprove (token0, address(this), profit0 );\n            pay(token0, address(this), decoded .payer, profit0 );\n        }\n        if (amountOut1 > amount1Owed ) {\n            uint256 profit1 = LowGasSafeMath .sub(amountOut1 , amount1Owed );", "metadata": {"page_number": 205, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "62da5f0b5274", "text": "}\n        if (amountOut1 > amount1Owed ) {\n            uint256 profit1 = LowGasSafeMath .sub(amountOut1 , amount1Owed );\n            TransferHelper .safeApprove (token0, address(this), profit1 );\n            pay(token1, address(this), decoded .payer, profit1 );\n        }\n    }", "metadata": {"page_number": 205, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1135278e1eda", "text": "//fee1 is the fee of the pool from the initial borrow\n    //fee2 is the fee of the first pool to arb from\n    //fee3 is the fee of the second pool to arb from\n    struct FlashParams  {\n        address token0;\n        address token1;\n        uint24 fee1;\n        uint256 amount0 ;\n        uint256 amount1 ;\n        uint24 fee2;\n        uint24 fee3;\n    }\n    // fee2 and fee3 are the two other fees associated with the two other pools of token0 and token1\n    struct FlashCallbackData  {\n        uint256 amount0 ;\n        uint256 amount1 ;\n        address payer;\n        PoolAddress .PoolKey poolKey ;\n        uint24 poolFee2 ;\n        uint24 poolFee3 ;\n    }", "metadata": {"page_number": 206, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "37701becc042", "text": "uint256 amount1 ;\n        address payer;\n        PoolAddress .PoolKey poolKey ;\n        uint24 poolFee2 ;\n        uint24 poolFee3 ;\n    }\n    /// @param params The parameters necessary for flash and the callback, passed in as FlashParams\n    /// @notice Calls the pools flash function with data needed in `uniswapV3FlashCallback`\n    function  initFlash (FlashParams memory params) external  {\n        PoolAddress .PoolKey memory poolKey =\n            PoolAddress .PoolKey({token0: params.token0, token1: params.token1, fee: params.fee1});\n        IUniswapV3Pool pool = IUniswapV3Pool (PoolAddress .computeAddress (factory, poolKey ));\n        // recipient of borrowed amounts\n        // amount of token0 requested to borrow", "metadata": {"page_number": 206, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "838eae07e3ee", "text": "IUniswapV3Pool pool = IUniswapV3Pool (PoolAddress .computeAddress (factory, poolKey ));\n        // recipient of borrowed amounts\n        // amount of token0 requested to borrow\n        // amount of token1 requested to borrow\n        // need amount 0 and amount1 in callback to pay back pool\n        // recipient of flash should be THIS contract\n        pool .flash(\n            address(this),\n            params .amount0,\n            params .amount1,\n            abi .encode(\n                FlashCallbackData ({\n                    amount0 : params.amount0,\n                    amount1 : params.amount1,\n                    payer : msg.sender,\n                    poolKey : poolKey ,\n                    poolFee2 : params.fee2,\n                    poolFee3 : params.fee3\n                })\n            )", "metadata": {"page_number": 206, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "582cef1076da", "text": "payer : msg.sender,\n                    poolKey : poolKey ,\n                    poolFee2 : params.fee2,\n                    poolFee3 : params.fee3\n                })\n            )\n        );\n    }\n}\nCopy\nEdit this page\nHelpful?\nPrevious\nThe Flash Callback\nNext\nLicense Modifications\nThe Full Contract\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 206, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ef077ba7cb44", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 207, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e8cbfefbac9", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nBitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast", "metadata": {"page_number": 208, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fca0bf0488cb", "text": "BitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside\nSqrtPriceMath\nSwapMath\nTick\nTickBitmap\nTickMath\nTransferHelper\nUnsafeMath\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000", "metadata": {"page_number": 208, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a9bb107e3dd0", "text": "V3 Protocol\nTechnical Reference\nCore\nLibraries\nFixedPoint96Helpful?\nFixedPoint96\nA library for handling binary fixed point numbers, see https://en.wikipedia.or g/wiki/Q_(number_format)\nUsed in SqrtPriceMath.sol\nEdit this page\nHelpful?\nPrevious\nFixedPoint128\nNext\nFullMath\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 209, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db0795d67632", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 209, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f34d8333a2ce", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nBitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast", "metadata": {"page_number": 210, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6ee275de54bc", "text": "BitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside\nSqrtPriceMath\nSwapMath\nTick\nTickBitmap\nTickMath\nTransferHelper\nUnsafeMath\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000", "metadata": {"page_number": 210, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "89ae7f597881", "text": "V3 Protocol\nTechnical Reference\nCore\nLibraries\nFixedPoint128Helpful?\nFixedPoint128\nA library for handling binary fixed point numbers, see https://en.wikipedia.or g/wiki/Q_(number_format)\nEdit this page\nHelpful?\nPrevious\nBitMath\nNext\nFixedPoint96\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 211, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3729b6646644", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 211, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4dfeb568f8ea", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGetting Started\nCalling Flash\nThe Flash Callback\nThe Final Contract\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement Flash Swaps\nThe Flash CallbackHelpful?\nOn this page\nThe Flash Callback\nSetting Up The Callback", "metadata": {"page_number": 212, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94bf30fcf6b1", "text": "\u0000\nV3 Protocol\nGuides\nImplement Flash Swaps\nThe Flash CallbackHelpful?\nOn this page\nThe Flash Callback\nSetting Up The Callback  \nHere we will override the flash callback with our custom logic to execute the desired swaps and pay the profits to the\noriginal msg.sender .\nDeclare the uniswapV3FlashCallback  function and override it.\n    function  uniswapV3FlashCallback (\n        uint256 fee0,\n        uint256 fee1,\n        bytes calldata  data\n    ) external  override {\nCopy", "metadata": {"page_number": 212, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cd52cb8ea3ea", "text": "Declare a variable decoded  in memory and assign it to the decoded data  previously encoded into the calldata.\n        FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData ));\nCopy\nEach callback must be validated to verify that the call originated from a genuine V3 pool. Otherwise, the pool contract\nwould be vulnerable to attack via an EOA  manipulating the callback function.\n        CallbackValidation .verifyCallback (factory, decoded .poolKey);\nCopy\nAssign local variables of type address  as token0  and token1  to approve the router to interact with the tokens from the\nflash.\n        address token0 = decoded .poolKey.token0;\n        address token1 = decoded .poolKey.token1;\n        TransferHelper .safeApprove (token0, address(swapRouter ), decoded .amount0);", "metadata": {"page_number": 213, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "37002019c832", "text": "address token0 = decoded .poolKey.token0;\n        address token1 = decoded .poolKey.token1;\n        TransferHelper .safeApprove (token0, address(swapRouter ), decoded .amount0);\n        TransferHelper .safeApprove (token1, address(swapRouter ), decoded .amount1);\nCopy\nCode in a minimum amount out for both of the upcoming swaps, such that the following swaps will revert if we do not\nreceive a profitable trade.\n        uint256 amount1Min = LowGasSafeMath .add(decoded.amount1, fee1);\n        uint256 amount0Min = LowGasSafeMath .add(decoded.amount0, fee0);\nCopy\nInitiating A Swap  \nCall the first of two swaps, calling exactInputSingle  on the router  interface  contract. In this call, we are using the", "metadata": {"page_number": 213, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "299b8de605a1", "text": "Copy\nInitiating A Swap  \nCall the first of two swaps, calling exactInputSingle  on the router  interface  contract. In this call, we are using the\npreviously declared amount0In  as the minimum amount out, and assigning the returned balance of the swap to amountOut0 .\nMost of These function ar guments have already been discussed, except for two new introductions:\nsqrtPriceLimitX96 : This value limits the price that the swap can change the pool to. Remember that price is always\nexpressed in the pool contract as token1  in terms of token0 . This is useful for circumstances where the user wants to swap\nup until  a specific price. For this example, we will set it to 0, which makes to make the ar gument inactive.\ndeadline : this is the timestamp after which the transaction will revert, to protect the transaction from dramatic changes in\nprice environment that can happen if the transaction is pending for too long. For this example, we will set it far in the future\nfor the sake of simplicity .", "metadata": {"page_number": 213, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "30ed422e43f3", "text": "price environment that can happen if the transaction is pending for too long. For this example, we will set it far in the future\nfor the sake of simplicity .\nThe first swap takes the amount1  that we withdrew from the original pool, and passes that amount as the input amount for a\nsingle swap that trades a fixed input for the maximum amount of possible output. It calls this function on the pool\ndetermined by our previous token pair , but with the next fee tier in our list of three.\nuint256 amountOut0 =\n            swapRouter .exactInputSingle (\n                ISwapRouter .ExactInputSingleParams ({\n                    tokenIn : token1,\n                    tokenOut : token0,\n                    fee : decoded .poolFee2 ,\n                    recipient : address(this),\n                    deadline : block.timestamp + 200,\n                    amountIn : decoded .amount1,\n                    amountOutMinimum : amount0Min ,", "metadata": {"page_number": 213, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bd46589df953", "text": "fee : decoded .poolFee2 ,\n                    recipient : address(this),\n                    deadline : block.timestamp + 200,\n                    amountIn : decoded .amount1,\n                    amountOutMinimum : amount0Min ,\n                    sqrtPriceLimitX96 : 0", "metadata": {"page_number": 213, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6d2da72b0f7f", "text": "})\n            );\nCopy\nPopulate the second of two swaps, this time with the last fee tier and with the amount0  that we withdrew from the original\npool.\nuint256 amountOut1 =\n            swapRouter .exactInputSingle (\n                ISwapRouter .ExactInputSingleParams ({\n                    tokenIn : token0,\n                    tokenOut : token1,\n                    fee : decoded .poolFee3 ,\n                    recipient : address(this),\n                    deadline : block.timestamp + 200,\n                    amountIn : decoded .amount0,\n                    amountOutMinimum : amount1Min ,\n                    sqrtPriceLimitX96 : 0\n                })\n            );\nCopy\nPaying back the pool  \nTo pay the original pool back for the flash transaction, first calculate the balance due to it and approve the router to transfer", "metadata": {"page_number": 214, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0f3c2128cba", "text": "})\n            );\nCopy\nPaying back the pool  \nTo pay the original pool back for the flash transaction, first calculate the balance due to it and approve the router to transfer\nthe tokens in our contract back to the pool.\nuint256 amount0Owed = LowGasSafeMath .add(decoded.amount0, fee0);\nuint256 amount1Owed = LowGasSafeMath .add(decoded.amount1, fee1);\nTransferHelper .safeApprove (token0, address(this), amount0Owed );\nTransferHelper .safeApprove (token1, address(this), amount1Owed );\nCopy\nIf there is any balance due to the token, use simple logic to call pay. Remember that the callback function is being called by\nthe pool itself, which is why we can call pay despite the function being marked internal .", "metadata": {"page_number": 214, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "25eedd51aad3", "text": "Copy\nIf there is any balance due to the token, use simple logic to call pay. Remember that the callback function is being called by\nthe pool itself, which is why we can call pay despite the function being marked internal .\nif (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed );\nif (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed );\nCopy\nSend the profits to the payer : the original msg.sender  of the initFlash  function, which executed the flash transaction and\nin turn triggered the callback.\n    if (amountOut0 > amount0Owed ) {\n            uint256 profit0 = LowGasSafeMath .sub(amountOut0 , amount0Owed );\n            TransferHelper .safeApprove (token0, address(this), profit0 );", "metadata": {"page_number": 214, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "064af9b4120a", "text": "uint256 profit0 = LowGasSafeMath .sub(amountOut0 , amount0Owed );\n            TransferHelper .safeApprove (token0, address(this), profit0 );\n            pay(token0, address(this), decoded .payer, profit0 );\n        }\n    if (amountOut1 > amount1Owed ) {\n            uint256 profit1 = LowGasSafeMath .sub(amountOut1 , amount1Owed );\n            TransferHelper .safeApprove (token0, address(this), profit1 );\n            pay(token1, address(this), decoded .payer, profit1 );\n        }\nCopy\nThe full function", "metadata": {"page_number": 214, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "be6e19df6096", "text": "function  uniswapV3FlashCallback (\n        uint256 fee0,\n        uint256 fee1,\n        bytes calldata  data\n    ) external  override {\n        FlashCallbackData memory decoded = abi.decode(data, (FlashCallbackData ));\n        CallbackValidation .verifyCallback (factory, decoded .poolKey);\n        address token0 = decoded .poolKey.token0;\n        address token1 = decoded .poolKey.token1;\n        TransferHelper .safeApprove (token0, address(swapRouter ), decoded .amount0);\n        TransferHelper .safeApprove (token1, address(swapRouter ), decoded .amount1);\n        // profitable check\n        // exactInputSingle will fail if this amount not met", "metadata": {"page_number": 215, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "495da7659119", "text": "TransferHelper .safeApprove (token1, address(swapRouter ), decoded .amount1);\n        // profitable check\n        // exactInputSingle will fail if this amount not met\n        uint256 amount1Min = LowGasSafeMath .add(decoded.amount1, fee1);\n        uint256 amount0Min = LowGasSafeMath .add(decoded.amount0, fee0);\n        // call exactInputSingle for swapping token1 for token0 in pool w/fee2\n        uint256 amountOut0 =\n            swapRouter .exactInputSingle (\n                ISwapRouter .ExactInputSingleParams ({\n                    tokenIn : token1,\n                    tokenOut : token0,\n                    fee : decoded .poolFee2 ,\n                    recipient : address(this),\n                    deadline : block.timestamp + 200,", "metadata": {"page_number": 215, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6f4ba3a08dd7", "text": "tokenIn : token1,\n                    tokenOut : token0,\n                    fee : decoded .poolFee2 ,\n                    recipient : address(this),\n                    deadline : block.timestamp + 200,\n                    amountIn : decoded .amount1,\n                    amountOutMinimum : amount0Min ,\n                    sqrtPriceLimitX96 : 0\n                })\n            );\n        // call exactInputSingle for swapping token0 for token 1 in pool w/fee3\n        uint256 amountOut1 =\n            swapRouter .exactInputSingle (\n                ISwapRouter .ExactInputSingleParams ({\n                    tokenIn : token0,\n                    tokenOut : token1,\n                    fee : decoded .poolFee3 ,\n                    recipient : address(this),\n                    deadline : block.timestamp + 200,\n                    amountIn : decoded .amount0,", "metadata": {"page_number": 215, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a281c3d45d12", "text": "tokenOut : token1,\n                    fee : decoded .poolFee3 ,\n                    recipient : address(this),\n                    deadline : block.timestamp + 200,\n                    amountIn : decoded .amount0,\n                    amountOutMinimum : amount1Min ,\n                    sqrtPriceLimitX96 : 0\n                })\n            );\n        // end up with amountOut0 of token0 from first swap and amountOut1 of token1 from second swap\n        uint256 amount0Owed = LowGasSafeMath .add(decoded.amount0, fee0);\n        uint256 amount1Owed = LowGasSafeMath .add(decoded.amount1, fee1);\n        TransferHelper .safeApprove (token0, address(this), amount0Owed );\n        TransferHelper .safeApprove (token1, address(this), amount1Owed );", "metadata": {"page_number": 215, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c6600e8fb285", "text": "TransferHelper .safeApprove (token0, address(this), amount0Owed );\n        TransferHelper .safeApprove (token1, address(this), amount1Owed );\n        if (amount0Owed > 0) pay(token0, address(this), msg.sender, amount0Owed );\n        if (amount1Owed > 0) pay(token1, address(this), msg.sender, amount1Owed );\n        // if profitable pay profits to payer\n        if (amountOut0 > amount0Owed ) {\n            uint256 profit0 = LowGasSafeMath .sub(amountOut0 , amount0Owed );\n            TransferHelper .safeApprove (token0, address(this), profit0 );\n            pay(token0, address(this), decoded .payer, profit0 );\n        }\n        if (amountOut1 > amount1Owed ) {", "metadata": {"page_number": 215, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1889c173462d", "text": "pay(token0, address(this), decoded .payer, profit0 );\n        }\n        if (amountOut1 > amount1Owed ) {\n            uint256 profit1 = LowGasSafeMath .sub(amountOut1 , amount1Owed );\n            TransferHelper .safeApprove (token0, address(this), profit1 );\n            pay(token1, address(this), decoded .payer, profit1 );", "metadata": {"page_number": 215, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "96e11ba0c3fd", "text": "}\n    }\nCopy\nEdit this page\nHelpful?\nPrevious\nCalling Flash\nNext\nThe Final Contract\nSetting Up The Callback\nInitiating A Swap\nPaying back the pool\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 216, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1699e665c6b5", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nSwaps\nPools\nFlash Swaps\nOracles\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol", "metadata": {"page_number": 217, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d2f9cec3d2a0", "text": "Advanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nCore Concepts\nFlash SwapsHelpful?\nOn this page\nFlash Swaps\nUniswap flash swaps allow you to withdraw up to the full reserves of any ERC20 token on Uniswap and execute arbitrary\nlogic at no upfront cost, provided that by the end of the transaction you either:", "metadata": {"page_number": 217, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ea8c025eb06f", "text": "pay for the withdrawn ERC20 tokens with the corresponding pair tokens\nreturn the withdrawn ERC20 tokens along with a small fee\nFlash swaps are incredibly useful because they obviate upfront capital requirements and unnecessary order -of-operations\nconstraints for multi-step transactions involving Uniswap.\nExamples\nCapital Fr ee Arbitrage  \nOne particularly interesting use case for flash swaps is capital-free arbitrage. It's well-known that an integral part of\nUniswap's design is to create incentives for arbitrageurs to trade the Uniswap price to a \"fair\" market price. While game-\ntheoretically sound, this strategy is accessible only to those with suf ficient capital to take advantage of arbitrage\nopportunities. Flash swaps remove this barrier entirely , effectively democratizing arbitrage.\nImagine a scenario where the cost of buying 1 ETH on Uniswap is 200 DAI (which is calculated by calling getAmountIn", "metadata": {"page_number": 218, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a14d9a2deb58", "text": "opportunities. Flash swaps remove this barrier entirely , effectively democratizing arbitrage.\nImagine a scenario where the cost of buying 1 ETH on Uniswap is 200 DAI (which is calculated by calling getAmountIn\nwith 1 ETH specified as an exact output), and on Oasis (or any other trading venue), 1 ETH buys 220 DAI. To anyone with\n200 DAI available, this situation represents a risk-free profit of 20 DAI. Unfortunately , you may not have 200 DAI lying\naround. With flash swaps, however , this risk-free profit is available for anyone to take as long as they're able to pay gas fees.\nWithdrawing ETH from Uniswap\nThe first step is to optimistically  withdraw 1 ETH from Uniswap via a flash swap. This will serve as the capital that we use\nto execute our arbitrage. Note that in this scenario, we're assuming that:\n1 ETH is the pre-calculated profit-maximizing trade", "metadata": {"page_number": 218, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94609634c94c", "text": "to execute our arbitrage. Note that in this scenario, we're assuming that:\n1 ETH is the pre-calculated profit-maximizing trade\nThe price has not changed on Uniswap or Oasis since our calculation\nIt may be the case that we'd like to calculate the profit-maximizing trade on-chain at the moment of execution, which is\nrobust to price movements. This can be somewhat complex, depending on the strategy being executed. However , one\ncommon strategy is trading as profitably as possible against a fixed external price . (This price may be e.g., the average\nexecution price of one or more orders on Oasis.) If the Uniswap market price is far enough above or below this external\nprice, the following example contains code that calculates the amount to trade over Uniswap for maximum profit:\nExampleSwapToPrice.sol .\nTrade at External Venue", "metadata": {"page_number": 218, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0eb799c7b6be", "text": "price, the following example contains code that calculates the amount to trade over Uniswap for maximum profit:\nExampleSwapToPrice.sol .\nTrade at External Venue \nOnce we've obtained our temporary capital of 1 ETH from Uniswap, we now can trade this for 220 DAI on Oasis. Once\nwe've received the DAI, we need to pay Uniswap back. We've mentioned that the amount required to cover 1 ETH is 200\nDAI, calculated via getAmountIn . So, after sending 200 of the DAI back to the Uniswap pair , you're left with 20 DAI of\nprofit!\nInstant Leverage  \nFlash swaps can be used to improve the ef ficiency of levering up using lending protocols and Uniswap.\nConsider Maker in its simplest form: a system which accepts ETH as collateral and allows DAI to be minted against it while\nensuring that the value of the ETH never drops below 150% of the value of the DAI.", "metadata": {"page_number": 218, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c7e3eb553111", "text": "Consider Maker in its simplest form: a system which accepts ETH as collateral and allows DAI to be minted against it while\nensuring that the value of the ETH never drops below 150% of the value of the DAI.\nSay we use this system to deposit a principal amount of 3 ETH, and mint the maximum amount of DAI. At a price of 1 ETH\n/ 200 DAI, we receive 400 DAI. In theory , we could lever this position up by selling the DAI for more ETH, depositing this\nETH, minting the maximum amount of DAI (which would be less this time), and repeating until we've reached our desired\nleverage level.\nIt's quite simple to use Uniswap as a liquidity source for the DAI-to-ETH component of this process. However , looping\nthrough protocols in this way isn't particularly elegant, and can be gas-intensive.", "metadata": {"page_number": 218, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "deeec4206021", "text": "Luckily , flash swaps enable us to withdraw the full ETH amount upfront. If we wanted 2x leverage against our 3 ETH\nprincipal, we could simply request 3 ETH in a flash swap and deposit 6 ETH into Maker . This gives us the ability to mint\n800 DAI. If we mint as much as we need to cover our flash swap (say 605), the remainder serves as a safety mar gin against\nprice movements.\nDeveloper  resour ces\nTo see how to integrate a flash swap in your smart contract read Using Flash Swaps .\nEdit this page\nHelpful?\nPrevious\nPools\nNext\nOracles\nCapital Free Arbitrage\nWithdrawing ETH from Uniswap\nTrade at External Venue\nInstant Leverage\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 219, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e1a74ed15e2", "text": "Trade at External Venue\nInstant Leverage\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 219, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "05b9737be69d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\nOverview\nGuides\nGetting Started\nTechnical Reference\nData\nComputation\nFormat\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nFormatHelpful?\nOn this page\nformatSignificant", "metadata": {"page_number": 220, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7ba4a1104669", "text": "Orchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nFormatHelpful?\nOn this page\nformatSignificant\nThis function formats values to a specified number of significant digits.\nFunction Signatur e \nexport function  formatSignificant (bigNumberish : BigNumberish , options ?: FormatSignificantOptions ): string\nCopy\nInput Parameters  \nParameter Type Description\nbigNumberish BigNumberish The value to be formatted.\noptions? FormatSignificantOptions Formatting options.\nExample Usage", "metadata": {"page_number": 220, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94594723cdbd", "text": "const formatted : string = formatSignificant ('123456' , { significantDigits : 3 }) // 1.23\nCopy\nformatSignificantDecimals\nThis function formats token and ethereum values to a specified number of significant digits.\nFunction Signatur e \nexport function  formatSignificantDecimals (\n  bigNumberish : BigNumberish ,\n  decimals : number,\n  options ?: FormatSignificantOptions\n): string\nCopy\nInput Parameters  \nParameter Type Description\nbigNumberish BigNumberish The value to be formatted.\ndecimals number The decimals of the passed value.\noptions? FormatSignificantOptions Formatting options.\nExample Usage\nconst formatted : string = formatSignificantDecimals ('1234560000000000000' , 18, {", "metadata": {"page_number": 221, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "62a94c70905f", "text": "options? FormatSignificantOptions Formatting options.\nExample Usage\nconst formatted : string = formatSignificantDecimals ('1234560000000000000' , 18, {\n  significantDigits : 3,\n}) // 1.23\nCopy\nformatFixed\nThis function formats values to a specified number of decimal places.\nFunction Signatur e \nexport function  formatFixed (bigNumberish : BigNumberish , options ?: FormatFixedOptions ): string\nCopy\nInput Parameters  \nParameter Type Description\nbigNumberish BigNumberish The value to be formatted.\noptions? FormatFixedOptions Formatting options.\nExample Usage\nconst formatted : string = formatFixed ('1.2345' , { decimalPlaces : 2 }) // 1.23\nCopy\nformatFixedDecimals", "metadata": {"page_number": 221, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "10879df55cbd", "text": "Example Usage\nconst formatted : string = formatFixed ('1.2345' , { decimalPlaces : 2 }) // 1.23\nCopy\nformatFixedDecimals\nThis function formats token and ethereum values to a specified number of decimal places.\nFunction Signatur e", "metadata": {"page_number": 221, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7c69757ff29f", "text": "export function  formatFixedDecimals (bigNumberish : BigNumberish , decimals : number, options ?: FormatFixedOptions ): string\nCopy\nInput Parameters  \nParameter Type Description\nbigNumberish BigNumberish The value to be formatted.\ndecimals number The decimals of the passed value.\noptions? FormatFixedOptions Formatting options.\nExample Usage\nconst formatted : string = formatFixedDecimals ('1234560000000000000' , 18, {\n  decimalPlaces : 2,\n}) // 1.23\nCopy\nEdit this page\nHelpful?\nPrevious\nComputation\nNext\nOrchestration\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage", "metadata": {"page_number": 222, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bcd9d366f320", "text": "Next\nOrchestration\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter", "metadata": {"page_number": 222, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6551c712c20e", "text": "Blog", "metadata": {"page_number": 223, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "648f1beb22a0", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nCurrencyAmount\nEther\nFraction\nNativeCurrency\nPercent\nPrice\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nFractionHelpful?", "metadata": {"page_number": 224, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9a2f3401066d", "text": "Price\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nFractionHelpful?\nOn this page\nFraction\n@uniswap/sdk-core  / Exports  / Fraction\nClass: Fraction\nHierar chy", "metadata": {"page_number": 224, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0c3fa4d1abd5", "text": "Fraction\n\u21b3 CurrencyAmount\n\u21b3 Percent\n\u21b3 Price\nTable of contents  \nConstructors \nconstructor\nProperties \ndenominator\nnumerator\nAccessors \nasFraction\nquotient\nremainder\nMethods \nadd\ndivide\nequalT o\ngreaterThan\ninvert\nlessThan\nmultiply\nsubtract\ntoFixed\ntoSignificant\ntryParseFraction\nConstructors  \nconstructor \n\u2022 new Fraction (numerator , denominator? )\nParameters  \nName Type\nnumerator BigintIsh\ndenominator BigintIsh\nDefined in  \nentities/fractions/fraction.ts:28", "metadata": {"page_number": 225, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "10f428f3c928", "text": "Properties  \ndenominator \n\u2022 Readonly  denominator : default\nDefined in  \nentities/fractions/fraction.ts:26\nnumerator \n\u2022 Readonly  numerator : default\nDefined in  \nentities/fractions/fraction.ts:25\nAccessors  \nasFraction \n\u2022 get asFraction (): Fraction\nHelper method for converting any super class back to a fraction\nReturns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:154\nquotient \n\u2022 get quotient (): default\nReturns  \ndefault\nDefined in  \nentities/fractions/fraction.ts:42\nremainder \n\u2022 get remainder (): Fraction", "metadata": {"page_number": 226, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4f171c36d39b", "text": "Returns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:47\nMethods  \nadd \n\u25b8 add(other ): Fraction\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:55\ndivide \n\u25b8 divide (other ): Fraction\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:1 15\nequalTo \n\u25b8 equalT o(other ): boolean\nParameters", "metadata": {"page_number": 227, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "781d6f388a1f", "text": "Name Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nDefined in  \nentities/fractions/fraction.ts:91\ngreaterThan \n\u25b8 greaterThan (other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nDefined in  \nentities/fractions/fraction.ts:99\ninvert \n\u25b8 invert (): Fraction\nReturns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:51\nlessThan \n\u25b8 lessThan (other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction", "metadata": {"page_number": 228, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "79c63c75da35", "text": "Returns  \nboolean\nDefined in  \nentities/fractions/fraction.ts:83\nmultiply \n\u25b8 multiply (other ): Fraction\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:107\nsubtract \n\u25b8 subtract (other ): Fraction\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:69\ntoFixed \n\u25b8 toFixed (decimalPlaces , format? , rounding? ): string\nParameters", "metadata": {"page_number": 229, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "acb01183c5ac", "text": "Name Type Default value\ndecimalPlaces number undefined\nformat object undefined\nrounding Rounding Rounding.ROUND_HALF_UP\nReturns  \nstring\nDefined in  \nentities/fractions/fraction.ts:138\ntoSignificant \n\u25b8 toSignificant (significantDigits , format? , rounding? ): string\nParameters  \nName Type Default value\nsignificantDigits number undefined\nformat object undefined\nrounding Rounding Rounding.ROUND_HALF_UP\nReturns  \nstring\nDefined in  \nentities/fractions/fraction.ts:123\ntryParseFraction \n\u25b8 Static  Private  tryParseFraction (fractionish ): Fraction\nParameters  \nName Type\nfractionish BigintIsh  | Fraction\nReturns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:33", "metadata": {"page_number": 230, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "10b4edba561b", "text": "Parameters  \nName Type\nfractionish BigintIsh  | Fraction\nReturns  \nFraction\nDefined in  \nentities/fractions/fraction.ts:33\nEdit this page", "metadata": {"page_number": 230, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "80b6cccd73e5", "text": "Helpful?\nPrevious\nEther\nNext\nNativeCurrency\nHierarchy\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties\ndenominator\nnumerator\nAccessors\nasFraction\nquotient\nremainder\nMethods\nadd\ndivide\nequalT o\ngreaterThan\ninvert\nlessThan\nmultiply\nsubtract\ntoFixed\ntoSignificant\ntryParseFraction\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 231, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "77ef2a526402", "text": "tryParseFraction\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 231, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c45161539aef", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 232, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f7e1d79e51a4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 233, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7e9689c88f0f", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nTechnical Reference\nFractionsHelpful?\nOn this page\nFraction\nconstructor (numerator : BigintIsh , denominator : BigintIsh  = ONE)\nCopy\nThe base class which all subsequent fraction classes extend. Not meant to be used dir ectly .", "metadata": {"page_number": 233, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b3acc2a278a5", "text": "Properties  \nnumerator \nnumerator : JSBI\nCopy\ndenominator \ndenominator : JSBI\nCopy\nquotient \nquotient : JSBI\nCopy\nPerforms floor division.\nMethods  \ninvert \ninvert(): Fraction\nCopy\nadd \nadd(other: Fraction  | BigintIsh ): Fraction\nCopy\nsubtract \nsubtract (other: Fraction  | BigintIsh ): Fraction\nCopy\nmultiply \nmultiply (other: Fraction  | BigintIsh ): Fraction\nCopy\ndivide \ndivide(other: Fraction  | BigintIsh ): Fraction\nCopy\ntoSignificant \ntoSignificant (\n  significantDigits : number,", "metadata": {"page_number": 234, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f01267485280", "text": "Copy\ndivide \ndivide(other: Fraction  | BigintIsh ): Fraction\nCopy\ntoSignificant \ntoSignificant (\n  significantDigits : number,\n  format : object = { groupSeparator : '' },", "metadata": {"page_number": 234, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4be9f8430a53", "text": "rounding : Rounding  = Rounding .ROUND_HALF_UP\n): string\nCopy\nFormats a fraction to the specified number of significant digits.\nFor format options, see toFormat .\ntoFixed \ntoFixed(\n  decimalPlaces : number,\n  format : object = { groupSeparator : '' },\n  rounding : Rounding  = Rounding .ROUND_HALF_UP\n): string\nCopy\nFormats a fraction to the specified number of decimal places.\nFor format options, see toFormat .\nPercent\nResponsible for formatting percentages (10% instead of 0.1).\nExample  \nimport { Percent } from '@uniswap/sdk'\nconst percent = new Percent('60', '100')\nconsole.log(percent.toSignificant (2)) // 60\nCopy\ntoSignificant", "metadata": {"page_number": 235, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8a5b6e2a5286", "text": "const percent = new Percent('60', '100')\nconsole.log(percent.toSignificant (2)) // 60\nCopy\ntoSignificant \nSee toSignificant .\ntoFixed \nSee toFixed .\nTokenAmount\nconstructor (token: Token, amount: BigintIsh )\nCopy\nResponsible for formatting token amounts with specific decimal places.\nExample  \nimport { Token, TokenAmount  } from '@uniswap/sdk'\nconst FRIED = new Token(ChainId.MAINNET, '0xfa1aFe1000000000000000000000000000000000' , 18, 'FRIED', 'Beans')\nconst tokenAmount = new TokenAmount (FRIED, '3000000000000000000' )\nconsole.log(tokenAmount .toExact()) // 3", "metadata": {"page_number": 235, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0578190d89ab", "text": "Copy\nProperties  \ntoken \ntoken: Token\nCopy\nraw \nraw: JSBI\nCopy\nReturns the full token amount, unadjusted for decimals.\nMethods  \nadd \nadd(other: TokenAmount ): TokenAmount\nCopy\nsubtract \nsubtract (other: TokenAmount ): TokenAmount\nCopy\ntoSignificant \nSee toSignificant .\ntoFixed \nSee toFixed .\ntoExact \ntoExact(format: object = { groupSeparator : '' }): string\nCopy\nPrice\nconstructor (baseToken : Token, quoteToken : Token, denominator : BigintIsh , numerator : BigintIsh )\nCopy", "metadata": {"page_number": 236, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "00e0f081a6fd", "text": "Copy\nPrice\nconstructor (baseToken : Token, quoteToken : Token, denominator : BigintIsh , numerator : BigintIsh )\nCopy\nResponsible for denominating the relative price between two tokens. Denominator and numerator must be unadjusted for\ndecimals.\nExample", "metadata": {"page_number": 236, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94b9f4757ec4", "text": "import { ChainId, WETH as WETHs, Token, Price } from '@uniswap/sdk'\nconst WETH = WETHs[ChainId.MAINNET]\nconst ABC = new Token(ChainId.MAINNET, '0xabc0000000000000000000000000000000000000' , 18, 'ABC')\nconst price = new Price(WETH, ABC, '1000000000000000000' , '123000000000000000000' )\nconsole.log(price.toSignificant (3)) // 123\nCopy\nThis example shows the ETH/XYZ price, where ETH is the base token, and XYZ is the quote token. The price is constructed\nfrom an amount of XYZ (the numerator) / an amount of WETH (the denominator).\nStatic Methods  \nfromRoute", "metadata": {"page_number": 237, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "56aa10c1410a", "text": "from an amount of XYZ (the numerator) / an amount of WETH (the denominator).\nStatic Methods  \nfromRoute \nfromRoute (route: Route): Price\nCopy\nProperties  \nbaseToken \nbaseToken : Token\nCopy\nquoteToken \nquoteToken : Token\nCopy\nscalar \nscalar: Fraction\nCopy\nUsed to adjust the price for the decimals of the base and quote tokens.\nraw \nraw: Fraction\nCopy\nReturns the raw price, unadjusted for decimals.\nadjusted \nadjusted : Fraction\nCopy\nReturns the price, adjusted for decimals.\nMethods", "metadata": {"page_number": 237, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1628c818afef", "text": "invert \ninvert(): Price\nCopy\nmultiply \nmultiply (other: Price): Price\nCopy\nquote \nquote(tokenAmount : TokenAmount ): TokenAmount\nCopy\nGiven an asset amount, returns an equivalent value of the other asset, according to the current price.\ntoSignificant \nSee toSignificant .\ntoFixed \nSee toFixed .\nEdit this page\nHelpful?\nPrevious\nTrade\nNext\nFetcher\nProperties\nnumerator\ndenominator\nquotient\nMethods\ninvert\nadd\nsubtract\nmultiply\ndivide\ntoSignificant\ntoFixed\nExample\ntoSignificant", "metadata": {"page_number": 238, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "72756fc4bf57", "text": "Methods\ninvert\nadd\nsubtract\nmultiply\ndivide\ntoSignificant\ntoFixed\nExample\ntoSignificant\ntoFixed\nExample\nProperties\ntoken\nraw\nMethods\nadd\nsubtract\ntoSignificant\ntoFixed", "metadata": {"page_number": 238, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2e8106086d0f", "text": "toExact\nExample\nStatic Methods\nfromRoute\nProperties\nbaseT oken\nquoteT oken\nscalar\nraw\nadjusted\nMethods\ninvert\nmultiply\nquote\ntoSignificant\ntoFixed\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 239, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8b75016c1661", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 240, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b47f707f430f", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 240, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fe73d463b713", "text": "classes\nFullMath\nOn this page\nFullMath\n@uniswap/v3-sdk  / Exports  / FullMath\nClass: FullMath\nTable of contents  \nConstructors \nconstructor\nMethods \nmulDivRoundingUp\nConstructors  \nconstructor \n\u2022 Private  new FullMath ()\nCannot be constructed.\nDefined in  \nutils/fullMath.ts:8\nMethods  \nmulDivRoundingUp \n\u25b8 Static  mulDivRoundingUp (a, b, denominator ): default\nParameters  \nName Type\na default\nb default\ndenominator default\nReturns  \ndefault\nDefined in", "metadata": {"page_number": 241, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7a82ad5c7c82", "text": "utils/fullMath.ts:10\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nLiquidityMath\nTable of contents\nConstructors\nMethods\nConstructors\nconstructor\nMethods\nmulDivRoundingUp\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 242, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "170b26b95ee3", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 243, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "085febe35816", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nGuides\nPair AddressesHelpful?\nOn this page\ngetPair\nThe most obvious way to get the address for a pair is to call getPair  on the factory . If the pair exists, this function will return\nits address, else address(0)  (0x0000000000000000000000000000000000000000 ).\nThe \"canonical\" way to determine whether or not a pair exists.", "metadata": {"page_number": 243, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eb945f5c3ec2", "text": "Requires an on-chain lookup.\nCREA TE2\nThanks to some fancy footwork in the factory , we can also compute pair addresses without any on-chain lookups  because of\nCREA TE2. The following values are required for this technique:\naddress The factory address\nsalt keccak256(abi.encodePacked(token0, token1))\nkeccak256(init_code) 0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f\ntoken0  must be strictly less than token1  by sort order .\nCan be computed of fline.\nRequires the ability to perform keccak256 .\nExamples  \nTypeScript \nThis example makes use of the Uniswap SDK . In reality , the SDK computes pair addresses behind the scenes, obviating the", "metadata": {"page_number": 244, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "55e86e907597", "text": "Requires the ability to perform keccak256 .\nExamples  \nTypeScript \nThis example makes use of the Uniswap SDK . In reality , the SDK computes pair addresses behind the scenes, obviating the\nneed to compute them manually like this.\nimport { FACTORY_ADDRESS , INIT_CODE_HASH  } from '@uniswap/sdk'\nimport { pack, keccak256 } from '@ethersproject/solidity'\nimport { getCreate2Address } from '@ethersproject/address'\nconst token0 = '0xCAFE000000000000000000000000000000000000'  // change me!\nconst token1 = '0xF00D000000000000000000000000000000000000'  // change me!\nconst pair = getCreate2Address (\n  FACTORY_ADDRESS ,", "metadata": {"page_number": 244, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ff095d92316a", "text": "const token1 = '0xF00D000000000000000000000000000000000000'  // change me!\nconst pair = getCreate2Address (\n  FACTORY_ADDRESS ,\n  keccak256 (['bytes'], [pack(['address' , 'address' ], [token0, token1])]),\n  INIT_CODE_HASH\n)\nCopy\nEdit this page\nHelpful?\nPrevious\nTrading\nNext\nGetting Started\nExamples\nTypeScript\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 244, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a522e5788afb", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 245, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "54a688b8f4c9", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 246, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d9fde050a8a1", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nTechnical Reference\nGetting StartedHelpful?\nOn this page\nGetting Started\nThe pages that follow contain technical reference information on the Uniswap SDK. Looking for a quick start  instead? You\nmay also want to jump into a guide , which of fers a friendlier introduction to the SDK!", "metadata": {"page_number": 246, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c47f1fa508a3", "text": "The SDK is written in TypeScript, has a robust test suite, performs arbitrary precision arithmetic, and supports rounding to\nsignificant digits or fixed decimal places. The principal exports of the SDK are entities : classes that contain initialization and\nvalidation checks, necessary data fields, and helper functions.\nAn important concept in the SDK is fractions . Because Solidity performs integer math, care must be taken in non-EVM\nenvironments to faithfully replicate the actual computation carried out on-chain. The first concern here is to ensure that an\noverflow-safe integer implementation is used. Ideally , the SDK would be able to use native BigInt s. However , until support\nbecomes more widespread, JSBI  objects are used instead, with the idea that once BigInts proliferate, this dependency can be\ncompiled away . The second concern is precision loss due to, for example, chained price ratio calculations. To address this\nissue, all math operations are performed as fraction operations, ensuring arbitrary precision up until the point that values are", "metadata": {"page_number": 247, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3516c1ecbdf5", "text": "compiled away . The second concern is precision loss due to, for example, chained price ratio calculations. To address this\nissue, all math operations are performed as fraction operations, ensuring arbitrary precision up until the point that values are\nrounded for display purposes, or truncated to fit inside a fixed bit width.\nThe SDK works for all chains on which the factory  is deployed.\nCode  \nThe source code is available on GitHub .\nDependencies\nThe SDK declares its dependencies as peer dependencies . This is for two reasons:\nprevent installation of unused dependencies (e.g. @ethersproject/providers  and @ethersproject/contracts , only\nused in Fetcher )\nprevent duplicate @ethersproject  dependencies with conflicting versions\nHowever , this means you must install these dependencies alongside the SDK, if you do not already have them installed.\nEdit this page\nHelpful?\nPrevious\nPair Addresses\nNext\nToken", "metadata": {"page_number": 247, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f069b6b4edd8", "text": "However , this means you must install these dependencies alongside the SDK, if you do not already have them installed.\nEdit this page\nHelpful?\nPrevious\nPair Addresses\nNext\nToken\nCode\nDependencies\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 247, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fca5039107ab", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 248, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eae356ed93db", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nGovernance\nOverview\nProcess\nBeginners Guide to Voting\nGlossary\nAdversarial Circumstances\nChangelog\nResearch\nResources\nGlossary\n\u0000\nGovernance\nGlossaryHelpful?\nGlossary\nUNI:  An ERC-20 token that designates the weight of a user 's voting rights. The more UNI a user has in their wallet,\nthe more weight their delegation or vote on a proposal holds.\nDelegation:  UNI holders cannot vote or create proposals until they delegate their voting rights to an address.", "metadata": {"page_number": 249, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "462a76f74bdb", "text": "the more weight their delegation or vote on a proposal holds.\nDelegation:  UNI holders cannot vote or create proposals until they delegate their voting rights to an address.\nDelegation can be given to one address at a time, including the holder 's own address. Note that delegation does not\nlock tokens; it simply adds votes to the chosen delegation address.\nProposal:  A proposal is executable code that modifies the governance contract or treasury and how they work. In\norder to create a proposal, a user must have at least 0.25% (2.5M UNI) of all UNI delegated to their address.\nProposals are stored in the \"proposals \" mapping of the Governor smart contract. All proposals are subject to a 7-day\nvoting period. If the proposer does not maintain their vote weight balance throughout the voting period, the proposal\nmay be canceled by anyone.\nQuorum:  In order for a vote to pass, it must achieve quorum of 4% of all UNI (40M) voting in the af firmative. The", "metadata": {"page_number": 249, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46d086fd0ad5", "text": "may be canceled by anyone.\nQuorum:  In order for a vote to pass, it must achieve quorum of 4% of all UNI (40M) voting in the af firmative. The\npurpose of the quorum is to ensure that the only measures that pass have adequate voter participation.\nVoting:  Users can vote for or against single proposals once they have voting rights delegated to their address. Votes\ncan be cast while a proposal is in the \"Active \" state. Votes can be submitted immediately using \"castV ote\" or\nsubmitted later with \"castV oteBySig \" (For more info on castV oteBySig and of fline signatures, see EIP-712). If the\nmajority of votes (and a 4% quorum of UNI) vote for a proposal, the proposal may be queued in the Timelock.\nVoting Period:  Once a proposal has been put forward, Uniswap community members will have a seven day period\n(the Voting Period) to cast their votes.", "metadata": {"page_number": 249, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8fceb847a462", "text": "Timelock:  All governance and other administrative actions are required to sit in the Timelock for a minimum of 2\ndays, after which they can be implemented.\nEdit this page\nHelpful?\nPrevious\nBeginners Guide to Voting\nNext\nAdversarial Circumstances\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 250, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "becad0ee3952", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nGovernance Reference\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nGovernance", "metadata": {"page_number": 252, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "222d2931ef77", "text": "Smart Contract Integration\nTechnical Reference\nAPI\nGovernance\nGovernance Reference\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nGovernance\nGovernance ReferenceHelpful?\nOn this page\nGovernance Refer ence\nThe updated reference for the newly deployed Governor Bravo is available via Etherscan , some of the reference material below may be out of date.\nThe Uniswap protocol is governed and upgraded by UNI token holders, using three distinct components; the UNI token, governance module, and Timelock. Together , these contracts allow\nthe community to propose, vote, and implement changes to the uniswap protocol.\nAny addresses with more than 2.5M UNI delegated to it may propose governance actions, which contain finished, executable code. When a proposal is created, the community can cast", "metadata": {"page_number": 252, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "053113428bf3", "text": "the community to propose, vote, and implement changes to the uniswap protocol.\nAny addresses with more than 2.5M UNI delegated to it may propose governance actions, which contain finished, executable code. When a proposal is created, the community can cast\ntheir votes during a 3 day voting period. If a majority , and at least 4M votes are cast for the proposal, it is queued in the Timelock, and may be executed in a minimum of 2 days.\nTimelock  \nThe Timelock contract can modify system parameters, logic, and contracts in a 'time-delayed, opt-out' upgrade pattern. Timelock has a hard-coded minimum delay of 2 days, which is the\nleast amount of notice possible for a governance action. Each proposed action will be published at a minimum of 2 days in the future from the time of announcement. Major upgrades, such\nas changing the risk system, may have up to a 30 day delay . Timelock is controlled by the governance module; pending and completed governance actions can be monitored on the\nTimelock Dashboard.", "metadata": {"page_number": 252, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "656e70a6bc72", "text": "Key Events", "metadata": {"page_number": 253, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc7bf6c4a8da", "text": "DelegateChanged  \nDelegateChanged (address indexed delegator , address indexed fromDelegate , address indexed toDelegate )\nCopy\nEmitted when an account changes its delegate.\nDelegateV otesChanged  \nDelegateVotesChanged (address indexed delegate , uint previousBalance , uint newBalance )\nCopy\nEmitted when a delegate account's vote balance changes.\nProposalCr eated  \nProposalCreated (uint id, address proposer , address[] targets , uint[] values, string[] signatures , bytes[] calldatas , uint startBlock , uint endBlock , string \nCopy\nEmitted when a new proposal is created.\nVoteCast  \nVoteCast (address voter, uint proposalId , bool support , uint votes)\nCopy\nEmitted when a vote has been cast on a proposal.\nProposalCanceled  \nProposalCanceled (uint id)\nCopy", "metadata": {"page_number": 254, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "715f17e434e4", "text": "Copy\nEmitted when a vote has been cast on a proposal.\nProposalCanceled  \nProposalCanceled (uint id)\nCopy\nEmitted when a proposal has been canceled.\nProposalQueued  \nProposalQueued (uint id, uint eta)\nCopy\nEmitted when a proposal has been queued in the Timelock.\nProposalExecuted  \nProposalExecuted (uint id)\nCopy\nEmitted when a proposal has been executed in the Timelock.\nRead-Only Functions: UNI\nGet Curr ent Votes \nfunction  getCurrentVotes (address account ) returns (uint96)\nCopy\nReturns the balance of votes for an account as of the current block.\nName Type\naccountaddress Address of the account of which to retrieve the number of votes.\nGet Prior  Votes", "metadata": {"page_number": 254, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ea6410fcb895", "text": "Copy\nReturns the balance of votes for an account as of the current block.\nName Type\naccountaddress Address of the account of which to retrieve the number of votes.\nGet Prior  Votes \nfunction  getPriorVotes (address account , uint blockNumber ) returns (uint96)\nCopy\nReturns the prior number of votes for an account at a specific block number . The block number passed must be a finalized block or the function will revert.\nName Type\naccount address Address of the account of which to retrieve the prior number of votes.\nblocknumber uint The block number at which to retrieve the prior number of votes.\nunnamed uint96 The number of prior votes", "metadata": {"page_number": 254, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "178336f28e11", "text": "State-Changing Functions: UNI\nDelegate  \nfunction  delegate (address delegatee )\nCopy\nDelegate votes from the sender to the delegatee. Users can delegate to 1 address at a time, and the number of votes added to the delegatee\u2019 s vote count is equivalent to the balance of UNI in\nthe user \u2019s account. Votes are delegated from the current block and onward, until the sender delegates again, or transfers their UNI.\nName Type\ndelegatee address The address to which msg.sender wishes to delegate their votes to.\nDelegate By Signatur e \nfunction  delegateBySig (address delegatee , uint nonce, uint expiry, uint8 v, bytes32 r, bytes32 s)\nCopy\nDelegate votes from the sender to the delegatee. Users can delegate to 1 address at a time, and the number of votes added to the delegatee\u2019 s vote count is equivalent to the balance of UNI in", "metadata": {"page_number": 255, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ad75562809f3", "text": "Copy\nDelegate votes from the sender to the delegatee. Users can delegate to 1 address at a time, and the number of votes added to the delegatee\u2019 s vote count is equivalent to the balance of UNI in\nthe user \u2019s account. Votes are delegated from the current block and onward, until the sender delegates again, or transfers their UNI.\nName Type\ndelegatee address The address to which msg.sender wishis to delegate their vote to\nnonce uint The contract state required to match the signature. This can be retrieved from the contract\u2019 s public nonces mapping\nexpiry uint The time when the signature expires. A block timestamp in seconds since the unix epoch.\nv uint The recovery byte of the signature.\nr bytes32 Half of the ECDSA  signature pair .\ns bytes32 Half of the ECDSA  signature pair .\nRead-Only Functions: Governor  Alpha\nQuorum Votes \nfunction  quorumVotes () public pure returns (uint)", "metadata": {"page_number": 255, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "124b43719823", "text": "s bytes32 Half of the ECDSA  signature pair .\nRead-Only Functions: Governor  Alpha\nQuorum Votes \nfunction  quorumVotes () public pure returns (uint)\nCopy\nReturns the minimum number of votes required for a proposal to succeed.\nProposal Threshold  \nfunction  proposalThreshold () returns (uint)\nCopy\nReturns the minimum number of votes required for an account to create a proposal.\nProposal Max Operations  \nfunction  proposalMaxOperations () returns (uint)\nCopy\nReturns the maximum number of actions that can be included in a proposal. Actions are functions calls that will be made when a proposal succeeds and executes.\nVoting Delay  \nfunction  votingDelay () returns (uint)\nCopy\nReturns the number of blocks to wait before voting on a proposal may begin. This value is added to the current block number when a proposal is created.\nVoting Period", "metadata": {"page_number": 255, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "544a048b9227", "text": "Voting Delay  \nfunction  votingDelay () returns (uint)\nCopy\nReturns the number of blocks to wait before voting on a proposal may begin. This value is added to the current block number when a proposal is created.\nVoting Period  \nfunction  votingPeriod () returns (uint)\nCopy\nReturns the duration of voting on a proposal, in blocks.\nGet Actions  \nfunction  getActions (uint proposalId ) returns (uint proposalId ) public view returns (address[] memory targets , uint[] memory values, string[] memory signatur\nCopy\nGets the actions of a selected proposal. Pass a proposal ID and get the tar gets, values, signatures and calldatas of that proposal.", "metadata": {"page_number": 255, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0cce1b7d6651", "text": "Name Type\nproposalId uint ID of the proposal\nReturns:\nArray of addresses of contracts the proposal calls.\nArray of unsigned integers the proposal uses as values.\nArray of strings of the proposal\u2019 s signatures.\nArray of calldata bytes of the proposal.\nGet Receipt  \nfunction  getReceipt (uint proposalId , address voter) returns (Receipt memory)\nCopy\nReturns a proposal ballot receipt of a given voter .\nName Type\nproposalId uint ID of the proposal in which to get a voter \u2019s ballot receipt.\nvoter address Address of the account of a proposal voter .\nReceipt struct A Receipt struct for the ballot of the voter address.\nState  \nfunction  state(uint proposalId ) returns (ProposalState )\nCopy\nReturns enum of type ProposalState, possible types are: -Pending -Active -Canceled -Defeated -Succeeded -Queued -Expired -andExecuted", "metadata": {"page_number": 256, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f72e73fa5762", "text": "State  \nfunction  state(uint proposalId ) returns (ProposalState )\nCopy\nReturns enum of type ProposalState, possible types are: -Pending -Active -Canceled -Defeated -Succeeded -Queued -Expired -andExecuted\nName Type\nproposalId uint ID of the proposal\nState-Changing Functions: Governor  Alpha\nPropose  \nfunction  propose(address[] memory targets , uint[] memory values, string[] memory signatures , bytes[] memory calldatas , string memory description ) returns (u\nCopy\nCreates a Proposal to change the protocol.\nProposals will be voted on by delegated voters. If there is suf ficient support before the voting period ends, the proposal shall be automatically enacted. Enacted proposals are queued and\nexecuted in the Timelock contract.\nThe sender must hold more UNI than the current proposal threshold (proposalThreshold()) as of the immediately previous block. The proposal can have up to 10 actions (based on", "metadata": {"page_number": 256, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "01b14dad9978", "text": "executed in the Timelock contract.\nThe sender must hold more UNI than the current proposal threshold (proposalThreshold()) as of the immediately previous block. The proposal can have up to 10 actions (based on\nproposalMaxOperations()).\nThe proposer cannot create another proposal if they currently have a pending or active proposal. It is not possible to queue two identical actions in the same block (due to a restriction in the\nTimelock), therefore actions in a single proposal must be unique, and unique proposals that share an identical action must be queued in dif ferent blocks.\nName Type\ntargetsaddress The ordered list of tar get addresses for calls to be made during proposal execution. This array must be the same length as all other array parameters in this function.\nvalues uintThe ordered list of values (i.e. msg.value) to be passed to the calls made during proposal execution. This array must be the same length as all other array parameters in\nthis function", "metadata": {"page_number": 256, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f305fe165bfe", "text": "values uintThe ordered list of values (i.e. msg.value) to be passed to the calls made during proposal execution. This array must be the same length as all other array parameters in\nthis function\nsignatures string The ordered list of function signatures to be passed during execution. This array must be the same length as all other array parameters in this function.\ncalldatas bytesThe ordered list of data to be passed to each individual function call during proposal execution. This array must be the same length as all other array parameters in this\nfunction.\ndescription string A human readable description of the proposal and the changes it will enact.\nUnnamed uint Returns ID of the new proposal\nQueue  \nfunction  queue(uint proposalId )\nCopy\nAfter a proposal has succeeded, any address can call the queue method to move the proposal into the Timelock queue. A proposal can only be queued if it has succeeded.\nName Type\nproposalId uint ID of a given successful proposal\nExecute", "metadata": {"page_number": 256, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "34a95bff897c", "text": "After a proposal has succeeded, any address can call the queue method to move the proposal into the Timelock queue. A proposal can only be queued if it has succeeded.\nName Type\nproposalId uint ID of a given successful proposal\nExecute  \nfunction  execute(uint proposalId ) payable\nCopy\nAfter the Timelock delay period, any account may invoke the execute method to apply the changes from the proposal to the tar get contracts. This will invoke each of the actions described\nin the proposal. This function is payable so the Timelock contract can invoke payable functions that were selected in the proposal.", "metadata": {"page_number": 256, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ab89d0b9f851", "text": "Name Type\nproposalId uint ID of a given successful proposal\nCancel  \nfunction  queue(uint proposalId )\nCopy\nCancel a proposal that has not yet been executed. The Guardian is the only one who may execute this unless the proposer does not maintain the delegates required to create a proposal. If\nthe proposer does not have more delegates than the proposal threshold, anyone can cancel the proposal.\nName Type\nproposalId uint ID of a proposal to cancel\nCast Vote \nfunction  castVote (uint proposalId , bool support )\nCopy\nCast a vote on a proposal. The account's voting weight is determined by it's number of delegated votes at the time the proposal becomes active.\nName Type\nproposalId uint ID of a given successful proposal\nsupport bool A boolean of true for 'yes' or false for 'no' on the proposal vote.\nCast Vote By Signatur e", "metadata": {"page_number": 257, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "341cf95e4df1", "text": "Name Type\nproposalId uint ID of a given successful proposal\nsupport bool A boolean of true for 'yes' or false for 'no' on the proposal vote.\nCast Vote By Signatur e \nfunction  castVoteBySig (uint proposalId , bool support , uint8 v, bytes32 r, bytes32 s)\nCopy\nCast a vote on a proposal. The account's voting weight is determined by its number of delegated votes at the time the proposal became active. This method has the same purpose as Cast\nVote, but instead enables of fline signatures to participate in governance voting. For more details on how to create an of fline signature, review EIP-712.\nName Type\nproposalId uint ID of a given successful proposal\nsupport bool A boolean of true for 'yes' or false for 'no' on the proposal vote.\nexpiry uint The time when the signature expires. A block timestamp in seconds since the unix epoch.", "metadata": {"page_number": 257, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f70d41653213", "text": "support bool A boolean of true for 'yes' or false for 'no' on the proposal vote.\nexpiry uint The time when the signature expires. A block timestamp in seconds since the unix epoch.\nv uint The recovery byte of the signature.\nr bytes32 Half of the ECDSA  signature pair .\ns bytes32 Half of the ECDSA  signature pair .\nEdit this page\nHelpful?\nPrevious\nQueries\nNext\nFactory\nTimelock\nDelegateChanged\nDelegateV otesChanged\nProposalCreated\nVoteCast\nProposalCanceled\nProposalQueued\nProposalExecuted\nGet Current Votes\nGet Prior Votes\nDelegate\nDelegate By Signature\nQuorum Votes\nProposal Threshold\nProposal Max Operations\nVoting Delay\nVoting Period", "metadata": {"page_number": 257, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b321963ef821", "text": "ProposalExecuted\nGet Current Votes\nGet Prior Votes\nDelegate\nDelegate By Signature\nQuorum Votes\nProposal Threshold\nProposal Max Operations\nVoting Delay\nVoting Period\nGet Actions\nGet Receipt\nState\nPropose\nQueue\nExecute\nCancel\nCast Vote\nCast Vote By Signature\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 257, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12ffd18e5815", "text": "Whitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 258, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b5a7dbca240f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nGovernance\nOverview\nProcess\nBeginners Guide to Voting\nGlossary\nAdversarial Circumstances\nChangelog\nResearch\nResources\nGlossary\n\u0000\nGovernance\nBeginners Guide to VotingHelpful?\nOn this page\nBeginners Guide to Voting\nThis guide contains everything you need to start voting in Uniswap Governance.\nIn order to participate you will need:\nUNI Tokens\nETH for transaction costs\nA browser with Metamask  installed", "metadata": {"page_number": 261, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "37a3ebfe3c23", "text": "This guide contains everything you need to start voting in Uniswap Governance.\nIn order to participate you will need:\nUNI Tokens\nETH for transaction costs\nA browser with Metamask  installed\nThe governance process  begins in the Governance Forum , where you can find proposals under consideration, gather information about community\nsentiment, and engage with the community .\nOnce a given proposal has made it through the proposal process and is ready for voting, it will appear in the Uniswap voting dashboard  - where you\ncan view all current and former Uniswap proposals.", "metadata": {"page_number": 261, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7a4433f3d8f9", "text": "If a proposal is currently live for voting, it will say active  next to the title. Clicking the proposal will show all the necessary information,\ndocumentation, and discussion needed for a voter to make an informed decision.", "metadata": {"page_number": 262, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d10f9ea0ac83", "text": "Once a proposal has reached the voting stage it represents real, executable code which will alter the functionality of Uniswap Governance or anything\nunder its jurisdiction - proper care should be taken to ensure that the code represented in the proposal has been audited and is found to be in good\nfaith.\nDelegation  \nUNI is a tradable asset and functions like most other standard ERC20 tokens, except it has a deeper power as a voting mechanism. In order for UNI\nto be used as a vote, the owner must first go through the delegation process. Delegating UNI binds the voting power of your tokens to an address so it\nmay be used to vote. This address could be yourself, or a trusted party who you believe will vote in the best interest of Uniswap Governance.\nA democratic consensus, in our process called \u201cquorum\u201d, is determined by the percentage of UNI tokens in favor of, or against, a proposal. 1% of all", "metadata": {"page_number": 263, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "458b424eb202", "text": "A democratic consensus, in our process called \u201cquorum\u201d, is determined by the percentage of UNI tokens in favor of, or against, a proposal. 1% of all\nUNI must be cast in favor to submit a proposal, and 4% in order to pass a vote.\nTo delegate your UNI tokens and enact their voting power , visit the Uniswap voting dashboard  and click the button that says \u201cUnlock Voting\u201d.\nOnce you click this button, you will see a screen that gives you the option to self delegate, or add a delegate address. If you wish to delegate your\nUNI voting power to your own address, click \u201cSelf Delegate\u201d.", "metadata": {"page_number": 263, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6d2147497d23", "text": "When you click \u201cSelf Delegate\u201d, a transaction will pop up in Metamask. If this doesn\u2019 t happen, double check that metamask is connected to\napp.uniswap.or g, turn of f any popup blockers, and try again. Click confirm, and once the transaction has processed, you will see that the voting\ndashboard homepage has changed to show the number of votes you have, and \u201cDelegated to: Self\u201d.\nIf you wish to delegate your voting power to another party , choose \u201cAdd Delegate\u201d and enter the ethereum address of your chosen voting party .", "metadata": {"page_number": 264, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f35453252bcb", "text": "An important note: much like voter registration in a lar ger democracy , for UNI to be used in a vote it must be delegated before both the voting period\nand the preceding proposal period. This means if you want your vote to count, you must delegate it in anticipation of any proposal you may be\ninterested in.\nIf you are unsure of how best to vote and are interested in delegating your UNI voting power to another party , you can visit the Delegation Pitch\nsection of the governance forum. Here parties participating in Uniswap Governance pitch their platform and voting agenda for users to read and\ndiscuss.\nVoting  \nIf you have successfully self delegated and there is an active proposal, you are ready to vote in Uniswap Governance.\nTo cast your vote, navigate to the proposals page and click on an active proposal.", "metadata": {"page_number": 265, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "62c2eaabc2ae", "text": "After reviewing the attached details and deciding your opinion, choose \u201cV ote For\u201d, or \u201cV ote Against\u201d.", "metadata": {"page_number": 266, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3329c19e7f83", "text": "Once you\u2019ve chosen, a window will pop up allowing you to execute the vote.", "metadata": {"page_number": 267, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae5f1c2393ab", "text": "When you click to cast your vote, metamask will pop up asking you to confirm your transaction. Click \u201csubmit\u201d, wait a bit, and check that the\ntransaction has been confirmed.", "metadata": {"page_number": 268, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7d48e33701f3", "text": "That\u2019 s it! Once your transaction has been confirmed, you will have cast your vote and participated in Uniswap Governance.\nEdit this page\nHelpful?\nPrevious\nProcess\nNext\nGlossary\nDelegation\nVoting\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 269, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5bed0079b63d", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 270, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0eab6d23c11", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 271, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46036ea1e2e6", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 271, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "940bf9d95d75", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nHexStringsHelpful?\nOn this page\nHexStrings\nFunctions  \ntoHexString \n  function  toHexString (\n  ) internal  returns (string)\nCopy\nConverts a uint256  to its ASCII string  hexadecimal representation with fixed length.\nCredit to Open Zeppelin under MIT  license https://github.com/OpenZeppelin/openzeppelin-\ncontracts/blob/243adf f49ce1700e0ecb99fe522fb16cf f1d1ddc/contracts/utils/Strings.sol#L55\ntoHexStringNoPrefix\n  function  toHexStringNoPrefix (\n  ) internal  returns (string)\nCopy\nEdit this page", "metadata": {"page_number": 272, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8479f6523361", "text": "toHexStringNoPrefix\n  function  toHexStringNoPrefix (\n  ) internal  returns (string)\nCopy\nEdit this page\nHelpful?\nPrevious\nChainId\nNext\nLiquidityAmounts\nFunctions\ntoHexString\ntoHexStringNoPrefix\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 272, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "02dc7d8dd71f", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 273, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ec910d5cbfd0", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nHow Uniswap works\nEcosystem Participants\nSmart contracts\nGlossary\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000", "metadata": {"page_number": 274, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "85fdad3cae13", "text": "Core Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nProtocol Overview\nHow Uniswap worksHelpful?\nHow Uniswap works", "metadata": {"page_number": 274, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a2a8931059ed", "text": "Uniswap is an automated liquidity pr otocol  powered by a constant product formula  and implemented in a system of non-upgradeable smart contracts on the Ethereum  blockchain. It\nobviates the need for trusted intermediaries, prioritizing decentralization , censorship r esistance , and security . Uniswap is open-sour ce softwar e licensed under the GPL .\nEach Uniswap smart contract, or pair , manages a liquidity pool made up of reserves of two ERC-20  tokens.\nAnyone can become a liquidity provider (LP) for a pool by depositing an equivalent value of each underlying token in return for pool tokens. These tokens track pro-rata LP  shares of the\ntotal reserves, and can be redeemed for the underlying assets at any time.", "metadata": {"page_number": 275, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ec34c61da74", "text": "Pairs act as automated market makers, standing ready to accept one token for the other as long as the \u201cconstant product\u201d formula is preserved. This formula, most simply expressed as x *\ny = k , states that trades must not change the product ( k) of a pair \u2019s reserve balances ( x and y). Because k remains unchanged from the reference frame of a trade, it is often referred to as\nthe invariant. This formula has the desirable property that lar ger trades (relative to reserves) execute at exponentially worse rates than smaller ones.\nIn practice, Uniswap applies a 0.30% fee to trades, which is added to reserves. As a result, each trade actually increases k. This functions as a payout to LPs, which is realized when they\nburn their pool tokens to withdraw their portion of total reserves. In the future, this fee may be reduced to 0.25%, with the remaining 0.05% withheld as a protocol-wide char ge.", "metadata": {"page_number": 276, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2cab978ec308", "text": "Because the relative price of the two pair assets can only be changed through trading, diver gences between the Uniswap price and external prices create arbitrage opportunities. This\nmechanism ensures that Uniswap prices always trend toward the market-clearing price.\nFurther  reading\nTo see how token swaps work in practice, and to walk through the lifecycle of a swap, check out Swaps . Or, to see how liquidity pools work, see Pools .\nUltimately , of course, the Uniswap protocol is just smart contract code running on Ethereum. To understand how they work, head over to Smart Contracts .\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nEcosystem Participants\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 277, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "57b717385928", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 277, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e64e7b881cbe", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 278, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b2d1609e68a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 279, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c305e9416fc3", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 279, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4c0daa4a27b9", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIERC20MetadataHelpful?\nOn this page\nIERC20Metadata\nExtension to IERC20 that includes token metadata\nFunctions  \nname \n  function  name(\n  ) external  returns (string)\nCopy\nReturn Values:  \nType Description\nstring name of the token\nsymbol \n  function  symbol(\n  ) external  returns (string)\nCopy\nReturn Values:  \nType Description\nstring symbol of the token\ndecimals \n  function  decimals (\n  ) external  returns (uint8)\nCopy\nReturn Values:  \nTypeDescription\nuint8 number of decimal places the token has\nEdit this page", "metadata": {"page_number": 280, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "83881276f763", "text": "Helpful?\nPrevious\nSelfPermit\nNext\nIERC721Permit\nFunctions\nname\nsymbol\ndecimals\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 281, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "36d73cb1f536", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses", "metadata": {"page_number": 282, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "10c3585d4c32", "text": "IUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nIERC20MinimalHelpful?\nOn this page\nIERC20Minimal\nContains a subset of the full ERC20 interface that is used in Uniswap V3", "metadata": {"page_number": 282, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "18471ff9e77f", "text": "Functions  \nbalanceOf \n  function  balanceOf (\n    address account\n  ) external  view returns (uint256)\nCopy\nReturns the balance of a token\nParameters:  \nName Type Description\naccount address The account for which to look up the number of tokens it has, i.e. its balance\nReturn Values:  \nType Description\nuint256 number of tokens held by the account\ntransfer \n  function  transfer (\n    address recipient ,\n    uint256 amount\n  ) external  returns (bool)\nCopy\nTransfers the amount of token from the msg.sender  to the recipient\nParameters:  \nName Type Description\nrecipient address The account that will receive the amount transferred\namount uint256 The number of tokens to send from the sender to the recipient\nReturn Values:  \nTypeDescription", "metadata": {"page_number": 283, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "59d005046b7f", "text": "Parameters:  \nName Type Description\nrecipient address The account that will receive the amount transferred\namount uint256 The number of tokens to send from the sender to the recipient\nReturn Values:  \nTypeDescription\nbool true for a successful transfer , false for an unsuccessful transfer\nallowance \n  function  allowance (\n    address owner,\n    address spender\n  ) external  view returns (uint256)\nCopy\nReturns the current allowance given to a spender by an owner", "metadata": {"page_number": 283, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "587ddfec7625", "text": "Parameters:  \nName Type Description\nowner address The account of the token owner\nspender address The account of the token spender\nReturn Values:  \nType Description\nuint256 current allowance granted by owner  to spender\napprove \n  function  approve(\n    address spender ,\n    uint256 amount\n  ) external  returns (bool)\nCopy\nSets the allowance of a spender from the msg.sender  to the value amount\nParameters:  \nName Type Description\nspender address The account which will be allowed to spend a given amount of the owners tokens\namount uint256 The amount of tokens allowed to be used by spender\nReturn Values:  \nTypeDescription\nbool true for a successful approval, false for unsuccessful\ntransferFrom \n  function  transferFrom (\n    address sender,\n    address recipient ,", "metadata": {"page_number": 284, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a2f56f49d84e", "text": "Return Values:  \nTypeDescription\nbool true for a successful approval, false for unsuccessful\ntransferFrom \n  function  transferFrom (\n    address sender,\n    address recipient ,\n    uint256 amount\n  ) external  returns (bool)\nCopy\nTransfers amount  tokens from sender  to recipient  up to the allowance given to the msg.sender\nParameters:  \nName Type Description\nsender address The account from which the transfer will be initiated\nrecipient address The recipient of the transfer\namount uint256 The amount of the transfer\nReturn Values:", "metadata": {"page_number": 284, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8315faa51a4b", "text": "TypeDescription\nbool true for a successful transfer , false for unsuccessful\nEvents  \nTransfer \n  event Transfer (\n    address from,\n    address to,\n    uint256 value\n  )\nCopy\nEvent emitted when tokens are transferred from one address to another , either via #transfer  or #transferFrom .\nParameters:  \nName Type Description\nfrom address The account from which the tokens were sent, i.e. the balance decreased\nto address The account to which the tokens were sent, i.e. the balance increased\nvalue uint256 The amount of tokens that were transferred\nApproval \n  event Approval (\n    address owner,\n    address spender ,\n    uint256 value\n  )\nCopy\nEvent emitted when the approval amount for the spender of a given owner's tokens changes.\nParameters:", "metadata": {"page_number": 285, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2d70dac31ae0", "text": "address owner,\n    address spender ,\n    uint256 value\n  )\nCopy\nEvent emitted when the approval amount for the spender of a given owner's tokens changes.\nParameters:  \nName Type Description\nowner address The account that approved spending of its tokens\nspender address The account for which the spending allowance was modified\nvalue uint256 The new allowance from the owner to the spender\nEdit this page\nHelpful?\nPrevious\nUniswapV3PoolDeployer\nNext\nIUniswapV3Factory\nFunctions\nbalanceOf\ntransfer\nallowance\napprove", "metadata": {"page_number": 285, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac2dd3b66760", "text": "transferFrom\nEvents\nTransfer\nApproval\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 286, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d823a94adbb3", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 287, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f4e21413b237", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nIERC1271\nIERC20PermitAllowed\nIWETH9\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes", "metadata": {"page_number": 287, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc7917b098be", "text": "Universal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nexternal\nIERC20PermitAllowedHelpful?\nOn this page\nIERC20PermitAllowed\nInterface used by DAI/CHAI for permit\nFunctions  \npermit \n  function  permit(\n    address holder,\n    address spender ,\n    uint256 nonce,\n    uint256 expiry,\n    bool allowed ,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external\nCopy\nApprove the spender to spend some tokens via the holder signature\nThis is the permit interface used by DAI and CHAI\nParameters:  \nName Type Description", "metadata": {"page_number": 288, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c636a359dcd7", "text": "bytes32 s\n  ) external\nCopy\nApprove the spender to spend some tokens via the holder signature\nThis is the permit interface used by DAI and CHAI\nParameters:  \nName Type Description\nholder address The address of the token holder , the token owner\nspender address The address of the token spender\nnonce uint256 The holder's nonce, increases at each call to permit\nexpiry uint256 The timestamp at which the permit is no longer valid\nallowed bool Boolean that sets approval amount, true for type(uint256).max and false for 0\nv uint8 Must produce valid secp256k1 signature from the holder along with r and s\nr bytes32 Must produce valid secp256k1 signature from the holder along with v and s\ns bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nEdit this page\nHelpful?", "metadata": {"page_number": 288, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6ad8452bd275", "text": "r bytes32 Must produce valid secp256k1 signature from the holder along with v and s\ns bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 288, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2352f0340a49", "text": "IERC1271\nNext\nIWETH9\nFunctions\npermit\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 289, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a398e63b437e", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 290, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a8c7a046db1c", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 290, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1b069400268d", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIERC721PermitHelpful?\nOn this page\nIERC721Permit\nExtension to ERC721 that includes a permit function for signature based approvals\nFunctions  \nPERMIT_TYPEHASH \n  function  PERMIT_TYPEHASH (\n  ) external  returns (bytes32)\nCopy\nThe permit typehash used in the permit signature\nReturn Values:  \nType Description\nbytes32 typehash for the permit\nDOMAIN_SEPARATOR \n  function  DOMAIN_SEPARATOR (\n  ) external  returns (bytes32)\nCopy\nThe domain separator used in the permit signature\nReturn Values:  \nName TypeDescription\nThe domain seperator used in encoding of permit signature\npermit \n  function  permit(", "metadata": {"page_number": 291, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db404ea6cc35", "text": "Copy\nThe domain separator used in the permit signature\nReturn Values:  \nName TypeDescription\nThe domain seperator used in encoding of permit signature\npermit \n  function  permit(\n    address spender ,\n    uint256 tokenId ,\n    uint256 deadline ,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external\nCopy", "metadata": {"page_number": 291, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bfaab955e641", "text": "Approve of a specific token ID for spending by spender via signature\nParameters:  \nName Type Description\nspender address The account that is being approved\ntokenId uint256 The ID of the token that is being approved for spending\ndeadline uint256 The deadline timestamp by which the call must be mined for the approve to work\nv uint8 Must produce valid secp256k1 signature from the holder along with r and s\nr bytes32 Must produce valid secp256k1 signature from the holder along with v and s\ns bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nEdit this page\nHelpful?\nPrevious\nIERC20Metadata\nNext\nIMulticall\nFunctions\nPERMIT_TYPEHASH\nDOMAIN_SEP ARA TOR\npermit\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 292, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "79b0aeb2a8b4", "text": "Next\nIMulticall\nFunctions\nPERMIT_TYPEHASH\nDOMAIN_SEP ARA TOR\npermit\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 292, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32945fa4afb7", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 293, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ac5184470dd", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nIERC1271\nIERC20PermitAllowed\nIWETH9\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes", "metadata": {"page_number": 293, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ef8496c0350", "text": "Universal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nexternal\nIERC1271Helpful?\nOn this page\nIERC1271\nInterface that verifies provided signature for the data\nInterface defined by EIP-1271\nFunctions  \nisValidSignature \n  function  isValidSignature (\n    bytes32 hash,\n    bytes signature\n  ) external  returns (bytes4 magicValue )\nCopy\nReturns whether the provided signature is valid for the provided data\nMUST  return the bytes4 magic value 0x1626ba7e when function passes. MUST  NOT  modify state (using ST ATICCALL  for\nsolc < 0.5, view modifier for solc > 0.5). MUST  allow external calls.\nParameters:", "metadata": {"page_number": 294, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f12e24a36d83", "text": "solc < 0.5, view modifier for solc > 0.5). MUST  allow external calls.\nParameters:  \nName Type Description\nhash bytes32 Hash of the data to be signed\nsignature bytes Signature byte array associated with _data\nReturn Values:  \nName Type Description\nmagicValue bytes32 The bytes4 magic value 0x1626ba7e\nEdit this page\nHelpful?\nPrevious\nIV3Migrator\nNext\nIERC20PermitAllowed", "metadata": {"page_number": 294, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "43ea7e0ceee7", "text": "Functions\nisValidSignature\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 295, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "070a859736ea", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nUsing the API\nCustom Linking\nIframe Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol", "metadata": {"page_number": 296, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "82efbafe5e7b", "text": "Custom Linking\nIframe Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides\nInterface Integration\nIframe IntegrationHelpful?\nIframe Integration\nSwap Widget\nThese docs are deprecated. Please refer to Swap Widget  to embed the Uniswap swap widget as a React component in your website in 2 minutes.\nUniswap can be used within other sites as an iframe. An iframe shows an exact version of the Uniswap frontend site and can have custom prefilled\nsettings.\nWhy You May Want This\nIntegrating the Uniswap site directly into your web application can be useful for a variety of reasons.", "metadata": {"page_number": 296, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0f8c804c7705", "text": "settings.\nWhy You May Want This\nIntegrating the Uniswap site directly into your web application can be useful for a variety of reasons.\nThe interface allows users to buy , sell, send, or provide liquidity for ERC20 tokens. An iframe integration may be useful if your application provides\nservices around these ERC20 tokens. (For example, users can buy DAI through a Uniswap iframe on your site, then allow users to lend that DAI on your\nsite).\nIt can also be useful if your application requires users to acquire some token in order to use some service (For example, allow users to buy \"REP\" token\nso they can engage in prediction markets on the Augur Dapp ).", "metadata": {"page_number": 296, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0f598df8d982", "text": "iframe vs. custom UI\nOne benefit of an iframe integration is that the your site will automatically keep up with any improvements/additions to the site. After the initital\nintegration is setup no further work is needed to pull in updates as the exchange site is updated over time.\nExample\n<iframe\n  src=\"https://app.uniswap.org/#/swap?exactField=input&exactAmount=10&inputCurrency=0x6b175474e89094c44da98b954eedeac495271d0f\"\n  height=\"660px\"\n  width=\"100%\"\n  style=\"\n    border: 0;\n    margin: 0 auto;\n    margin-bottom: .5rem;\n    display: block;\n    border-radius: 10px;\n    max-width: 960px;\n    min-width: 300px;", "metadata": {"page_number": 297, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6053e08df540", "text": "margin: 0 auto;\n    margin-bottom: .5rem;\n    display: block;\n    border-radius: 10px;\n    max-width: 960px;\n    min-width: 300px;\n  \"\n/>\nC o p y\nAn example of an Iframe integration can be found on the FOAM site https://map.foam.space/\nTo see the iframe, click the dropdown in the top right and click Get FOAM .\nAdd To Your Site\nTo include a Uniswap iframe within your site just add an iframe element within your website code and link to the Uniswap frontent.\nLinking to a ETH <-> DAI swap page would look something like this. To link to a token of your choice replace the address after outputCurrency  with\nthe token address of the token you want to link to.\n<iframe", "metadata": {"page_number": 297, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2f0f6fcf6452", "text": "Linking to a ETH <-> DAI swap page would look something like this. To link to a token of your choice replace the address after outputCurrency  with\nthe token address of the token you want to link to.\n<iframe\n  src=\"https://app.uniswap.org/#/swap?outputCurrency=0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359\"\n  height=\"660px\"\n  width=\"100%\"\n  style=\"\n    border: 0;\n    margin: 0 auto;\n    display: block;\n    border-radius: 10px;\n    max-width: 600px;\n    min-width: 300px;\n  \"\n/>\nC o p y", "metadata": {"page_number": 297, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ab4e447dc87b", "text": "display: block;\n    border-radius: 10px;\n    max-width: 600px;\n    min-width: 300px;\n  \"\n/>\nC o p y\nYou can customize the selected page, selected custom tokens and more using URL  query parameters. See Custom Linking .\nEdit this page\nHelpful?\nPrevious\nCustom Linking\nNext\nSmart Contract Quick start\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 297, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bff520cc1aa2", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 298, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "acc45bcfa61c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 299, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f915e8b3116a", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 299, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7ad8fc82a7e4", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIMulticallHelpful?\nOn this page\nIMulticall\nEnables calling multiple methods in a single call to the contract\nFunctions  \nmulticall \n  function  multicall (\n    bytes[] data\n  ) external  returns (bytes[] results )\nCopy\nCall multiple functions in the current contract and return the data from all of them if they all succeed\nThe msg.value  should not be trusted for any method callable from multicall.\nParameters:  \nName Type Description\ndata bytes[] The encoded function data for each of the calls to make to this contract\nReturn Values:  \nName Type Description\nresults bytes[] The results from each of the calls passed in via data\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 300, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dea79de8f81d", "text": "Return Values:  \nName Type Description\nresults bytes[] The results from each of the calls passed in via data\nEdit this page\nHelpful?\nPrevious\nIERC721Permit\nNext\nINonfungiblePositionManager\nFunctions\nmulticall\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper", "metadata": {"page_number": 300, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e9c0b240e6fd", "text": "Github\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 301, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "027961456c87", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nUniswap V3 Staker Design\nUniswap V3 Staker Contract\nInterfaces\nLibraries\nIncentiveId\nNFTPositionInfo\nRewardMath\nTest\nNonfungiblePositionManager", "metadata": {"page_number": 302, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3e6de514f515", "text": "Uniswap V3 Staker Contract\nInterfaces\nLibraries\nIncentiveId\nNFTPositionInfo\nRewardMath\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nStaker\nLibrariesHelpful?", "metadata": {"page_number": 302, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b84950e6aff4", "text": "IncentiveId\nOn this page\nIncentiveId\nFunctions  \ncompute \n  function  compute(\n    struct IUniswapV3Staker .IncentiveKey key\n  ) internal  pure returns (bytes32 incentiveId )\nCopy\nCalculate the key for a staking incentive\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The components used to compute the incentive identifier\nReturn Values:  \nName Type Description\nincentiveId bytes32 The identifier for the incentive\nEdit this page\nHelpful?\nPrevious\nIUniswapV3Staker\nNext\nNFTPositionInfo\nFunctions\ncompute\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 303, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "459b80626777", "text": "Next\nNFTPositionInfo\nFunctions\ncompute\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 303, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ef50609184c1", "text": "Analytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 304, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b02d22495b8d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 305, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3bb35b14f628", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nIncentiveKeyHelpful?", "metadata": {"page_number": 305, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a7dd40da3efc", "text": "On this page\nIncentiveKey\n@uniswap/v3-sdk  / Exports  / IncentiveKey\nInterface: IncentiveKey\nRepresents a unique staking program.\nTable of contents  \nProperties \nendT ime\npool\nrefundee\nrewardT oken\nstartT ime\nProperties  \nendTime \n\u2022 endT ime: BigintIsh\nThe time that the incentive program ends.\nDefined in  \nstaker .ts:28\npool \n\u2022 pool: Pool\nThe pool that the staked positions must provide in.\nDefined in  \nstaker .ts:20\nrefundee \n\u2022 refundee : string\nThe address which receives any remaining reward tokens at endTime .\nDefined in  \nstaker .ts:32", "metadata": {"page_number": 306, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ccbe193ec8e1", "text": "rewardToken \n\u2022 rewardT oken : Token\nThe token rewarded for participating in the staking program.\nDefined in  \nstaker .ts:16\nstartTime \n\u2022 startT ime: BigintIsh\nThe time when the incentive program begins.\nDefined in  \nstaker .ts:24\nEdit this page\nHelpful?\nPrevious\nFeeOptions\nNext\nIncreaseSpecificOptions\nTable of contents\nProperties\nProperties\nendT ime\npool\nrefundee\nrewardT oken\nstartT ime\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 307, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7bc4f006045c", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 307, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "16024e21b92c", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 308, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d655a3c62d7", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nSet Up Your Contract\nMint a New Position\nCollecting Fees\nDecrease Liquidity\nIncrease Liquidity\nThe Full Contract\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nIncrease LiquidityHelpful?\nOn this page\nIncrease Liquidity\nIncrease Liquidity Within The Curr ent Range", "metadata": {"page_number": 309, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e6dd161c2199", "text": "\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nIncrease LiquidityHelpful?\nOn this page\nIncrease Liquidity\nIncrease Liquidity Within The Curr ent Range  \nMake sure to go through the first guide  before continuing to this section\nThis example assumes the contract already has custody of the NFT .\nWe cannot change the boundaries of a given liquidity position using the Uniswap v3 protocol; increaseLiquidity\ncan only increase the liquidity of a position.\nIn production, amount0Min  and amount1Min  should be adjusted to create slippage protections.\n    /// @notice Increases liquidity in the current range\n    /// @dev Pool must be initialized already to add liquidity", "metadata": {"page_number": 309, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ea0d7611a6ec", "text": "/// @param tokenId The id of the erc721 token\n    /// @param amount0 The amount to add of token0\n    /// @param amount1 The amount to add of token1\n    function  increaseLiquidityCurrentRange (\n        uint256 tokenId ,\n        uint256 amountAdd0 ,\n        uint256 amountAdd1\n    )\n        external\n        returns (\n            uint128 liquidity ,\n            uint256 amount0 ,\n            uint256 amount1\n        )\n    {\n        INonfungiblePositionManager .IncreaseLiquidityParams memory params =\n            INonfungiblePositionManager .IncreaseLiquidityParams ({\n                tokenId : tokenId ,\n                amount0Desired : amountAdd0 ,\n                amount1Desired : amountAdd1 ,", "metadata": {"page_number": 310, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a8c353665430", "text": "INonfungiblePositionManager .IncreaseLiquidityParams ({\n                tokenId : tokenId ,\n                amount0Desired : amountAdd0 ,\n                amount1Desired : amountAdd1 ,\n                amount0Min : 0,\n                amount1Min : 0,\n                deadline : block.timestamp\n            });\n        (liquidity , amount0 , amount1 ) = nonfungiblePositionManager .increaseLiquidity (params);\n    }\nCopy\nEdit this page\nHelpful?\nPrevious\nDecrease Liquidity\nNext\nThe Full Contract\nIncrease Liquidity Within The Current Range\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 310, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c0cc695a3136", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 310, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d29884587924", "text": "Governance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 311, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3a3f86f877ab", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 312, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "469456d1f10c", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nIncreaseSpecificOptionsHelpful?", "metadata": {"page_number": 312, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "02d3a1642501", "text": "On this page\nIncreaseSpecificOptions\n@uniswap/v3-sdk  / Exports  / IncreaseSpecificOptions\nInterface: Incr easeSpecificOptions\nTable of contents  \nProperties \ntokenId\nProperties  \ntokenId \n\u2022 tokenId : BigintIsh\nIndicates the ID of the position to increase liquidity for .\nDefined in  \nnonfungiblePositionManager .ts:41\nEdit this page\nHelpful?\nPrevious\nIncentiveKey\nNext\nMethodParameters\nTable of contents\nProperties\nProperties\ntokenId\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 313, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6b249a06272d", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 313, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6a0ca9afce5d", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 314, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0d8cbff7db59", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nOverview\nGuides\nConnecting to Wallets\nSupported Connectors\nSwitching Chains\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nweb3-react\nGuides\nConnecting to WalletsHelpful?\nOn this page\nConnecting to Wallets\nIntroduction", "metadata": {"page_number": 315, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d7b92bec2515", "text": "V2 SDK\nV1 SDK\n\u0000\nweb3-react\nGuides\nConnecting to WalletsHelpful?\nOn this page\nConnecting to Wallets\nIntroduction  \nThis guide will cover how to connect wallets with web3-react . It is based on the web3-react  example  found in the\nUniswap code examples repository . To run this example, check out the examples's README  and follow the setup\ninstructions.\nIn this example we will walk through setting up web3-react  and connecting the most popular browser -injected connector ,\nMetaMask , using @web3-react/metamask .\nThe input parameters to this guide are the chains that we want our app to be able to connect to and their RPC URLs.\nThe guide will cover :\n1. Creating a web3-react  Web3ReactProvider\n2. Building a web3-react  InjectedConnector", "metadata": {"page_number": 315, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "10232257963e", "text": "3. Connecting and disconnecting the application to the connector\nAt the end of the guide, we should be able to connect and disconnect your dApp to a MetaMask connector .\nFor this guide, the following web3-react  packages are used:\n@web3-react/core\n@web3-react/types\n@web3-react/metamask\ninfo\nThis guide uses web3-react  version 8, which is a beta version.\nThese will be automatically installed by following the example's README .\nThe core code of this guide can be found in Web3ContextProvider  and InjectedConnector .\nCreating a Web3ReactProvider  \nTo be able to interact with the methods that web3-react  offers, we first need to setup a Web3ReactProvider  and wrap our\napplication in it. web3-react  uses a React Context  to allow us to use the exposed hooks without additional configuration.", "metadata": {"page_number": 316, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3057986d5703", "text": "To be able to interact with the methods that web3-react  offers, we first need to setup a Web3ReactProvider  and wrap our\napplication in it. web3-react  uses a React Context  to allow us to use the exposed hooks without additional configuration.\nTo start, we create a React component called Web3ContextProvider  in order to wrap the logic of configuring the\nWeb3ReactProvider . In this component, we first import Web3ReactProvider  from @web3-react/core .\nThe component receives just one prop which is the children  to which it will be providing the Context :\nDefining the Web3React component\nloading...\nCopy\nView on Github\nWe then implement the component by rendering the imported Web3ReactProvider  with the children  within that:\nImplementing the component\nloading...\nCopy\nView on Github", "metadata": {"page_number": 316, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "974c8a56d9b8", "text": "View on Github\nWe then implement the component by rendering the imported Web3ReactProvider  with the children  within that:\nImplementing the component\nloading...\nCopy\nView on Github\nNote that we map our list of Connections  to a tuple  of the connector  and hooks  of the connection. The third element of a\nConnection  refers to the type of Connection  being established, which we will later use to keep track of the actively\nconnected wallet.\nFinally , having created the Web3ContextProvider  component, we can navigate to our index file  and wrap the whole\napplication with it:\nWrapping our app with the web3 context\nloading...\nCopy\nView on Github\nBuilding an Injected Connector", "metadata": {"page_number": 316, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b30fb56d0f10", "text": "The only parameter that we provided to the Web3ReactProvider  component is a list of prioritized connectors, declared as\nPRIORITIZED_CONNECTORS . The prioritization ordering is with regards to which connector we want to be active when more\nthan one connector is connected to our application. The list is defined inside our connectors module:\nCreating the prioritized Connectors list\nloading...\nCopy\nView on Github\nEach one of those connectors lives within its own file, and they all follow a similar setup pattern.\nAn example of a connector in the list is the InjectedConnector , which supports wallets that inject an Ether eum Pr ovider\ninto the browser window . The most popular example of an injected connector is the MetaMask  browser extension. To set it\nup, we import initializeConnector  function from core and the MetaMask  type from metamask :\nImporting Connector dependencies\nloading...\nCopy", "metadata": {"page_number": 317, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fac222388675", "text": "up, we import initializeConnector  function from core and the MetaMask  type from metamask :\nImporting Connector dependencies\nloading...\nCopy\nView on Github\nWe then utilize the templated initializeConnector  function with MetaMask  as the type ar gument:\nInitializing the MetaMask connector\nloading...\nCopy\nView on Github\nBy passing in MetaMask  as the type ar gument, we define the function's required input parameters. In this case, the only\nparameter we need to pass is an instance of Metamask , which receives the actions  and onError  parameters. The first\nparameter defines the actions that web3-react  performs on its local store for the connector (this usually can be passed\nthrough without modification), while the second parameter is the callback invoked when an error occurs.", "metadata": {"page_number": 317, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d0c9d8e669dd", "text": "parameter defines the actions that web3-react  performs on its local store for the connector (this usually can be passed\nthrough without modification), while the second parameter is the callback invoked when an error occurs.\nThe return type of the function is a tuple of the initialized Connector  and the Hooks  that we can use on it. Using this tuple,\nwe create an instance of a Connection  type, by setting the type  property to INJECTED :\nCreating a connection instance\nloading...\nCopy\nView on Github\nFinally , we return the instance of Connection  we created, which is added to the list of prioritized connectors.\ninfo\nFor help on creating the rest of the supported connectors of this examples, please visit our connectors  page!\nConnecting and disconnecting the application to the connector  \nHaving built our InjectedConnector , we can now use it in the Context that allows our application to use that connector:\nCreating the Option component\nloading...", "metadata": {"page_number": 317, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "81ef3f9c9baa", "text": "Copy\nView on Github\nThe component receives 5 parameters:\nisEnabled  determines whether the connector is eligible to be activated\nisConnected  determines whether the connector is currently active\nconnectionType  determines the ConnectionType\nonActivate  is called once the component has established a connection\nonDeactivate  is called once the component has disconnected\nIn the case of MetaMask , when declaring the InjectedConnector  we pass the connector -specific ar guments:\nCreating an injected connector\nloading...\nCopy\nView on Github\nThen, in the html  portion of the Option , we can figure out whether we want the current Option 's action button to be\ndisabled, and whether clicking the button would result in the connector being connected or disconnected:\nThe component user interface\nloading...\nCopy\nView on Github", "metadata": {"page_number": 318, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "70fd079c2a54", "text": "disabled, and whether clicking the button would result in the connector being connected or disconnected:\nThe component user interface\nloading...\nCopy\nView on Github\nFinally , we also have enough information to figure out what action to take when the button is clicked. In the case that the\nclick triggers a connection:\nOn connecting to a Connector\nloading...\nCopy\nView on Github\nTo connect our wallet, all we need to do is to call the tryActivateConnector  function and pass it the InjectedConnector .\nWe then call the onActivate  callback, which makes the InjectedConnector  the active connector in our application's state.\ntryActivateConnector  takes as its ar gument the connector that we want to activate, and attempts to call activate  on it. If\nthis activation succeeds, it returns the new ConnectionType :\nThe implementation of tryActivateConnector\nloading...", "metadata": {"page_number": 318, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "87fa7373d995", "text": "this activation succeeds, it returns the new ConnectionType :\nThe implementation of tryActivateConnector\nloading...\nCopy\nView on Github\nIn the case that the click triggers a disconnection:\nOn disconnecting from a Connector\nloading...\nCopy\nView on Github", "metadata": {"page_number": 318, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d1e4b1525cde", "text": "To disconnect, all we need to do is to call tryDeactivateConnector  and pass in it the InjectedConnector  we created\nbefore. We then call the onDeactivate  callback, which removes the InjectedConnector  as the currently active connector\nfrom our application's state.\ntryDeactivateConnector  takes as its ar gument the connector that we want to deactivate, and attempts to call deactivate\non it. If this deactivation succeeds, it resets the connector's state by calling resetState  and returns null :\nThe implementation of tryDeactivateConnector\nloading...\nCopy\nView on Github\nNext Steps  \nNow that we have gone through connecting and disconnecting from an InjectedConnector , we will learn how to connect\nand disconnect  from all the dif ferent types of connectors that web3-react  supports.\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 319, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "caa7dbe451a8", "text": "and disconnect  from all the dif ferent types of connectors that web3-react  supports.\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nSupported Connectors\nIntroduction\nCreating a Web3ReactProvider\nBuilding an Injected Connector\nConnecting and disconnecting the application to the connector\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter", "metadata": {"page_number": 319, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "994d937eaea1", "text": "Blog", "metadata": {"page_number": 320, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "843a2369cbd6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGetting Started\nCalling Flash\nThe Flash Callback\nThe Final Contract\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement Flash Swaps\nGetting StartedHelpful?\nOn this page\nGetting Started", "metadata": {"page_number": 321, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46f5326d0793", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement Flash Swaps\nGetting StartedHelpful?\nOn this page\nGetting Started\nIn this guide, we will write a smart contract that calls flash  on a V3 pool and swaps the full amount withdrawn of token0\nand token1  in the corresponding pools with the same token pair - but dif ferent fee tiers. After the swap, the contract will pay\nback the first pool and transfer profits to the original calling address.\nFlash Transactions Overview  \nFlash transactions are an approach to transferring tokens on Ethereum that transfer token balances befor e the necessary\nconditions are met for those balances to be transferred. In the context of a swap, this would mean the output is sent from the\nswap before the input is received.\nUniswap V3 introduces a new function, flash , within the Pool contract. Flash  withdraws a specified amount of both", "metadata": {"page_number": 321, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aa688c50dcc3", "text": "swap before the input is received.\nUniswap V3 introduces a new function, flash , within the Pool contract. Flash  withdraws a specified amount of both\ntoken0  and token1  to the recipient  address. The withdrawn amount, plus the swap fees, will be due to the pool at the end\nof the transaction. flash  includes a fourth parameter , data , which allows the caller to abi.encode any necessary data to be\npassed through the function and decoded later .", "metadata": {"page_number": 321, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "870fca3c3802", "text": "function  flash(\n        address recipient ,\n        uint256 amount0 ,\n        uint256 amount1 ,\n        bytes calldata  data\n    ) external  override lock noDelegateCall {\nCopy\nThe Flash Callback  \nflash  will withdraw the tokens, but how are they paid back? To understand this, we must look inside the flash function\ncode. midway through the flash  function, we see this:\nIUniswapV3FlashCallback (msg.sender).uniswapV3FlashCallback (fee0, fee1, data);\nCopy\nThis step calls the FlashCallback  function on msg.sender  - which passes the fee data needed to calculate the balances due\nto the pool, as well as any data encoded into the data  parameter .\nIn V3 there are three separate callback functions, uniswapV3SwapCallback , uniswapV3MintCallback , and", "metadata": {"page_number": 322, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9989b993489c", "text": "to the pool, as well as any data encoded into the data  parameter .\nIn V3 there are three separate callback functions, uniswapV3SwapCallback , uniswapV3MintCallback , and\nuniswapV3FlashCallback , each available to be overridden with custom logic. To write our arbitrage contract, we'll be\ncalling flash  and overriding the uniswapV3FlashCallback  with the steps needed to finish executing our transaction.\nInheriting The V3 Contracts  \nInherit IUniswapV3FlashCallback  and PeripheryPayments , as we will use each in our program. Note these two inherited\ncontracts already extend many other contracts that we will be using, such as LowGasSafeMath  which we attach , to types\nuint256  and int256 .\ncontract  PairFlash  is IUniswapV3FlashCallback , PeripheryPayments {", "metadata": {"page_number": 322, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "54508b7835fa", "text": "uint256  and int256 .\ncontract  PairFlash  is IUniswapV3FlashCallback , PeripheryPayments {\n    using LowGasSafeMath  for uint256;\n    using LowGasSafeMath  for int256;\nCopy\nDeclare an immutable public variable swapRouter  of type ISwapRouter :\n    ISwapRouter public Immutable swapRouter ;\nCopy\nDeclare the constructor here, which is executed once when the contract is deployed. Our constructor hardcodes the address\nof the V3 router , factory , and the address of weth9, the ERC-20 wrapper  for ether .\n    constructor (\n        ISwapRouter _swapRouter ,\n        address _factory ,\n        address _WETH9\n    ) PeripheryImmutableState (_factory , _WETH9) {\n        swapRouter = _swapRouter ;\n    }\nCopy", "metadata": {"page_number": 322, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c053d614ce6e", "text": "address _factory ,\n        address _WETH9\n    ) PeripheryImmutableState (_factory , _WETH9) {\n        swapRouter = _swapRouter ;\n    }\nCopy\nThe full import section and contract declaration:\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3FlashCallback.sol' ;", "metadata": {"page_number": 322, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6558c68950e0", "text": "import '@uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol' ;\nimport '@uniswap/v3-periphery/contracts/base/PeripheryPayments.sol' ;\nimport '@uniswap/v3-periphery/contracts/base/PeripheryImmutableState.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/CallbackValidation.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;\ncontract  PairFlash  is IUniswapV3FlashCallback , PeripheryPayments {\n    using LowGasSafeMath  for uint256;", "metadata": {"page_number": 323, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a3b0b57a36bf", "text": "contract  PairFlash  is IUniswapV3FlashCallback , PeripheryPayments {\n    using LowGasSafeMath  for uint256;\n    using LowGasSafeMath  for int256;\n    ISwapRouter public immutable swapRouter ;\n    constructor (\n        ISwapRouter _swapRouter ,\n        address _factory ,\n        address _WETH9\n    ) PeripheryImmutableState (_factory , _WETH9) {\n        swapRouter = _swapRouter ;\n    }\nCopy\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nCalling Flash\nFlash Transactions Overview\nThe Flash Callback\nInheriting The V3 Contracts\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 323, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b0ac03297364", "text": "Flash Transactions Overview\nThe Flash Callback\nInheriting The V3 Contracts\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 323, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "09e4ff8a8d97", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 324, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "60917070486d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 325, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33691aacc97d", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces", "metadata": {"page_number": 325, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f758a27c86aa", "text": "Deployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nINonfungiblePositionManagerHelpful?\nOn this page\nINonfungiblePositionManager\nWraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\nParameter  Structs  \nMintParams \n  struct MintParams  {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower ;\n        int24 tickUpper ;\n        uint256 amount0Desired ;\n        uint256 amount1Desired ;\n        uint256 amount0Min ;\n        uint256 amount1Min ;", "metadata": {"page_number": 325, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bd27187d3860", "text": "address recipient ;\n        uint256 deadline ;\n    }\nCopy\nIncreaseLiquidityParams \n   struct IncreaseLiquidityParams  {\n        uint256 tokenId ;\n        uint256 amount0Desired ;\n        uint256 amount1Desired ;\n        uint256 amount0Min ;\n        uint256 amount1Min ;\n        uint256 deadline ;\n    }\nCopy\nDecreaseLiquidityParams \n    struct DecreaseLiquidityParams  {\n        uint256 tokenId ;\n        uint128 liquidity ;\n        uint256 amount0Min ;\n        uint256 amount1Min ;\n        uint256 deadline ;\n    }\nCopy\nCollectParams \n    struct CollectParams  {\n        uint256 tokenId ;\n        address recipient ;", "metadata": {"page_number": 326, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c14203bfa0fb", "text": "uint256 deadline ;\n    }\nCopy\nCollectParams \n    struct CollectParams  {\n        uint256 tokenId ;\n        address recipient ;\n        uint128 amount0Max ;\n        uint128 amount1Max ;\n    }\nCopy\nFunctions  \npositions \n  function  positions (\n    uint256 tokenId\n  ) external  view returns (uint96 nonce, address operator , address token0, address token1, uint24 fee, int24 tickLower , int24 tickUpper , uint128 liquidity , \nCopy\nReturns the position information associated with a given token ID.\nThrows if the token ID is not valid.\nParameters:  \nName Type Description\ntokenId uint256 The ID of the token that represents the position\nReturn Values:  \nName Type Description", "metadata": {"page_number": 326, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2201e05e75ba", "text": "Throws if the token ID is not valid.\nParameters:  \nName Type Description\ntokenId uint256 The ID of the token that represents the position\nReturn Values:  \nName Type Description\nnonce uint96 The nonce for permits\noperator address The address that is approved for spending\ntoken0 address The address of the token0 for a specific pool\ntoken1 address The address of the token1 for a specific pool\nfee uint24 The fee associated with the pool\ntickLower int24 The lower end of the tick range for the position\ntickUpper int24 The higher end of the tick range for the position\nliquidity uint128 The liquidity of the position\nfeeGrowthInside0LastX128 uint256 The fee growth of token0 as of the last action on the individual position\nfeeGrowthInside1LastX128 uint256 The fee growth of token1 as of the last action on the individual position", "metadata": {"page_number": 326, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "61cdc292cc3e", "text": "feeGrowthInside0LastX128 uint256 The fee growth of token0 as of the last action on the individual position\nfeeGrowthInside1LastX128 uint256 The fee growth of token1 as of the last action on the individual position\ntokensOwed0 uint128 The uncollected amount of token0 owed to the position as of the last computation\ntokensOwed1 uint128 The uncollected amount of token1 owed to the position as of the last computation\ncreateAndInitializePoolIfNecessary \n  function  createAndInitializePoolIfNecessary (\n    address tokenA,\n    address tokenB,\n    uint24 fee,\n    uint160 sqrtPriceX96\n  ) external  returns (address pool)\nCopy", "metadata": {"page_number": 326, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12d826e0bead", "text": "Creates a new pool if it does not exist, then initializes if not initialized\nThis method can be bundled with mint for the first mint of a pool to create, initialize a pool and mint at the same time\nParameters:  \nName Type Description\ntokenA address The contract address of either token0 or token1\ntokenB address The contract address of the other token\nfee uint24 The fee amount of the v3 pool for the specified token pair\nsqrtPriceX96 uint160 The initial square root price of the pool as a Q64.96 value\nWe use tokenA  and tokenB when we are referring to unsorted, or unordered tokens\nReturn Values:  \nName Type Description\npool address Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\nmint \n  function  mint(\n    struct INonfungiblePositionManager .MintParams params", "metadata": {"page_number": 327, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "71010d320635", "text": "pool address Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\nmint \n  function  mint(\n    struct INonfungiblePositionManager .MintParams params\n  ) external  returns (uint256 tokenId , uint128 liquidity , uint256 amount0 , uint256 amount1 )\nCopy\nCreates a new position wrapped in a NFT\nCall this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\nParameters:  \nName Type Description\nparams struct INonfungiblePositionManager .MintParams The params necessary to mint a position, encoded as MintParams  in calldata\nReturn Values:  \nName Type Description\ntokenId uint256 The ID of the token that represents the minted position", "metadata": {"page_number": 327, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fb2da7f2cce2", "text": "Return Values:  \nName Type Description\ntokenId uint256 The ID of the token that represents the minted position\nliquidity uint128 The amount of liquidity for this position\namount0 uint256 The amount of token0\namount1 uint256 The amount of token1\nincreaseLiquidity \n  function  increaseLiquidity (\n    struct INonfungiblePositionManager .IncreaseLiquidityParams params\n  ) external  returns (uint128 liquidity , uint256 amount0 , uint256 amount1 )\nCopy\nIncreases the amount of liquidity in a position, with tokens paid by the msg.sender\nParameters:  \nName Type Description\nparams struct INonfungiblePositionManager .IncreaseLiquidityParams tokenId The ID of the token for which liquidity is being increased,\nReturn Values:  \nName Type Description", "metadata": {"page_number": 327, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b0ac965b24e", "text": "Parameters:  \nName Type Description\nparams struct INonfungiblePositionManager .IncreaseLiquidityParams tokenId The ID of the token for which liquidity is being increased,\nReturn Values:  \nName Type Description\nliquidity uint128 The new liquidity amount as a result of the increase\namount0 uint256 The amount of token0 to acheive resulting liquidity\namount1 uint256 The amount of token1 to acheive resulting liquidity\ndecreaseLiquidity \n  function  decreaseLiquidity (\n    struct INonfungiblePositionManager .DecreaseLiquidityParams params\n  ) external  returns (uint256 amount0 , uint256 amount1 )\nCopy\nDecreases the amount of liquidity in a position and accounts it to the position\nParameters:  \nName Type Description", "metadata": {"page_number": 327, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "89b7fa44ea7f", "text": ") external  returns (uint256 amount0 , uint256 amount1 )\nCopy\nDecreases the amount of liquidity in a position and accounts it to the position\nParameters:  \nName Type Description\nparams struct INonfungiblePositionManager .DecreaseLiquidityParams tokenId The ID of the token for which liquidity is being decreased", "metadata": {"page_number": 327, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0c1b033a0971", "text": "Return Values:  \nName Type Description\namount0 uint256 The amount of token0 sent to recipient\namount1 uint256 The amount of token1 sent to recipient\ncollect \n  function  collect(\n    struct INonfungiblePositionManager .CollectParams params\n  ) external  returns (uint256 amount0 , uint256 amount1 )\nCopy\nCollects up to a maximum amount of fees owed to a specific position to the recipient\nParameters:  \nName Type Description\nparams struct INonfungiblePositionManager .CollectParams tokenId The ID of the NFT  for which tokens are being collected,\nReturn Values:  \nName Type Description\namount0 uint256 The amount of fees collected in token0\namount1 uint256 The amount of fees collected in token1\nburn \n  function  burn(\n    uint256 tokenId\n  ) external", "metadata": {"page_number": 328, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f3edf85db0c1", "text": "amount0 uint256 The amount of fees collected in token0\namount1 uint256 The amount of fees collected in token1\nburn \n  function  burn(\n    uint256 tokenId\n  ) external\nCopy\nBurns a token ID, which deletes it from the NFT  contract. The token must have 0 liquidity and all tokens must be collected first.\nParameters:  \nName Type Description\ntokenId uint256 The ID of the token that is being burned\nEvents  \nIncreaseLiquidity \n  event IncreaseLiquidity (\n    uint256 tokenId ,\n    uint128 liquidity ,\n    uint256 amount0 ,\n    uint256 amount1\n  )\nCopy\nEmitted when liquidity is increased for a position NFT\nAlso emitted when a token is minted\nParameters:  \nName Type Description", "metadata": {"page_number": 328, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f08077a81239", "text": "uint256 amount1\n  )\nCopy\nEmitted when liquidity is increased for a position NFT\nAlso emitted when a token is minted\nParameters:  \nName Type Description\ntokenId uint256 The ID of the token for which liquidity was increased\nliquidity uint128 The amount by which liquidity for the NFT  position was increased\namount0 uint256 The amount of token0 that was paid for the increase in liquidity\namount1 uint256 The amount of token1 that was paid for the increase in liquidity\nDecreaseLiquidity \n  event DecreaseLiquidity (\n    uint256 tokenId ,\n    uint128 liquidity ,\n    uint256 amount0 ,\n    uint256 amount1\n  )\nCopy\nEmitted when liquidity is decreased for a position NFT\nParameters:", "metadata": {"page_number": 328, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "342808fa76d3", "text": "Name Type Description\ntokenId uint256 The ID of the token for which liquidity was decreased\nliquidity uint128 The amount by which liquidity for the NFT  position was decreased\namount0 uint256 The amount of token0 that was accounted for the decrease in liquidity\namount1 uint256 The amount of token1 that was accounted for the decrease in liquidity\nCollect \n  event Collect(\n    uint256 tokenId ,\n    address recipient ,\n    uint256 amount0 ,\n    uint256 amount1\n  )\nCopy\nEmitted when tokens are collected for a position NFT\nThe amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\nParameters:  \nName Type Description\ntokenId uint256 The ID of the token for which underlying tokens were collected\nrecipient address The address of the account that received the collected tokens", "metadata": {"page_number": 329, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "07e0b829ed87", "text": "Parameters:  \nName Type Description\ntokenId uint256 The ID of the token for which underlying tokens were collected\nrecipient address The address of the account that received the collected tokens\namount0 uint256 The amount of token0 owed to the position that was collected\namount1 uint256 The amount of token1 owed to the position that was collected\nEdit this page\nHelpful?\nPrevious\nIMulticall\nNext\nINonfungibleT okenPositionDescriptor\nParameter Structs\nMintParams\nIncreaseLiquidityParams\nDecreaseLiquidityParams\nCollectParams\nFunctions\npositions\ncreateAndInitializePoolIfNecessary\nmint\nincreaseLiquidity\ndecreaseLiquidity\ncollect\nburn\nEvents\nIncreaseLiquidity", "metadata": {"page_number": 329, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3247e6378be5", "text": "positions\ncreateAndInitializePoolIfNecessary\nmint\nincreaseLiquidity\ndecreaseLiquidity\ncollect\nburn\nEvents\nIncreaseLiquidity\nDecreaseLiquidity\nCollect\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 329, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c9b858296206", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 330, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "95c67c20c9c8", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 330, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7625068dce97", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nINonfungibleT okenPositionDescriptorHelpful?\nOn this page\nINonfungibleT okenPositionDescriptor\nFunctions  \ntokenURI \n  function  tokenURI (\n    contract  INonfungiblePositionManager  positionManager ,\n    uint256 tokenId\n  ) external  returns (string)\nCopy\nProduces the URI describing a particular token ID for a position manager\nNote this URI may be a data: URI with the JSON contents directly inlined\nParameters:  \nName Type Description\npositionManagercontract\nINonfungiblePositionManagerThe position manager for which to describe the token\ntokenId uint256The ID of the token for which to produce a description, which\nmay not be valid", "metadata": {"page_number": 331, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "45bb71791fc5", "text": "positionManagercontract\nINonfungiblePositionManagerThe position manager for which to describe the token\ntokenId uint256The ID of the token for which to produce a description, which\nmay not be valid\nReturn Values:  \nType Description\nstring URI of the ERC721-compliant metadata\nEvents  \nUpdateTokenRatioPriority \n  event UpdateTokenRatioPriority (\n    address token,\n    int256 priority\n  )\nCopy\nEmitted when a token is given a new priority order in the displayed price ratio\nParameters:", "metadata": {"page_number": 331, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "582ab8e4b338", "text": "Name Type Description\ntoken address The token being given priority order\npriority int256 Represents priority in ratio - higher integers get numerator priority\nEdit this page\nHelpful?\nPrevious\nINonfungiblePositionManager\nNext\nIPeripheryImmutableState\nFunctions\ntokenURI\nEvents\nUpdateT okenRatioPriority\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 332, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bf01a4100d55", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 332, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "99807e2b412a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nConcentrated Liquidity\nFees\nOracle\nRange Orders\nSwaps\nToken Integration Issues\nGovernance\nResearch\nResources\nGlossary\n\u0000\nProtocol Concepts\nToken Integration IssuesHelpful?\nOn this page\nToken Integration Issues\nFee-on-transfer and rebasing tokens will not function correctly on v3.\nFee-on-transfer  Tokens  \nFee-on-transfer tokens will not function with our router contracts. As a workaround, the token creators may create a token", "metadata": {"page_number": 333, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "39445574aa09", "text": "Fee-on-transfer and rebasing tokens will not function correctly on v3.\nFee-on-transfer  Tokens  \nFee-on-transfer tokens will not function with our router contracts. As a workaround, the token creators may create a token\nwrapper or a customized router . We will not be making a router that supports fee-on-transfer tokens in the future.\nRebasing Tokens  \nRebasing tokens will succeed in pool creation and swapping, but liquidity providers will bear the loss of a negative rebase\nwhen their position becomes active, with no way to recover the loss.\nEdit this page\nHelpful?\nPrevious\nSwaps\nNext\nOverview", "metadata": {"page_number": 333, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1beb0714fea9", "text": "Fee-on-transfer Tokens\nRebasing Tokens\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 334, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7f99f30004d2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\nOverview\nGuides\nConnect to Uniswap\nPool Liquidity\nTrade Tokens\nCustom Linking\nIframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nTechnical Reference\nInterfacesHelpful?", "metadata": {"page_number": 335, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "730c02885a3f", "text": "Iframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nTechnical Reference\nInterfacesHelpful?\nOn this page\nFactory\nSolidity  \ninterface  UniswapFactoryInterface  {\n    // Public Variables\n    address public exchangeTemplate ;\n    uint256 public tokenCount ;\n    // Create Exchange\n    function  createExchange (address token) external  returns (address exchange );\n    // Get Exchange and Token Info\n    function  getExchange (address token) external  view returns (address exchange );\n    function  getToken (address exchange ) external  view returns (address token);\n    function  getTokenWithId (uint256 tokenId ) external  view returns (address token);\n    // Never use\n    function  initializeFactory (address template ) external ;\n}", "metadata": {"page_number": 335, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7f81206629ee", "text": "function  getTokenWithId (uint256 tokenId ) external  view returns (address token);\n    // Never use\n    function  initializeFactory (address template ) external ;\n}\nCopy\nVyper  \ncontract UniswapFactoryInterface ():\n    # Create Exchange\n    def createExchange (token: address ) -> address : modifying\n    # Public Variables\n    def exchangeTemplate () -> address : constant\n    def tokenCount () -> uint256 : constant\n    # Get Exchange and Token Info\n    def getExchange (token_addr : address ) -> address : constant\n    def getToken (exchange : address ) -> address : constant\n    def getTokenWithId (token_id : uint256 ) -> address : constant\n    # Initialize Factory\n    def initializeFactory (template : address ): modifying\nCopy\nExchange", "metadata": {"page_number": 335, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "202275de747a", "text": "def getTokenWithId (token_id : uint256 ) -> address : constant\n    # Initialize Factory\n    def initializeFactory (template : address ): modifying\nCopy\nExchange\nSolidity", "metadata": {"page_number": 335, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "98e0e51922ad", "text": "interface  UniswapExchangeInterface  {\n    // Address of ERC20 token sold on this exchange\n    function  tokenAddress () external  view returns (address token);\n    // Address of Uniswap Factory\n    function  factoryAddress () external  view returns (address factory );\n    // Provide Liquidity\n    function  addLiquidity (uint256 min_liquidity , uint256 max_tokens , uint256 deadline ) external  payable returns (uint256);\n    function  removeLiquidity (uint256 amount, uint256 min_eth , uint256 min_tokens , uint256 deadline ) external  returns (uint256, uint256);\n    // Get Prices\n    function  getEthToTokenInputPrice (uint256 eth_sold ) external  view returns (uint256 tokens_bought );", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7e6115486790", "text": "// Get Prices\n    function  getEthToTokenInputPrice (uint256 eth_sold ) external  view returns (uint256 tokens_bought );\n    function  getEthToTokenOutputPrice (uint256 tokens_bought ) external  view returns (uint256 eth_sold );\n    function  getTokenToEthInputPrice (uint256 tokens_sold ) external  view returns (uint256 eth_bought );\n    function  getTokenToEthOutputPrice (uint256 eth_bought ) external  view returns (uint256 tokens_sold );\n    // Trade ETH to ERC20\n    function  ethToTokenSwapInput (uint256 min_tokens , uint256 deadline ) external  payable returns (uint256  tokens_bought );", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "78d7942f7cf4", "text": "// Trade ETH to ERC20\n    function  ethToTokenSwapInput (uint256 min_tokens , uint256 deadline ) external  payable returns (uint256  tokens_bought );\n    function  ethToTokenTransferInput (uint256 min_tokens , uint256 deadline , address recipient ) external  payable returns (uint256  tokens_bought );\n    function  ethToTokenSwapOutput (uint256 tokens_bought , uint256 deadline ) external  payable returns (uint256  eth_sold );\n    function  ethToTokenTransferOutput (uint256 tokens_bought , uint256 deadline , address recipient ) external  payable returns (uint256  eth_sold );\n    // Trade ERC20 to ETH", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3a39bb91702a", "text": "function  ethToTokenTransferOutput (uint256 tokens_bought , uint256 deadline , address recipient ) external  payable returns (uint256  eth_sold );\n    // Trade ERC20 to ETH\n    function  tokenToEthSwapInput (uint256 tokens_sold , uint256 min_eth , uint256 deadline ) external  returns (uint256  eth_bought );\n    function  tokenToEthTransferInput (uint256 tokens_sold , uint256 min_eth , uint256 deadline , address recipient ) external  returns (uint256  eth_bought );\n    function  tokenToEthSwapOutput (uint256 eth_bought , uint256 max_tokens , uint256 deadline ) external  returns (uint256  tokens_sold );", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d65e477b1029", "text": "function  tokenToEthSwapOutput (uint256 eth_bought , uint256 max_tokens , uint256 deadline ) external  returns (uint256  tokens_sold );\n    function  tokenToEthTransferOutput (uint256 eth_bought , uint256 max_tokens , uint256 deadline , address recipient ) external  returns (uint256  tokens_sold );\n    // Trade ERC20 to ERC20\n    function  tokenToTokenSwapInput (uint256 tokens_sold , uint256 min_tokens_bought , uint256 min_eth_bought , uint256 deadline , address token_addr ) external  re\n    function  tokenToTokenTransferInput (uint256 tokens_sold , uint256 min_tokens_bought , uint256 min_eth_bought , uint256 deadline , address recipient , address", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e0cd3ee33ae9", "text": "function  tokenToTokenTransferInput (uint256 tokens_sold , uint256 min_tokens_bought , uint256 min_eth_bought , uint256 deadline , address recipient , address \n    function  tokenToTokenSwapOutput (uint256 tokens_bought , uint256 max_tokens_sold , uint256 max_eth_sold , uint256 deadline , address token_addr ) external  ret\n    function  tokenToTokenTransferOutput (uint256 tokens_bought , uint256 max_tokens_sold , uint256 max_eth_sold , uint256 deadline , address recipient , address t\n    // Trade ERC20 to Custom Pool\n    function  tokenToExchangeSwapInput (uint256 tokens_sold , uint256 min_tokens_bought , uint256 min_eth_bought , uint256 deadline , address exchange_addr ) exter", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1e4667db0436", "text": "function  tokenToExchangeSwapInput (uint256 tokens_sold , uint256 min_tokens_bought , uint256 min_eth_bought , uint256 deadline , address exchange_addr ) exter\n    function  tokenToExchangeTransferInput (uint256 tokens_sold , uint256 min_tokens_bought , uint256 min_eth_bought , uint256 deadline , address recipient , addre\n    function  tokenToExchangeSwapOutput (uint256 tokens_bought , uint256 max_tokens_sold , uint256 max_eth_sold , uint256 deadline , address exchange_addr ) extern\n    function  tokenToExchangeTransferOutput (uint256 tokens_bought , uint256 max_tokens_sold , uint256 max_eth_sold , uint256 deadline , address recipient , addres\n    // ERC20 comaptibility for liquidity tokens", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2ef87340c904", "text": "// ERC20 comaptibility for liquidity tokens\n    bytes32 public name;\n    bytes32 public symbol;\n    uint256 public decimals ;\n    function  transfer (address _to, uint256 _value) external  returns (bool);\n    function  transferFrom (address _from, address _to, uint256 value) external  returns (bool);\n    function  approve(address _spender , uint256 _value) external  returns (bool);\n    function  allowance (address _owner, address _spender ) external  view returns (uint256);\n    function  balanceOf (address _owner) external  view returns (uint256);\n    function  totalSupply () external  view returns (uint256);\n    // Never use\n    function  setup(address token_addr ) external ;\n}\nCopy\nVyper  \ncontract UniswapExchangeInterface ():", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "129bbefce18a", "text": "// Never use\n    function  setup(address token_addr ) external ;\n}\nCopy\nVyper  \ncontract UniswapExchangeInterface ():\n    # Public Variables\n    def tokenAddress () -> address : constant\n    def factoryAddress () -> address : constant\n    # Providing Liquidity\n    def addLiquidity (min_liquidity : uint256 , max_tokens : uint256 , deadline : timestamp ) -> uint256 : modifying\n    def removeLiquidity (amount: uint256 , min_eth : uint256 (wei), min_tokens : uint256 , deadline : timestamp ) -> (uint256(wei), uint256 ): modifying\n    # Trading\n    def ethToTokenSwapInput (min_tokens : uint256 , deadline : timestamp ) -> uint256 : modifying", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7ff2820805da", "text": "# Trading\n    def ethToTokenSwapInput (min_tokens : uint256 , deadline : timestamp ) -> uint256 : modifying\n    def ethToTokenTransferInput (min_tokens : uint256 , deadline : timestamp , recipient : address ) -> uint256 : modifying\n    def ethToTokenSwapOutput (tokens_bought : uint256 , deadline : timestamp ) -> uint256 (wei): modifying\n    def ethToTokenTransferOutput (tokens_bought : uint256 , deadline : timestamp , recipient : address ) -> uint256 (wei): modifying\n    def tokenToEthSwapInput (tokens_sold : uint256 , min_eth : uint256 (wei), deadline : timestamp ) -> uint256 (wei): modifying", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dbcc100eac33", "text": "def tokenToEthSwapInput (tokens_sold : uint256 , min_eth : uint256 (wei), deadline : timestamp ) -> uint256 (wei): modifying\n    def tokenToEthTransferInput (tokens_sold : uint256 , min_eth : uint256 (wei), deadline : timestamp , recipient : address ) -> uint256 (wei): modifying\n    def tokenToEthSwapOutput (eth_bought : uint256 (wei), max_tokens : uint256 , deadline : timestamp ) -> uint256 : modifying\n    def tokenToEthTransferOutput (eth_bought : uint256 (wei), max_tokens : uint256 , deadline : timestamp , recipient : address ) -> uint256 : modifying", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0800fe05fdb5", "text": "def tokenToEthTransferOutput (eth_bought : uint256 (wei), max_tokens : uint256 , deadline : timestamp , recipient : address ) -> uint256 : modifying\n    def tokenToTokenSwapInput (tokens_sold : uint256 , min_tokens_bought : uint256 , min_eth_bought : uint256 (wei), deadline : timestamp , token_addr : address ) -> u\n    def tokenToTokenTransferInput (tokens_sold : uint256 , min_tokens_bought : uint256 , min_eth_bought : uint256 (wei), deadline : timestamp , recipient : address , t\n    def tokenToTokenSwapOutput (tokens_bought : uint256 , max_tokens_sold : uint256 , max_eth_sold : uint256 (wei), deadline : timestamp , token_addr : address ) -> ui", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "af3f62121e5e", "text": "def tokenToTokenTransferOutput (tokens_bought : uint256 , max_tokens_sold : uint256 , max_eth_sold : uint256 (wei), deadline : timestamp , recipient : address , to\n    def tokenToExchangeSwapInput (tokens_sold : uint256 , min_tokens_bought : uint256 , min_eth_bought : uint256 (wei), deadline : timestamp , exchange_addr : address\n    def tokenToExchangeTransferInput (tokens_sold : uint256 , min_tokens_bought : uint256 , min_eth_bought : uint256 (wei), deadline : timestamp , recipient : address\n    def tokenToExchangeSwapOutput (tokens_bought : uint256 , max_tokens_sold : uint256 , max_eth_sold : uint256 (wei), deadline : timestamp , exchange_addr : address )", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b8b20885be2", "text": "def tokenToExchangeSwapOutput (tokens_bought : uint256 , max_tokens_sold : uint256 , max_eth_sold : uint256 (wei), deadline : timestamp , exchange_addr : address )\n    def tokenToExchangeTransferOutput (tokens_bought : uint256 , max_tokens_sold : uint256 , max_eth_sold : uint256 (wei), deadline : timestamp , recipient : address ,\n    # Get Price\n    def getEthToTokenInputPrice (eth_sold : uint256 (wei)) -> uint256 : constant\n    def getEthToTokenOutputPrice (tokens_bought : uint256 ) -> uint256 (wei): constant\n    def getTokenToEthInputPrice (tokens_sold : uint256 ) -> uint256 (wei): constant", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fba0bf5242c4", "text": "def getTokenToEthInputPrice (tokens_sold : uint256 ) -> uint256 (wei): constant\n    def getTokenToEthOutputPrice (eth_bought : uint256 (wei)) -> uint256 : constant\n    # Pool Token ERC20 Compatibility\n    def balanceOf () -> address : constant\n    def allowance (_owner : address , _spender : address ) -> uint256 : constant\n    def transfer (_to : address , _value : uint256 ) -> bool: modifying\n    def transferFrom (_from : address , _to : address , _value : uint256 ) -> bool: modifying\n    def approve(_spender : address , _value : uint256 ) -> bool: modifying\n    # Setup\n    def setup(token_addr : address ): modifying\nCopy\nERC20 Token\nSolidity", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46938958be26", "text": "# Setup\n    def setup(token_addr : address ): modifying\nCopy\nERC20 Token\nSolidity  \ninterface  ERC20Interface  {\n    function  totalSupply () public view returns (uint);\n    function  balanceOf (address tokenOwner ) public view returns (uint balance );\n    function  allowance (address tokenOwner , address spender ) public view returns (uint remaining );\n    function  transfer (address to, uint tokens) public returns (bool success );\n    function  approve(address spender , uint tokens) public returns (bool success );", "metadata": {"page_number": 336, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ef08600b77df", "text": "function  transferFrom (address from, address to, uint tokens) public returns (bool success );\n    // optional\n    function  name() external  view returns (string);\n    function  symbol() external  view returns (string);\n    function  decimals () external  view returns (string);\n    event Transfer (address indexed from, address indexed to, uint tokens);\n    event Approval (address indexed tokenOwner , address indexed spender , uint tokens);\n}\nCopy\nVyper  \ncontract ERC20Interface ():\n    def totalSupply () -> uint256 : constant\n    def balanceOf (_owner: address ) -> uint256 : constant\n    def allowance (_owner : address , _spender : address ) -> uint256 : constant\n    def transfer (_to : address , _value : uint256 ) -> bool: modifying", "metadata": {"page_number": 337, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6a41e5703dda", "text": "def allowance (_owner : address , _spender : address ) -> uint256 : constant\n    def transfer (_to : address , _value : uint256 ) -> bool: modifying\n    def approve(_spender : address , _value : uint256 ) -> bool: modifying\n    def transferFrom (_from : address , _to : address , _value : uint256 ) -> bool: modifying\n    # optional\n    def name() -> bytes32 : constant\n    def symbol() -> bytes32 : constant\n    def decimals () -> uint256 : constant\nCopy\nEdit this page\nHelpful?\nPrevious\nExchange\nSolidity\nVyper\nSolidity\nVyper\nSolidity\nVyper\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 337, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d122a873cc84", "text": "Solidity\nVyper\nSolidity\nVyper\nSolidity\nVyper\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 337, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b645cb30be1", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 338, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0260149cd15", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 338, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7461fc21d574", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIPeripheryImmutableStateHelpful?\nOn this page\nIPeripheryImmutableState\nFunctions that return immutable state of the router\nFunctions  \nfactory \n  function  factory(\n  ) external  returns (address)\nCopy\nReturn Values:  \nType Description\naddress the address of the Uniswap V3 factory\nWETH9 \n  function  WETH9(\n  ) external  returns (address)\nCopy\nReturn Values:  \nType Description\naddress the address of WETH9\nEdit this page\nHelpful?\nPrevious\nINonfungibleT okenPositionDescriptor\nNext\nIPeripheryPayments\nFunctions", "metadata": {"page_number": 339, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4ecddbbdad3f", "text": "address the address of WETH9\nEdit this page\nHelpful?\nPrevious\nINonfungibleT okenPositionDescriptor\nNext\nIPeripheryPayments\nFunctions\nfactory\nWETH9\nDevelopers\nFeedback", "metadata": {"page_number": 339, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d5e57079f765", "text": "Bug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 340, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c191b4bc252b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 341, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9cab8f01dee5", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 341, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8dece721f6b2", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIPeripheryPaymentsHelpful?\nOn this page\nIPeripheryPayments\nFunctions to ease deposits and withdrawals of ETH\nFunctions  \nunwrapWETH9 \n  function  unwrapWETH9 (\n    uint256 amountMinimum ,\n    address recipient\n  ) external\nCopy\nUnwraps the contract's WETH9 balance and sends it to recipient as ETH.\nThe amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\nParameters:  \nName Type Description\namountMinimum uint256 The minimum amount of WETH9 to unwrap\nrecipient address The address receiving ETH\nrefundETH \n  function  refundETH (\n  ) external\nCopy", "metadata": {"page_number": 342, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cea6bd25becc", "text": "amountMinimum uint256 The minimum amount of WETH9 to unwrap\nrecipient address The address receiving ETH\nrefundETH \n  function  refundETH (\n  ) external\nCopy\nRefunds any ETH balance held by this contract to the msg.sender\nUseful for bundling with mint or increase liquidity that uses ether , or exact output swaps that use ether for the input amount\nsweepToken \n  function  sweepToken (\n    address token,\n    uint256 amountMinimum ,\n    address recipient\n  ) external\nCopy\nTransfers the full amount of a token held by this contract to recipient", "metadata": {"page_number": 342, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "71b56c6aed05", "text": "The amountMinimum parameter prevents malicious contracts from stealing the token from users\nParameters:  \nName Type Description\ntoken address The contract address of the token which will be transferred to recipient\namountMinimum uint256 The minimum amount of token required for a transfer\nrecipient address The destination address of the token\nEdit this page\nHelpful?\nPrevious\nIPeripheryImmutableState\nNext\nIPeripheryPaymentsW ithFee\nFunctions\nunwrapWETH9\nrefundETH\nsweepT oken\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 343, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a098fd3f3e72", "text": "Github\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 343, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9012c9209a4d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 344, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "635478a7fe9e", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 344, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0eb46d1fc20", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIPeripheryPaymentsW ithFeeHelpful?\nOn this page\nIPeripheryPaymentsW ithFee\nFunctions to ease deposits and withdrawals of ETH\nFunctions  \nunwrapWETH9WithFee \n  function  unwrapWETH9WithFee (\n  ) external\nCopy\nUnwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1\n(inclusive) going to feeRecipient\nThe amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\nsweepTokenWithFee \n  function  sweepTokenWithFee (\n  ) external\nCopy", "metadata": {"page_number": 345, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f80c34444b52", "text": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\nsweepTokenWithFee \n  function  sweepTokenWithFee (\n  ) external\nCopy\nTransfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1\n(inclusive) going to feeRecipient\nThe amountMinimum parameter prevents malicious contracts from stealing the token from users\nEdit this page\nHelpful?\nPrevious\nIPeripheryPayments\nNext\nIPoolInitializer\nFunctions\nunwrapWETH9W ithFee\nsweepT okenW ithFee\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 345, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6eb1214dec40", "text": "Whitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 346, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c755d1b649b2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 347, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2846d43acc0a", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 347, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1747e758f790", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIPoolInitializerHelpful?\nOn this page\nIPoolInitializer\nProvides a method for creating and initializing a pool, if necessary , for bundling with other methods that require the pool to\nexist.\nFunctions  \ncreateAndInitializePoolIfNecessary \n  function  createAndInitializePoolIfNecessary (\n    address token0,\n    address token1,\n    uint24 fee,\n    uint160 sqrtPriceX96\n  ) external  returns (address pool)\nCopy\nCreates a new pool if it does not exist, then initializes if not initialized\nThis method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\nParameters:  \nName Type Description", "metadata": {"page_number": 348, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "383d100c957b", "text": "Creates a new pool if it does not exist, then initializes if not initialized\nThis method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\nParameters:  \nName Type Description\ntoken0 address The contract address of token0 of the pool\ntoken1 address The contract address of token1 of the pool\nfee uint24 The fee amount of the v3 pool for the specified token pair\nsqrtPriceX96 uint160 The initial square root price of the pool as a Q64.96 value\nReturn Values:  \nName Type Description\npool addressReturns the pool address based on the pair of tokens and fee, will return the newly created pool address if\nnecessary\nEdit this page\nHelpful?\nPrevious\nIPeripheryPaymentsW ithFee\nNext\nIQuoter", "metadata": {"page_number": 348, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e134b9025461", "text": "Functions\ncreateAndInitializePoolIfNecessary\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 349, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b35d91c28958", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 350, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "34087a32be50", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 350, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a579c4d873d1", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIQuoterHelpful?\nOn this page\nIQuoter\nSupports quoting the calculated amounts from exact input or exact output swaps\nThese functions are not marked view because they rely on calling non-view functions and reverting to compute the result.\nThey are also not gas ef ficient and should not be called on-chain.\nFunctions  \nquoteExactInput \n  function  quoteExactInput (\n    bytes path,\n    uint256 amountIn\n  ) external  returns (uint256 amountOut )\nCopy\nReturns the amount out received for a given exact input swap without executing the swap\nParameters:  \nName Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee", "metadata": {"page_number": 351, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9a0cac89f9b1", "text": "Copy\nReturns the amount out received for a given exact input swap without executing the swap\nParameters:  \nName Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee\namountIn uint256 The amount of the first token to swap\nReturn Values:  \nName Type Description\namountOut uint256 The amount of the last token that would be received\nquoteExactInputSingle \n  function  quoteExactInputSingle (\n    address tokenIn ,\n    address tokenOut ,\n    uint24 fee,\n    uint256 amountIn ,\n    uint160 sqrtPriceLimitX96\n  ) external  returns (uint256 amountOut )\nCopy\nReturns the amount out received for a given exact input but for a swap of a single pool", "metadata": {"page_number": 351, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "da6267c09336", "text": "Parameters:  \nName Type Description\ntokenIn address The token being swapped in\ntokenOut address The token being swapped out\nfee uint24 The fee of the token pool to consider for the pair\namountIn uint256 The desired input amount\nsqrtPriceLimitX96 uint160 The price limit of the pool that cannot be exceeded by the swap\nReturn Values:  \nName Type Description\namountOut uint256 The amount of tokenOut  that would be received\nquoteExactOutput \n  function  quoteExactOutput (\n    bytes path,\n    uint256 amountOut\n  ) external  returns (uint256 amountIn )\nCopy\nReturns the amount in required for a given exact output swap without executing the swap\nParameters:  \nName Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee", "metadata": {"page_number": 352, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "31c28dc723ff", "text": "Copy\nReturns the amount in required for a given exact output swap without executing the swap\nParameters:  \nName Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee\namountOut uint256 The amount of the last token to receive\nReturn Values:  \nName Type Description\namountIn uint256 The amount of first token required to be paid\nquoteExactOutputSingle \n  function  quoteExactOutputSingle (\n    address tokenIn ,\n    address tokenOut ,\n    uint24 fee,\n    uint256 amountOut ,\n    uint160 sqrtPriceLimitX96\n  ) external  returns (uint256 amountIn )\nCopy\nReturns the amount in required to receive the given exact output amount but for a swap of a single pool\nParameters:  \nName Type Description\ntokenIn address The token being swapped in", "metadata": {"page_number": 352, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a81e9549bef0", "text": "Name Type Description\ntokenOut address The token being swapped out\nfee uint24 The fee of the token pool to consider for the pair\namountOut uint256 The desired output amount\nsqrtPriceLimitX96 uint160 The price limit of the pool that cannot be exceeded by the swap\nReturn Values:  \nName Type Description\namountIn uint256 The amount required as the input for the swap in order to receive amountOut\nEdit this page\nHelpful?\nPrevious\nIPoolInitializer\nNext\nIQuoterV2\nFunctions\nquoteExactInput\nquoteExactInputSingle\nquoteExactOutput\nquoteExactOutputSingle\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 353, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "05828f16bd42", "text": "quoteExactOutputSingle\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 353, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2f4ba773b32e", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 354, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b175a102046", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces", "metadata": {"page_number": 354, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d5f92af6ce5", "text": "Deployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIQuoterV2Helpful?\nOn this page\nIQuoterV2\nSupports quoting the calculated amounts from exact input or exact output swaps. For each pool also tells you the number of initialized ticks crossed and the\nsqrt price of the pool after the swap.", "metadata": {"page_number": 354, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d95064ed3722", "text": "These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas ef ficient and\nshould not be called on-chain.\nFunctions  \nquoteExactInput \n  function  quoteExactInput (\n    bytes path,\n    uint256 amountIn\n  ) external  returns (uint256 amountOut , uint160[] sqrtPriceX96AfterList , uint32[] initializedTicksCrossedList , uint256 gasEstimate )\nCopy\nReturns the amount out received for a given exact input swap without executing the swap\nParameters:  \nName Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee\namountIn uint256 The amount of the first token to swap\nReturn Values:  \nName Type Description\namountOut bytes The amount of the last token that would be received", "metadata": {"page_number": 355, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f0b3bde13396", "text": "amountIn uint256 The amount of the first token to swap\nReturn Values:  \nName Type Description\namountOut bytes The amount of the last token that would be received\nsqrtPriceX96AfterList uint256 List of the sqrt price after the swap for each pool in the path\ninitializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\ngasEstimate The estimate of the gas that the swap consumes\nquoteExactInputSingle \n  function  quoteExactInputSingle (\n    struct IQuoterV2 .QuoteExactInputSingleParams params\n  ) external  returns (uint256 amountOut , uint160 sqrtPriceX96After , uint32 initializedTicksCrossed , uint256 gasEstimate )\nCopy\nReturns the amount out received for a given exact input but for a swap of a single pool\nParameters:", "metadata": {"page_number": 355, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a25b12d9a89c", "text": "Copy\nReturns the amount out received for a given exact input but for a swap of a single pool\nParameters:  \nName Type Description\nparams struct IQuoterV2.QuoteExactInputSingleParams The params for the quote, encoded as QuoteExactInputSingleParams\ntokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input\namount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\nReturn Values:  \nName Type Description\namountOut struct IQuoterV2.QuoteExactInputSingleParams The amount of tokenOut  that would be received\nsqrtPriceX96After The sqrt price of the pool after the swap\ninitializedTicksCrossed The number of initialized ticks that the swap crossed\ngasEstimate The estimate of the gas that the swap consumes", "metadata": {"page_number": 355, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5367da436e5e", "text": "sqrtPriceX96After The sqrt price of the pool after the swap\ninitializedTicksCrossed The number of initialized ticks that the swap crossed\ngasEstimate The estimate of the gas that the swap consumes\nquoteExactOutput \n  function  quoteExactOutput (\n    bytes path,\n    uint256 amountOut\n  ) external  returns (uint256 amountIn , uint160[] sqrtPriceX96AfterList , uint32[] initializedTicksCrossedList , uint256 gasEstimate )\nCopy\nReturns the amount in required for a given exact output swap without executing the swap\nParameters:", "metadata": {"page_number": 355, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1085672b9435", "text": "Name Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\namountOut uint256 The amount of the last token to receive\nReturn Values:  \nName Type Description\namountIn bytes The amount of first token required to be paid\nsqrtPriceX96AfterList uint256 List of the sqrt price after the swap for each pool in the path\ninitializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\ngasEstimate The estimate of the gas that the swap consumes\nquoteExactOutputSingle \n  function  quoteExactOutputSingle (\n    struct IQuoterV2 .QuoteExactOutputSingleParams params", "metadata": {"page_number": 356, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "71a570652ecf", "text": "gasEstimate The estimate of the gas that the swap consumes\nquoteExactOutputSingle \n  function  quoteExactOutputSingle (\n    struct IQuoterV2 .QuoteExactOutputSingleParams params\n  ) external  returns (uint256 amountIn , uint160 sqrtPriceX96After , uint32 initializedTicksCrossed , uint256 gasEstimate )\nCopy\nReturns the amount in required to receive the given exact output amount but for a swap of a single pool\nParameters:  \nName Type Description\nparams struct IQuoterV2.QuoteExactOutputSingleParams The params for the quote, encoded as QuoteExactOutputSingleParams\ntokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired\noutput amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap", "metadata": {"page_number": 356, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "65dae52a1724", "text": "tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired\noutput amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\nReturn Values:  \nName Type Description\namountIn struct IQuoterV2.QuoteExactOutputSingleParams The amount required as the input for the swap in order to receive amountOut\nsqrtPriceX96After The sqrt price of the pool after the swap\ninitializedTicksCrossed The number of initialized ticks that the swap crossed\ngasEstimate The estimate of the gas that the swap consumes\nEdit this page\nHelpful?\nPrevious\nIQuoter\nNext\nISelfPermit\nFunctions\nquoteExactInput\nquoteExactInputSingle\nquoteExactOutput", "metadata": {"page_number": 356, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eba0d65f7cee", "text": "Helpful?\nPrevious\nIQuoter\nNext\nISelfPermit\nFunctions\nquoteExactInput\nquoteExactInputSingle\nquoteExactOutput\nquoteExactOutputSingle\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 356, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bf5d67425cd0", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 357, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "51d89904ddfd", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 358, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9b6861189ebe", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 358, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e2b639ad6b5", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nISelfPermitHelpful?\nOn this page\nISelfPermit\nFunctionality to call permit on any EIP-2612-compliant token for use in the route\nFunctions  \nselfPermit \n  function  selfPermit (\n    address token,\n    uint256 value,\n    uint256 deadline ,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external\nCopy\nPermits this contract to spend a given token from msg.sender\nThe owner  is always msg.sender and the spender  is always address(this).\nParameters:  \nName Type Description\ntoken address The address of the token spent\nvalue uint256 The amount that can be spent of token", "metadata": {"page_number": 359, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "102e2feacec1", "text": "The owner  is always msg.sender and the spender  is always address(this).\nParameters:  \nName Type Description\ntoken address The address of the token spent\nvalue uint256 The amount that can be spent of token\ndeadline uint256 A timestamp, the current blocktime must be less than or equal to this timestamp\nv uint8 Must produce valid secp256k1 signature from the holder along with r and s\nr bytes32 Must produce valid secp256k1 signature from the holder along with v and s\ns bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nselfPermitIfNecessary \n  function  selfPermitIfNecessary (\n    address token,\n    uint256 value,\n    uint256 deadline ,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external", "metadata": {"page_number": 359, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7646ef584efb", "text": "address token,\n    uint256 value,\n    uint256 deadline ,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external\nCopy", "metadata": {"page_number": 359, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "be7bf412ab6b", "text": "Permits this contract to spend a given token from msg.sender\nThe owner  is always msg.sender and the spender  is always address(this). Can be used instead of #selfPermit to prevent calls\nfrom failing due to a frontrun of a call to #selfPermit\nParameters:  \nName Type Description\ntoken address The address of the token spent\nvalue uint256 The amount that can be spent of token\ndeadline uint256 A timestamp, the current blocktime must be less than or equal to this timestamp\nv uint8 Must produce valid secp256k1 signature from the holder along with r and s\nr bytes32 Must produce valid secp256k1 signature from the holder along with v and s\ns bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nselfPermitAllowed \n  function  selfPermitAllowed (\n    address token,\n    uint256 nonce,", "metadata": {"page_number": 360, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "002c8ca2fc7d", "text": "s bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nselfPermitAllowed \n  function  selfPermitAllowed (\n    address token,\n    uint256 nonce,\n    uint256 expiry,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external\nCopy\nPermits this contract to spend the sender's tokens for permit signatures that have the allowed  parameter\nThe owner  is always msg.sender and the spender  is always address(this)\nParameters:  \nName Type Description\ntoken address The address of the token spent\nnonce uint256 The current nonce of the owner\nexpiry uint256 The timestamp at which the permit is no longer valid\nv uint8 Must produce valid secp256k1 signature from the holder along with r and s", "metadata": {"page_number": 360, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "60c4da4aa0f4", "text": "nonce uint256 The current nonce of the owner\nexpiry uint256 The timestamp at which the permit is no longer valid\nv uint8 Must produce valid secp256k1 signature from the holder along with r and s\nr bytes32 Must produce valid secp256k1 signature from the holder along with v and s\ns bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nselfPermitAllowedIfNecessary \n  function  selfPermitAllowedIfNecessary (\n    address token,\n    uint256 nonce,\n    uint256 expiry,\n    uint8 v,\n    bytes32 r,\n    bytes32 s\n  ) external\nCopy\nPermits this contract to spend the sender's tokens for permit signatures that have the allowed  parameter", "metadata": {"page_number": 360, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dcbd02654187", "text": "The owner  is always msg.sender and the spender  is always address(this) Can be used instead of #selfPermitAllowed to\nprevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\nParameters:  \nName Type Description\ntoken address The address of the token spent\nnonce uint256 The current nonce of the owner\nexpiry uint256 The timestamp at which the permit is no longer valid\nv uint8 Must produce valid secp256k1 signature from the holder along with r and s\nr bytes32 Must produce valid secp256k1 signature from the holder along with v and s\ns bytes32 Must produce valid secp256k1 signature from the holder along with r and v\nEdit this page\nHelpful?\nPrevious\nIQuoterV2\nNext\nISwapRouter\nFunctions\nselfPermit", "metadata": {"page_number": 361, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0805a920087", "text": "Edit this page\nHelpful?\nPrevious\nIQuoterV2\nNext\nISwapRouter\nFunctions\nselfPermit\nselfPermitIfNecessary\nselfPermitAllowed\nselfPermitAllowedIfNecessary\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 361, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eb8fec113ed2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 362, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e57e6cf30158", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 362, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "709198d8c4fa", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nISwapRouterHelpful?\nOn this page\nISwapRouter\nFunctions for swapping tokens via Uniswap V3\nParameter  Structs  \nNote that fee is in hundredths of basis points (e.g. the fee for a pool at the 0.3% tier is 3000; the fee for a pool at the 0.01%\ntier is 100).\nExactInputSingleParams \n    struct ExactInputSingleParams  {\n        address tokenIn ;\n        address tokenOut ;\n        uint24 fee;\n        address recipient ;\n        uint256 deadline ;\n        uint256 amountIn ;\n        uint256 amountOutMinimum ;\n        uint160 sqrtPriceLimitX96 ;\n    }", "metadata": {"page_number": 363, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d4eef431a639", "text": "address recipient ;\n        uint256 deadline ;\n        uint256 amountIn ;\n        uint256 amountOutMinimum ;\n        uint160 sqrtPriceLimitX96 ;\n    }\nCopy\nExactInputParams \n   struct ExactInputParams  {\n        bytes path;\n        address recipient ;\n        uint256 deadline ;\n        uint256 amountIn ;\n        uint256 amountOutMinimum ;\n    }\nCopy\nExactOutputSingleParams \n    struct ExactOutputSingleParams  {\n        address tokenIn ;\n        address tokenOut ;\n        uint24 fee;\n        address recipient ;\n        uint256 deadline ;\n        uint256 amountOut ;\n        uint256 amountInMaximum ;", "metadata": {"page_number": 363, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "014ffb3a855a", "text": "address tokenIn ;\n        address tokenOut ;\n        uint24 fee;\n        address recipient ;\n        uint256 deadline ;\n        uint256 amountOut ;\n        uint256 amountInMaximum ;\n        uint160 sqrtPriceLimitX96 ;\n    }\nCopy", "metadata": {"page_number": 363, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3416934f0752", "text": "ExactOutputParams \n    struct ExactOutputParams  {\n        bytes path;\n        address recipient ;\n        uint256 deadline ;\n        uint256 amountOut ;\n        uint256 amountInMaximum ;\n    }\nCopy\nFunctions  \nexactInputSingle \n  function  exactInputSingle (\n    struct ISwapRouter .ExactInputSingleParams params\n  ) external  returns (uint256 amountOut )\nCopy\nSwaps amountIn  of one token for as much as possible of another token\nParameters:  \nName Type Description\nparamsstruct\nISwapRouter .ExactInputSingleParamsThe parameters necessary for the swap, encoded as\nExactInputSingleParams  in calldata\nReturn Values:  \nName Type Description", "metadata": {"page_number": 364, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3afb52bf4726", "text": "paramsstruct\nISwapRouter .ExactInputSingleParamsThe parameters necessary for the swap, encoded as\nExactInputSingleParams  in calldata\nReturn Values:  \nName Type Description\namountOut struct ISwapRouter .ExactInputSingleParams The amount of the received token\nexactInput \n  function  exactInput (\n    struct ISwapRouter .ExactInputParams params\n  ) external  returns (uint256 amountOut )\nCopy\nSwaps amountIn  of one token for as much as possible of another along the specified path\nParameters:  \nName Type Description\nparamsstruct\nISwapRouter .ExactInputParamsThe parameters necessary for the multi-hop swap, encoded as\nExactInputParams  in calldata\nReturn Values:  \nName Type Description", "metadata": {"page_number": 364, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a2d6a8497481", "text": "paramsstruct\nISwapRouter .ExactInputParamsThe parameters necessary for the multi-hop swap, encoded as\nExactInputParams  in calldata\nReturn Values:  \nName Type Description\namountOut struct ISwapRouter .ExactInputParams The amount of the received token", "metadata": {"page_number": 364, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b674dc4d87be", "text": "exactOutputSingle \n  function  exactOutputSingle (\n    struct ISwapRouter .ExactOutputSingleParams params\n  ) external  returns (uint256 amountIn )\nCopy\nSwaps as little as possible of one token for amountOut  of another token\nParameters:  \nName Type Description\nparamsstruct\nISwapRouter .ExactOutputSingleParamsThe parameters necessary for the swap, encoded as\nExactOutputSingleParams  in calldata\nReturn Values:  \nName Type Description\namountIn struct ISwapRouter .ExactOutputSingleParams The amount of the input token\nexactOutput \n  function  exactOutput (\n    struct ISwapRouter .ExactOutputParams params\n  ) external  returns (uint256 amountIn )\nCopy", "metadata": {"page_number": 365, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dde900dff3a0", "text": "exactOutput \n  function  exactOutput (\n    struct ISwapRouter .ExactOutputParams params\n  ) external  returns (uint256 amountIn )\nCopy\nSwaps as little as possible of one token for amountOut  of another along the specified path (reversed)\nParameters:  \nName Type Description\nparamsstruct\nISwapRouter .ExactOutputParamsThe parameters necessary for the multi-hop swap, encoded as\nExactOutputParams  in calldata\nReturn Values:  \nName Type Description\namountIn struct ISwapRouter .ExactOutputParams The amount of the input token\nEdit this page\nHelpful?\nPrevious\nISelfPermit\nNext\nITickLens\nParameter Structs\nExactInputSingleParams\nExactInputParams", "metadata": {"page_number": 365, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac00267c586c", "text": "Helpful?\nPrevious\nISelfPermit\nNext\nITickLens\nParameter Structs\nExactInputSingleParams\nExactInputParams\nExactOutputSingleParams\nExactOutputParams", "metadata": {"page_number": 365, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a388b0697f09", "text": "Functions\nexactInputSingle\nexactInput\nexactOutputSingle\nexactOutput\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 366, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33a2f399654f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 367, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1e1d0fdd74b5", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 367, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "493012540815", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nITickLensHelpful?\nOn this page\nITickLens\nProvides functions for fetching chunks of tick data for a pool\nThis avoids the waterfall of fetching the tick bitmap, parsing the bitmap to know which ticks to fetch, and then sending\nadditional multicalls to fetch the tick data\nFunctions  \ngetPopulatedTicksInWord \n  function  getPopulatedTicksInWord (\n    address pool,\n    int16 tickBitmapIndex\n  ) external  returns (struct ITickLens .PopulatedTick [] populatedTicks )\nCopy\nGet all the tick data for the populated ticks from a word of the tick bitmap of a pool\nParameters:  \nName Type Description\npool address The address of the pool for which to fetch populated tick data", "metadata": {"page_number": 368, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3f299438efbd", "text": "Copy\nGet all the tick data for the populated ticks from a word of the tick bitmap of a pool\nParameters:  \nName Type Description\npool address The address of the pool for which to fetch populated tick data\ntickBitmapIndex int16The index of the word in the tick bitmap for which to parse the bitmap and fetch all the\npopulated ticks\nReturn Values:  \nName Type Description\npopulatedTicks ITickLens.PopulatedT ick[] An array of tick data for the given word in the tick bitmap\nEdit this page\nHelpful?\nPrevious\nISwapRouter\nNext\nIV3Migrator\nFunctions\ngetPopulatedT icksInW ord\nDevelopers\nFeedback", "metadata": {"page_number": 368, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "af5d35caebbd", "text": "Bug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 369, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8585c8377ab6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses", "metadata": {"page_number": 370, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dfd6dc36837c", "text": "IUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nIUniswapV3FactoryHelpful?\nOn this page\nIUniswapV3Factory\nThe Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees", "metadata": {"page_number": 370, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "11d6d5871fc9", "text": "Functions  \nowner \n  function  owner(\n  ) external  view returns (address)\nCopy\nReturns the current owner of the factory\nCan be changed by the current owner via setOwner\nReturn Values:  \nType Description\naddress address of the factory owner\nfeeAmountTickSpacing \n  function  feeAmountTickSpacing (\n    uint24 fee\n  ) external  view returns (int24)\nCopy\nReturns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\nA fee amount can never be removed, so this value should be hard coded or cached in the calling context\nParameters:  \nName Type Description\nfee uint24 The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\nReturn Values:  \nTypeDescription\nint24 tick spacing\ngetPool", "metadata": {"page_number": 371, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e34b9bb408ae", "text": "fee uint24 The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\nReturn Values:  \nTypeDescription\nint24 tick spacing\ngetPool \n  function  getPool(\n    address tokenA,\n    address tokenB,\n    uint24 fee\n  ) external  view returns (address pool)\nCopy\nReturns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\ntokenA  and tokenB may be passed in either token0/token1 or token1/token0 order\nParameters:", "metadata": {"page_number": 371, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8642391e2220", "text": "Name Type Description\ntokenA address The contract address of either token0 or token1\ntokenB address The contract address of the other token\nfee uint24 The fee collected upon every swap in the pool, denominated in hundredths of a bip\nReturn Values:  \nName Type Description\npool address The pool address\ncreatePool \n  function  createPool (\n    address tokenA,\n    address tokenB,\n    uint24 fee\n  ) external  returns (address pool)\nCopy\nCreates a pool for the given two tokens and fee\ntokenA  and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee.\nThe call will revert if the pool already exists, the fee is invalid, or the token ar guments are invalid.\nParameters:  \nName Type Description\ntokenA address One of the two tokens in the desired pool", "metadata": {"page_number": 372, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b5b1a636d750", "text": "The call will revert if the pool already exists, the fee is invalid, or the token ar guments are invalid.\nParameters:  \nName Type Description\ntokenA address One of the two tokens in the desired pool\ntokenB address The other of the two tokens in the desired pool\nfee uint24 The desired fee for the pool\nReturn Values:  \nName Type Description\npool address The address of the newly created pool\nsetOwner \n  function  setOwner (\n    address _owner\n  ) external\nCopy\nUpdates the owner of the factory\nMust be called by the current owner\nParameters:  \nName Type Description\n_owner address The new owner of the factory", "metadata": {"page_number": 372, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7b1fefa8ccd0", "text": "enableFeeAmount \n  function  enableFeeAmount (\n    uint24 fee,\n    int24 tickSpacing\n  ) external\nCopy\nEnables a fee amount with the given tickSpacing\nFee amounts may never be removed once enabled\nParameters:  \nName Type Description\nfee uint24 The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\ntickSpacing int24 The spacing between ticks to be enforced for all pools created with the given fee amount\nEvents  \nOwnerChanged \n  event OwnerChanged (\n    address oldOwner ,\n    address newOwner\n  )\nCopy\nEmitted when the owner of the factory is changed\nParameters:  \nName Type Description\noldOwner address The owner before the owner was changed\nnewOwner address The owner after the owner was changed\nPoolCreated", "metadata": {"page_number": 373, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "92d3801dacec", "text": "Emitted when the owner of the factory is changed\nParameters:  \nName Type Description\noldOwner address The owner before the owner was changed\nnewOwner address The owner after the owner was changed\nPoolCreated \n  event PoolCreated (\n    address token0,\n    address token1,\n    uint24 fee,\n    int24 tickSpacing ,\n    address pool\n  )\nCopy\nEmitted when a pool is created\nParameters:  \nName Type Description\ntoken0 address The first token of the pool by address sort order\ntoken1 address The second token of the pool by address sort order", "metadata": {"page_number": 373, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b751112e1f1", "text": "Name Type Description\nfee uint24 The fee collected upon every swap in the pool, denominated in hundredths of a bip\ntickSpacing int24 The minimum number of ticks between initialized ticks\npool address The address of the created pool\nFeeAmountEnabled \n  event FeeAmountEnabled (\n    uint24 fee,\n    int24 tickSpacing\n  )\nCopy\nEmitted when a new fee amount is enabled for pool creation via the factory\nParameters:  \nName Type Description\nfee uint24 The enabled fee, denominated in hundredths of a bip\ntickSpacing int24 The minimum number of ticks between initialized ticks for pools created with the given fee\nEdit this page\nHelpful?\nPrevious\nIERC20Minimal\nNext\nIUniswapV3Pool\nFunctions\nowner", "metadata": {"page_number": 374, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a8126d32a760", "text": "Edit this page\nHelpful?\nPrevious\nIERC20Minimal\nNext\nIUniswapV3Pool\nFunctions\nowner\nfeeAmountT ickSpacing\ngetPool\ncreatePool\nsetOwner\nenableFeeAmount\nEvents\nOwnerChanged\nPoolCreated\nFeeAmountEnabled\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 374, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b44c1fe1f2b7", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 375, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9c13e91b1736", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nIUniswapV3FlashCallback", "metadata": {"page_number": 376, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7fd8a75a78d8", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nIUniswapV3FlashCallback\nIUniswapV3MintCallback\nIUniswapV3SwapCallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\ncallback\nIUniswapV3FlashCallbackHelpful?\nOn this page", "metadata": {"page_number": 376, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a100a34a7a50", "text": "IUniswapV3FlashCallback\nAny contract that calls IUniswapV3PoolActions#flash must implement this interface\nFunctions  \nuniswapV3FlashCallback \n  function  uniswapV3FlashCallback (\n    uint256 fee0,\n    uint256 fee1,\n    bytes data\n  ) external\nCopy\nCalled to msg.sender  after transferring to the recipient from IUniswapV3Pool#flash.\nIn the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this\nmethod must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory .\nParameters:  \nName Type Description\nfee0 uint256 The fee amount in token0 due to the pool by the end of the flash", "metadata": {"page_number": 377, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "49bf1a060aab", "text": "Parameters:  \nName Type Description\nfee0 uint256 The fee amount in token0 due to the pool by the end of the flash\nfee1 uint256 The fee amount in token1 due to the pool by the end of the flash\ndata bytes Any data passed through by the caller via the IUniswapV3PoolActions#flash call\nEdit this page\nHelpful?\nPrevious\nIUniswapV3PoolDeployer\nNext\nIUniswapV3MintCallback\nFunctions\nuniswapV3FlashCallback\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 377, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d78df6d5d9d9", "text": "Github\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 377, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a862257bd9f6", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 378, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "70cd647a82dc", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nIUniswapV3FlashCallback", "metadata": {"page_number": 379, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cc70a30a00f6", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nIUniswapV3FlashCallback\nIUniswapV3MintCallback\nIUniswapV3SwapCallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\ncallback\nIUniswapV3MintCallbackHelpful?\nOn this page", "metadata": {"page_number": 379, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "474916df5561", "text": "IUniswapV3MintCallback\nAny contract that calls IUniswapV3PoolActions#mint must implement this interface\nFunctions  \nuniswapV3MintCallback \n  function  uniswapV3MintCallback (\n    uint256 amount0Owed ,\n    uint256 amount1Owed ,\n    bytes data\n  ) external\nCopy\nCalled to msg.sender  after minting liquidity to a position from IUniswapV3Pool#mint.\nIn the implementation you must pay the pool tokens owed for the minted liquidity . The caller of this method must be\nchecked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory .\nParameters:  \nName Type Description\namount0Owed uint256 The amount of token0 due to the pool for the minted liquidity", "metadata": {"page_number": 380, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "40c61b8d796f", "text": "checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory .\nParameters:  \nName Type Description\namount0Owed uint256 The amount of token0 due to the pool for the minted liquidity\namount1Owed uint256 The amount of token1 due to the pool for the minted liquidity\ndata bytes Any data passed through by the caller via the IUniswapV3PoolActions#mint call\nEdit this page\nHelpful?\nPrevious\nIUniswapV3FlashCallback\nNext\nIUniswapV3SwapCallback\nFunctions\nuniswapV3MintCallback\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 380, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e8e46efc7d6d", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 380, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4412a5600844", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 381, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "50eeb9679fe9", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nLibraries\nGovernance\nPeriphery", "metadata": {"page_number": 382, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac23c610d68f", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nIUniswapV3PoolHelpful?\nIUniswapV3Pool\nA Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the\nERC20 specification", "metadata": {"page_number": 382, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7761815d4bbd", "text": "The pool interface is broken up into many smaller pieces\nEdit this page\nHelpful?\nPrevious\nIUniswapV3Factory\nNext\nIUniswapV3PoolDeployer\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 383, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "076801647f6a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions", "metadata": {"page_number": 384, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e0c5b36f52c7", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions\nIUniswapV3PoolDerivedState\nIUniswapV3PoolEvents\nIUniswapV3PoolImmutables\nIUniswapV3PoolOwnerActions\nIUniswapV3PoolState\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nPoolHelpful?", "metadata": {"page_number": 384, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9a77b2579c0d", "text": "IUniswapV3PoolActions\nOn this page\nIUniswapV3PoolActions\nContains pool methods that can be called by anyone\nFunctions  \ninitialize \n  function  initialize (\n    uint160 sqrtPriceX96\n  ) external\nCopy\nSets the initial price for the pool\nPrice is represented as a sqrt(amountT oken1/amountT oken0) Q64.96 value\nParameters:  \nName Type Description\nsqrtPriceX96 uint160 the initial sqrt price of the pool as a Q64.96\nmint \n  function  mint(\n    address recipient ,\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount,\n    bytes data\n  ) external  returns (uint256 amount0 , uint256 amount1 )\nCopy", "metadata": {"page_number": 385, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3ba842adb35d", "text": "int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount,\n    bytes data\n  ) external  returns (uint256 amount0 , uint256 amount1 )\nCopy\nAdds liquidity for the given recipient/tickLower/tickUpper position\nThe caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which\nthey must pay any token0 or token1 owed for the liquidity . The amount of token0/token1 due depends on tickLower ,\ntickUpper , the amount of liquidity , and the current price.\nParameters:  \nName Type Description\nrecipient address The address for which the liquidity will be created\ntickLower int24 The lower tick of the position in which to add liquidity\ntickUpper int24 The upper tick of the position in which to add liquidity", "metadata": {"page_number": 385, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "536974cbf67c", "text": "Name Type Description\nrecipient address The address for which the liquidity will be created\ntickLower int24 The lower tick of the position in which to add liquidity\ntickUpper int24 The upper tick of the position in which to add liquidity\namount uint128 The amount of liquidity to mint\ndata bytes Any data that should be passed through to the callback\nReturn Values:", "metadata": {"page_number": 385, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cb39f92ddfd4", "text": "Name Type Description\namount0 uint256The amount of token0 that was paid to mint the given amount of liquidity . Matches the value in the\ncallback\namount1 uint256The amount of token1 that was paid to mint the given amount of liquidity . Matches the value in the\ncallback\ncollect \n  function  collect(\n    address recipient ,\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount0Requested ,\n    uint128 amount1Requested\n  ) external  returns (uint128 amount0 , uint128 amount1 )\nCopy\nCollects tokens owed to a position\nDoes not recompute fees earned, which must be done either via mint or burn of any amount of liquidity . Collect must be\ncalled by the position owner . To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set", "metadata": {"page_number": 386, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7d9f5ed7013a", "text": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity . Collect must be\ncalled by the position owner . To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set\nto zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max.\nTokens owed may be from accumulated swap fees or burned liquidity .\nParameters:  \nName Type Description\nrecipient address The address which should receive the fees collected\ntickLower int24 The lower tick of the position for which to collect fees\ntickUpper int24 The upper tick of the position for which to collect fees\namount0Requested uint128 How much token0 should be withdrawn from the fees owed\namount1Requested uint128 How much token1 should be withdrawn from the fees owed\nReturn Values:  \nName Type Description", "metadata": {"page_number": 386, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "09cbdf60afbe", "text": "amount0Requested uint128 How much token0 should be withdrawn from the fees owed\namount1Requested uint128 How much token1 should be withdrawn from the fees owed\nReturn Values:  \nName Type Description\namount0 uint128 The amount of fees collected in token0\namount1 uint128 The amount of fees collected in token1\nburn \n  function  burn(\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount\n  ) external  returns (uint256 amount0 , uint256 amount1 )\nCopy\nBurn liquidity from the sender and account tokens owed for the liquidity to the position\nCan be used to trigger a recalculation of fees owed to a position by calling with an amount of 0 Fees must be collected\nseparately via a call to #collect\nParameters:", "metadata": {"page_number": 386, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3e39dc308533", "text": "Name Type Description\ntickLower int24 The lower tick of the position for which to burn liquidity\ntickUpper int24 The upper tick of the position for which to burn liquidity\namount uint128 How much liquidity to burn\nReturn Values:  \nName Type Description\namount0 uint256 The amount of token0 sent to the recipient\namount1 uint256 The amount of token1 sent to the recipient\nswap \n  function  swap(\n    address recipient ,\n    bool zeroForOne ,\n    int256 amountSpecified ,\n    uint160 sqrtPriceLimitX96 ,\n    bytes data\n  ) external  returns (int256 amount0 , int256 amount1 )\nCopy\nSwap token0 for token1, or token1 for token0", "metadata": {"page_number": 387, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "890d3e6b8649", "text": "uint160 sqrtPriceLimitX96 ,\n    bytes data\n  ) external  returns (int256 amount0 , int256 amount1 )\nCopy\nSwap token0 for token1, or token1 for token0\nThe caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\nParameters:  \nName Type Description\nrecipient address The address to receive the output of the swap\nzeroForOne bool The direction of the swap, true for token0 to token1, false for token1 to token0\namountSpecified int256The amount of the swap, which implicitly configures the swap as exact input (positive), or\nexact output (negative)\nsqrtPriceLimitX96 uint160The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the", "metadata": {"page_number": 387, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "61ed2cefe38a", "text": "exact output (negative)\nsqrtPriceLimitX96 uint160The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the\nswap. If one for zero, the price cannot be greater than this value after the swap\ndata bytes Any data passed through to the callback\nReturn Values:  \nName Type Description\namount0 int256 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\namount1 int256 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\nflash \n  function  flash(\n    address recipient ,\n    uint256 amount0 ,\n    uint256 amount1 ,\n    bytes data\n  ) external\nCopy", "metadata": {"page_number": 387, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "769d8dea66a0", "text": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback\nThe caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback Can be\nused to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and\nsending the donation amount(s) from the callback\nParameters:  \nName Type Description\nrecipient address The address which will receive the token0 and token1 amounts\namount0 uint256 The amount of token0 to send\namount1 uint256 The amount of token1 to send\ndata bytes Any data to be passed through to the callback\nincreaseObservationCardinalityNext \n  function  increaseObservationCardinalityNext (\n    uint16 observationCardinalityNext\n  ) external\nCopy", "metadata": {"page_number": 388, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e781a472b9c8", "text": "increaseObservationCardinalityNext \n  function  increaseObservationCardinalityNext (\n    uint16 observationCardinalityNext\n  ) external\nCopy\nIncrease the maximum number of price and liquidity observations that this pool will store\nThis method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input\nobservationCardinalityNext.\nParameters:  \nName Type Description\nobservationCardinalityNext uint16 The desired minimum number of observations for the pool to store\nEdit this page\nHelpful?\nPrevious\nIUniswapV3SwapCallback\nNext\nIUniswapV3PoolDerivedState\nFunctions\ninitialize\nmint\ncollect\nburn\nswap\nflash\nincreaseObservationCardinalityNext\nDevelopers", "metadata": {"page_number": 388, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c50200b72ace", "text": "Functions\ninitialize\nmint\ncollect\nburn\nswap\nflash\nincreaseObservationCardinalityNext\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 388, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5cfca45579cc", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 389, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46173568063f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses", "metadata": {"page_number": 390, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94b33527342b", "text": "IUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nIUniswapV3PoolDeployerHelpful?\nOn this page\nIUniswapV3PoolDeployer\nA contract that constructs a pool must implement this to pass ar guments to the pool", "metadata": {"page_number": 390, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cef2ad80a583", "text": "This is used to avoid having constructor ar guments in the pool contract, which results in the init code hash of the pool being\nconstant allowing the CREA TE2 address of the pool to be cheaply computed on-chain\nFunctions  \nparameters \n  function  parameters (\n  ) external  view returns (address factory , address token0, address token1, uint24 fee, int24 tickSpacing )\nCopy\nGet the parameters to be used in constructing the pool, set transiently during pool creation.\nReturn Values :  \nName Type Description\nfactory address The factory address\ntoken0 address The first token of the pool by address sort order\ntoken1 address The second token of the pool by address sort order\nfee uint24 The fee collected upon every swap in the pool, denominated in hundredths of a bip\ntickSpacing int24 The minimum number of ticks between initialized ticks\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 391, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "400db97ab6c4", "text": "fee uint24 The fee collected upon every swap in the pool, denominated in hundredths of a bip\ntickSpacing int24 The minimum number of ticks between initialized ticks\nEdit this page\nHelpful?\nPrevious\nIUniswapV3Pool\nNext\nIUniswapV3FlashCallback\nFunctions\nparameters\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 391, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "24d8e124d44d", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 392, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db7f1dcfffc6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions", "metadata": {"page_number": 393, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c1f789ed4a6f", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions\nIUniswapV3PoolDerivedState\nIUniswapV3PoolEvents\nIUniswapV3PoolImmutables\nIUniswapV3PoolOwnerActions\nIUniswapV3PoolState\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nPool\nIUniswapV3PoolDerivedStateHelpful?\nOn this page", "metadata": {"page_number": 393, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a7baf5ab10da", "text": "IUniswapV3PoolDerivedState\nContains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions\nhere may have variable gas costs.\nFunctions  \nobserve \n  function  observe(\n    uint32[] secondsAgos\n  ) external  view returns (int56[] tickCumulatives , uint160[] secondsPerLiquidityCumulativeX128s )\nCopy\nReturns the cumulative tick and liquidity as of each timestamp secondsAgo  from the current block timestamp\nTo get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the\nperiod and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos\n= [3600, 0] . The time weighted average tick represents the geometric time weighted average price of the pool, in log base", "metadata": {"page_number": 394, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5fcca6582142", "text": "= [3600, 0] . The time weighted average tick represents the geometric time weighted average price of the pool, in log base\nsqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\nParameters:  \nName Type Description\nsecondsAgos uint32[] From how long ago each cumulative tick and liquidity value should be returned\nReturn Values:  \nName Type Description\ntickCumulatives int56[]Cumulative tick values as of each secondsAgos  from the current block\ntimestamp\nsecondsPerLiquidityCumulativeX128s uint160[]Cumulative seconds per liquidity-in-range value as of each secondsAgos  from\nthe current block\ntimestamp\nsnapshotCumulativesInside \n  function  snapshotCumulativesInside (\n    int24 tickLower ,\n    int24 tickUpper", "metadata": {"page_number": 394, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4bdeeb8cb935", "text": "the current block\ntimestamp\nsnapshotCumulativesInside \n  function  snapshotCumulativesInside (\n    int24 tickLower ,\n    int24 tickUpper\n  ) external  returns (int56 tickCumulativeInside , uint160 secondsPerLiquidityInsideX128 , uint32 secondsInside )\nCopy\nReturns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\nSnapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be\ncompared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\nParameters:  \nName TypeDescription\ntickLower int24 The lower tick of the range\ntickUpper int24 The upper tick of the range\nReturn Values:", "metadata": {"page_number": 394, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8c2c8bd2c778", "text": "Name Type Description\ntickCumulativeInside int56 The snapshot of the tick accumulator for the range\nsecondsPerLiquidityInsideX128 uint160 The snapshot of seconds per liquidity for the range\nsecondsInside uint32 The snapshot of seconds per liquidity for the range\nEdit this page\nHelpful?\nPrevious\nIUniswapV3PoolActions\nNext\nIUniswapV3PoolEvents\nFunctions\nobserve\nsnapshotCumulativesInside\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 395, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a87bb05d137f", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 395, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c61f06d098f4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions", "metadata": {"page_number": 396, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8a57896b99d1", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions\nIUniswapV3PoolDerivedState\nIUniswapV3PoolEvents\nIUniswapV3PoolImmutables\nIUniswapV3PoolOwnerActions\nIUniswapV3PoolState\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nPoolHelpful?", "metadata": {"page_number": 396, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ca96910173b8", "text": "IUniswapV3PoolEvents\nOn this page\nIUniswapV3PoolEvents\nContains all events emitted by the pool\nEvents  \nInitialize \n  event Initialize (\n    uint160 sqrtPriceX96 ,\n    int24 tick\n  )\nCopy\nEmitted exactly once by a pool when #initialize is first called on the pool\nMint/Burn/Swap cannot be emitted by the pool before Initialize\nParameters:  \nName Type Description\nsqrtPriceX96 uint160 The initial sqrt price of the pool, as a Q64.96\ntick int24 The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\nMint \n  event Mint(\n    address sender,\n    address owner,\n    int24 tickLower ,\n    int24 tickUpper ,", "metadata": {"page_number": 397, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d981f042ac0", "text": "Mint \n  event Mint(\n    address sender,\n    address owner,\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount,\n    uint256 amount0 ,\n    uint256 amount1\n  )\nCopy\nEmitted when liquidity is minted for a given position\nParameters:  \nName Type Description\nsender address The address that minted the liquidity\nowner address The owner of the position and recipient of any minted liquidity\ntickLower int24 The lower tick of the position\ntickUpper int24 The upper tick of the position\namount uint128 The amount of liquidity minted to the position range\namount0 uint256 How much token0 was required for the minted liquidity\namount1 uint256 How much token1 was required for the minted liquidity", "metadata": {"page_number": 397, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c92bf436b80a", "text": "Collect \n  event Collect(\n    address owner,\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount0 ,\n    uint128 amount1\n  )\nCopy\nEmitted when fees are collected by the owner of a position\nCollect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\nParameters:  \nName Type Description\nowner address The owner of the position for which fees are collected\ntickLower int24 The lower tick of the position\ntickUpper int24 The upper tick of the position\namount0 uint128 The amount of token0 fees collected\namount1 uint128 The amount of token1 fees collected\nBurn \n  event Burn(\n    address owner,\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount,", "metadata": {"page_number": 398, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9b6c8031d123", "text": "amount1 uint128 The amount of token1 fees collected\nBurn \n  event Burn(\n    address owner,\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount,\n    uint256 amount0 ,\n    uint256 amount1\n  )\nCopy\nEmitted when a position's liquidity is removed\nDoes not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\nParameters:  \nName Type Description\nowner address The owner of the position for which liquidity is removed\ntickLower int24 The lower tick of the position\ntickUpper int24 The upper tick of the position\namount uint128 The amount of liquidity to remove\namount0 uint256 The amount of token0 withdrawn\namount1 uint256 The amount of token1 withdrawn\nSwap \n  event Swap(", "metadata": {"page_number": 398, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "92ff16b382c0", "text": "amount uint128 The amount of liquidity to remove\namount0 uint256 The amount of token0 withdrawn\namount1 uint256 The amount of token1 withdrawn\nSwap \n  event Swap(\n    address sender,\n    address recipient ,", "metadata": {"page_number": 398, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "39d1fcad51dc", "text": "int256 amount0 ,\n    int256 amount1 ,\n    uint160 sqrtPriceX96 ,\n    uint128 liquidity ,\n    int24 tick\n  )\nCopy\nEmitted by the pool for any swaps between token0 and token1\nParameters:  \nName Type Description\nsender address The address that initiated the swap call, and that received the callback\nrecipient address The address that received the output of the swap\namount0 int256 The delta of the token0 balance of the pool\namount1 int256 The delta of the token1 balance of the pool\nsqrtPriceX96 uint160 The sqrt(price) of the pool after the swap, as a Q64.96\nliquidity uint128 The liquidity of the pool after the swap\ntick int24 The log base 1.0001 of price of the pool after the swap\nFlash \n  event Flash(", "metadata": {"page_number": 399, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "89465b5b65dc", "text": "liquidity uint128 The liquidity of the pool after the swap\ntick int24 The log base 1.0001 of price of the pool after the swap\nFlash \n  event Flash(\n    address sender,\n    address recipient ,\n    uint256 amount0 ,\n    uint256 amount1 ,\n    uint256 paid0,\n    uint256 paid1\n  )\nCopy\nEmitted by the pool for any flashes of token0/token1\nParameters:  \nName Type Description\nsender address The address that initiated the swap call, and that received the callback\nrecipient address The address that received the tokens from flash\namount0 uint256 The amount of token0 that was flashed\namount1 uint256 The amount of token1 that was flashed\npaid0 uint256 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee", "metadata": {"page_number": 399, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "154c5704c0c7", "text": "amount0 uint256 The amount of token0 that was flashed\namount1 uint256 The amount of token1 that was flashed\npaid0 uint256 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\npaid1 uint256 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\nIncreaseObservationCardinalityNext \n  event IncreaseObservationCardinalityNext (\n    uint16 observationCardinalityNextOld ,\n    uint16 observationCardinalityNextNew\n  )\nCopy\nEmitted by the pool for increases to the number of observations that can be stored", "metadata": {"page_number": 399, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d69bb984249", "text": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a\nmint/swap/burn.\nParameters:  \nName Type Description\nobservationCardinalityNextOld uint16 The previous value of the next observation cardinality\nobservationCardinalityNextNew uint16 The updated value of the next observation cardinality\nSetFeeProtocol \n  event SetFeeProtocol (\n    uint8 feeProtocol0Old ,\n    uint8 feeProtocol1Old ,\n    uint8 feeProtocol0New ,\n    uint8 feeProtocol1New\n  )\nCopy\nEmitted when the protocol fee is changed by the pool\nParameters:  \nName TypeDescription\nfeeProtocol0Old uint8 The previous value of the token0 protocol fee", "metadata": {"page_number": 400, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "659e781ea740", "text": ")\nCopy\nEmitted when the protocol fee is changed by the pool\nParameters:  \nName TypeDescription\nfeeProtocol0Old uint8 The previous value of the token0 protocol fee\nfeeProtocol1Old uint8 The previous value of the token1 protocol fee\nfeeProtocol0New uint8 The updated value of the token0 protocol fee\nfeeProtocol1New uint8 The updated value of the token1 protocol fee\nCollectProtocol \n  event CollectProtocol (\n    address sender,\n    address recipient ,\n    uint128 amount0 ,\n    uint128 amount1\n  )\nCopy\nEmitted when the collected protocol fees are withdrawn by the factory owner\nParameters:  \nName Type Description\nsender address The address that collects the protocol fees\nrecipient address The address that receives the collected protocol fees", "metadata": {"page_number": 400, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2dc8cfa77761", "text": "Copy\nEmitted when the collected protocol fees are withdrawn by the factory owner\nParameters:  \nName Type Description\nsender address The address that collects the protocol fees\nrecipient address The address that receives the collected protocol fees\namount0 uint128 The amount of token0 protocol fees that is withdrawn\namount1 uint128 The amount of token1 protocol fees that is withdrawn\nEdit this page\nHelpful?\nPrevious\nIUniswapV3PoolDerivedState", "metadata": {"page_number": 400, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d11fd670d10c", "text": "Next\nIUniswapV3PoolImmutables\nEvents\nInitialize\nMint\nCollect\nBurn\nSwap\nFlash\nIncreaseObservationCardinalityNext\nSetFeeProtocol\nCollectProtocol\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 401, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "261e881063df", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions", "metadata": {"page_number": 402, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f9d1b529d8c2", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions\nIUniswapV3PoolDerivedState\nIUniswapV3PoolEvents\nIUniswapV3PoolImmutables\nIUniswapV3PoolOwnerActions\nIUniswapV3PoolState\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nPoolHelpful?", "metadata": {"page_number": 402, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1a2d753dba07", "text": "IUniswapV3PoolImmutables\nOn this page\nIUniswapV3PoolImmutables\nThese parameters are fixed for a pool forever , i.e., the methods will always return the same values\nFunctions  \nfactory \n  function  factory(\n  ) external  view returns (address)\nCopy\nThe contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\nReturn Values:  \nType Description\naddress contract address\ntoken0 \n  function  token0(\n  ) external  view returns (address)\nCopy\nThe first of the two tokens of the pool, sorted by address\nReturn Values:  \nType Description\naddress token contract address\ntoken1 \n  function  token1(\n  ) external  view returns (address)\nCopy\nThe second of the two tokens of the pool, sorted by address", "metadata": {"page_number": 403, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b4f858d785e", "text": "Type Description\naddress token contract address\ntoken1 \n  function  token1(\n  ) external  view returns (address)\nCopy\nThe second of the two tokens of the pool, sorted by address\nReturn Values:  \nType Description\naddress token contract address\nfee", "metadata": {"page_number": 403, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "45131974fe41", "text": "function  fee(\n  ) external  view returns (uint24)\nCopy\nThe pool's fee in hundredths of a bip, i.e. 1e-6\nReturn Values:  \nType Description\nuint24 fee\ntickSpacing \n  function  tickSpacing (\n  ) external  view returns (int24)\nCopy\nThe pool tick spacing\nTicks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can\nbe initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\nReturn Values:  \nTypeDescription\nint24 tick spacing\nmaxLiquidityPerTick \n  function  maxLiquidityPerTick (", "metadata": {"page_number": 404, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ec800d8b4e35", "text": "Return Values:  \nTypeDescription\nint24 tick spacing\nmaxLiquidityPerTick \n  function  maxLiquidityPerTick (\n  ) external  view returns (uint128)\nCopy\nThe maximum amount of position liquidity that can use any tick in the range\nThis parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-\nrange liquidity from being used to prevent adding in-range liquidity to a pool\nReturn Values:  \nType Description\nuint128 max amount of liquidity per tick\nEdit this page\nHelpful?\nPrevious\nIUniswapV3PoolEvents\nNext\nIUniswapV3PoolOwnerActions\nFunctions\nfactory\ntoken0", "metadata": {"page_number": 404, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "723607d4b6d8", "text": "token1\nfee\ntickSpacing\nmaxLiquidityPerT ick\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 405, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "add9c5d60094", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions", "metadata": {"page_number": 406, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "91db6a07590d", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions\nIUniswapV3PoolDerivedState\nIUniswapV3PoolEvents\nIUniswapV3PoolImmutables\nIUniswapV3PoolOwnerActions\nIUniswapV3PoolState\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nPoolHelpful?", "metadata": {"page_number": 406, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6dfed4805224", "text": "IUniswapV3PoolOwnerActions\nOn this page\nIUniswapV3PoolOwnerActions\nContains pool methods that may only be called by the factory owner\nFunctions  \nsetFeeProtocol \n  function  setFeeProtocol (\n    uint8 feeProtocol0 ,\n    uint8 feeProtocol1\n  ) external\nCopy\nSet the denominator of the protocol's % share of the fees\nParameters:  \nName TypeDescription\nfeeProtocol0 uint8 new protocol fee for token0 of the pool\nfeeProtocol1 uint8 new protocol fee for token1 of the pool\ncollectProtocol \n  function  collectProtocol (\n    address recipient ,\n    uint128 amount0Requested ,\n    uint128 amount1Requested", "metadata": {"page_number": 407, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "57f57eb3c9c0", "text": "collectProtocol \n  function  collectProtocol (\n    address recipient ,\n    uint128 amount0Requested ,\n    uint128 amount1Requested\n  ) external  returns (uint128 amount0 , uint128 amount1 )\nCopy\nCollect the protocol fee accrued to the pool\nParameters:  \nName Type Description\nrecipient address The address to which collected protocol fees should be sent\namount0Requested uint128 The maximum amount of token0 to send, can be 0 to collect fees in only token1\namount1Requested uint128 The maximum amount of token1 to send, can be 0 to collect fees in only token0\nReturn Values:  \nName Type Description\namount0 uint128 The protocol fee collected in token0\namount1 uint128 The protocol fee collected in token1\nEdit this page", "metadata": {"page_number": 407, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "64a888610c2f", "text": "Helpful?\nPrevious\nIUniswapV3PoolImmutables\nNext\nIUniswapV3PoolState\nFunctions\nsetFeeProtocol\ncollectProtocol\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 408, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1760f6ff40df", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions", "metadata": {"page_number": 409, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3e79429397d7", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nPool\nIUniswapV3PoolActions\nIUniswapV3PoolDerivedState\nIUniswapV3PoolEvents\nIUniswapV3PoolImmutables\nIUniswapV3PoolOwnerActions\nIUniswapV3PoolState\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\nPool\nIUniswapV3PoolStateHelpful?\nOn this page\nIUniswapV3PoolState", "metadata": {"page_number": 409, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6cfa507d56ce", "text": "V3 Protocol\nTechnical Reference\nCore\nInterfaces\nPool\nIUniswapV3PoolStateHelpful?\nOn this page\nIUniswapV3PoolState\nThese methods compose the pool's state, and can change with any frequency including multiple times per transaction\nFunctions  \nslot0 \n  function  slot0(\n  ) external  view returns (uint160 sqrtPriceX96 , int24 tick, uint16 observationIndex , uint16 observationCardinality , uint16 observationCardinalityNext , uint\nCopy\nThe 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally .\nReturn Values:  \nName Type Description\nsqrtPriceX96 uint160 The current price of the pool as a sqrt(token1/token0) Q64.96 value", "metadata": {"page_number": 409, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "353eb1d5c6a0", "text": "Return Values:  \nName Type Description\nsqrtPriceX96 uint160 The current price of the pool as a sqrt(token1/token0) Q64.96 value\ntick int24The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtT ickMath\ngetTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary .\nobservationIndex uint16 The index of the last oracle observation that was written,\nobservationCardinality uint16 The current maximum number of observations stored in the pool,", "metadata": {"page_number": 409, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32b15b39c26c", "text": "Name Type Description\nobservationCardinalityNext uint16 The next maximum number of observations, to be updated when the observation.\nfeeProtocol uint8The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of\ntoken0is the lower 4 bits.Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\nunlocked bool Whether the pool is currently locked to reentrancy\nfeeGrowthGlobal0X128 \n  function  feeGrowthGlobal0X128 (\n  ) external  view returns (uint256)\nCopy\nThe fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\nThis value can overflow the uint256\nfeeGrowthGlobal1X128 \n  function  feeGrowthGlobal1X128 (", "metadata": {"page_number": 410, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f3428350bf17", "text": "This value can overflow the uint256\nfeeGrowthGlobal1X128 \n  function  feeGrowthGlobal1X128 (\n  ) external  view returns (uint256)\nCopy\nThe fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\nThis value can overflow the uint256\nprotocolFees \n  function  protocolFees (\n  ) external  view returns (uint128 token0, uint128 token1)\nCopy\nThe amounts of token0 and token1 that are owed to the protocol\nProtocol fees will never exceed uint128 max in either token\nliquidity \n  function  liquidity (\n  ) external  view returns (uint128)\nCopy\nThe currently in range liquidity available to the pool\nThis value has no relationship to the total liquidity across all ticks\nticks", "metadata": {"page_number": 410, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aea535c9c4eb", "text": "function  liquidity (\n  ) external  view returns (uint128)\nCopy\nThe currently in range liquidity available to the pool\nThis value has no relationship to the total liquidity across all ticks\nticks \n  function  ticks(\n    int24 tick\n  ) external  view returns (uint128 liquidityGross , int128 liquidityNet , uint256 feeGrowthOutside0X128 , uint256 feeGrowthOutside1X128 , int56 tickCumulativeOu\nCopy\nLook up information about a specific tick in the pool\nParameters:  \nName TypeDescription\ntick int24 The tick to look up\nReturn Values:  \nName Type Description\nliquidityGross uint128 the total amount of position liquidity that uses the pool either as tick lower or tick upper ,\nliquidityNet int128 how much liquidity changes when the pool price crosses the tick,", "metadata": {"page_number": 410, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "707943b1869c", "text": "Name Type Description\nliquidityGross uint128 the total amount of position liquidity that uses the pool either as tick lower or tick upper ,\nliquidityNet int128 how much liquidity changes when the pool price crosses the tick,\nfeeGrowthOutside0X128 uint256 the fee growth on the other side of the tick from the current tick in token0,\nfeeGrowthOutside1X128 uint256the fee growth on the other side of the tick from the current tick in token1, feeGrowthOutsideX128 values can only be used if the tick is\ninitialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and are used to compute snapshots.\ntickCumulativeOutside int56\nsecondsPerLiquidityOutsideX128 uint160\nsecondsOutside uint32\ninitialized bool\na specific position.\ntickBitmap \n  function  tickBitmap (", "metadata": {"page_number": 410, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d7e2a0c12f4", "text": "secondsPerLiquidityOutsideX128 uint160\nsecondsOutside uint32\ninitialized bool\na specific position.\ntickBitmap \n  function  tickBitmap (\n      int16 wordPosition\n  ) external  view returns (uint256)", "metadata": {"page_number": 410, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c77cfd1464ea", "text": "Copy\nReturns 256 packed tick initialized boolean values. See TickBitmap for more information\npositions \n  function  positions (\n    bytes32 key\n  ) external  view returns (uint128 _liquidity , uint256 feeGrowthInside0LastX128 , uint256 feeGrowthInside1LastX128 , uint128 tokensOwed0 , uint128 tokensOwed1 )\nCopy\nReturns the information about a position by the position's key\nParameters:  \nName Type Description\nkey bytes32 The position's key is a hash of a preimage composed by the owner , tickLower and tickUpper\nReturn Values:  \nName Type Description\n_liquidity bytes32 The amount of liquidity in the position,\nfeeGrowthInside0LastX128 uint256 fee growth of token0 inside the tick range as of the last mint/burn/poke,", "metadata": {"page_number": 411, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "58ce0152a0b4", "text": "Name Type Description\n_liquidity bytes32 The amount of liquidity in the position,\nfeeGrowthInside0LastX128 uint256 fee growth of token0 inside the tick range as of the last mint/burn/poke,\nfeeGrowthInside1LastX128 uint256 fee growth of token1 inside the tick range as of the last mint/burn/poke,\ntokensOwed0 uint128 the computed amount of token0 owed to the position as of the last mint/burn/poke,\ntokensOwed1 uint128 the computed amount of token1 owed to the position as of the last mint/burn/poke\nobservations \n  function  observations (\n    uint256 index\n  ) external  view returns (uint32 blockTimestamp , int56 tickCumulative , uint160 secondsPerLiquidityCumulativeX128 , bool initialized )\nCopy\nReturns data about a specific observation index", "metadata": {"page_number": 411, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5bc99cd537a3", "text": ") external  view returns (uint32 blockTimestamp , int56 tickCumulative , uint160 secondsPerLiquidityCumulativeX128 , bool initialized )\nCopy\nReturns data about a specific observation index\nYou most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array .\nParameters:  \nName Type Description\nindex uint256 The element of the observations array to fetch\nReturn Values:  \nName Type Description\nblockTimestamp uint256 The timestamp of the observation,\ntickCumulative int56 the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\nsecondsPerLiquidityCumulativeX128 uint160 the seconds per in range liquidity for the life of the pool as of the observation timestamp\ninitialized bool whether the observation has been initialized and the values are safe to use", "metadata": {"page_number": 411, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f9011d06a2b5", "text": "secondsPerLiquidityCumulativeX128 uint160 the seconds per in range liquidity for the life of the pool as of the observation timestamp\ninitialized bool whether the observation has been initialized and the values are safe to use\nEdit this page\nHelpful?\nPrevious\nIUniswapV3PoolOwnerActions\nNext\nBitMath\nFunctions\nslot0\nfeeGrowthGlobal0X128\nfeeGrowthGlobal1X128\nprotocolFees\nliquidity\nticks\ntickBitmap\npositions\nobservations\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 411, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b462adbbe42b", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 411, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1dc4cf47812d", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 412, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dd08d79bc1a0", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nUniswap V3 Staker Design\nUniswap V3 Staker Contract\nInterfaces\nIUniswapV3Staker\nLibraries\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter", "metadata": {"page_number": 413, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "72d7232c37cd", "text": "Interfaces\nIUniswapV3Staker\nLibraries\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nStaker\nInterfaces\nIUniswapV3StakerHelpful?\nOn this page\nIUniswapV3Staker", "metadata": {"page_number": 413, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32694246431b", "text": "Allows staking nonfungible liquidity tokens in exchange for reward tokens\nFunctions  \nfactory \n  function  factory(\n  ) external  view returns (contract  IUniswapV3Factory )\nCopy\nThe Uniswap V3 Factory\nnonfungiblePositionManager \n  function  nonfungiblePositionManager (\n  ) external  view returns (contract  INonfungiblePositionManager )\nCopy\nThe nonfungible position manager with which this staking contract is compatible\nmaxIncentiveDuration \n  function  maxIncentiveDuration (\n  ) external  view returns (uint256)\nCopy\nThe max duration of an incentive in seconds\nmaxIncentiveStartLeadTime \n  function  maxIncentiveStartLeadTime (\n  ) external  view returns (uint256)\nCopy\nThe max amount of seconds into the future the incentive startT ime can be set", "metadata": {"page_number": 414, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f7a135cd570c", "text": "maxIncentiveStartLeadTime \n  function  maxIncentiveStartLeadTime (\n  ) external  view returns (uint256)\nCopy\nThe max amount of seconds into the future the incentive startT ime can be set\nincentives \n  function  incentives (\n    bytes32 incentiveId\n  ) external  view returns (uint256 totalRewardUnclaimed , uint160 totalSecondsClaimedX128 , uint96 numberOfStakes )\nCopy\nRepresents a staking incentive\nParameters:  \nName Type Description\nincentiveId bytes32 The ID of the incentive computed from its parameters\nReturn Values:  \nName Type Description\ntotalRewardUnclaimed uint256 The amount of reward token not yet claimed by users\ntotalSecondsClaimedX128 uint160 Total liquidity-seconds claimed, represented as a UQ32.128", "metadata": {"page_number": 414, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fb5895f8a6bb", "text": "Name Type Description\ntotalRewardUnclaimed uint256 The amount of reward token not yet claimed by users\ntotalSecondsClaimedX128 uint160 Total liquidity-seconds claimed, represented as a UQ32.128\nnumberOfStakes uint96 The count of deposits that are currently staked for the incentive", "metadata": {"page_number": 414, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "060a74d404ef", "text": "deposits \n  function  deposits (\n  ) external  view returns (address owner, uint48 numberOfStakes , int24 tickLower , int24 tickUpper )\nCopy\nReturns information about a deposited NFT\nReturn Values:  \nName Type Description\nowner address The owner of the deposited NFT\nnumberOfStakes uint48 Counter of how many incentives for which the liquidity is staked\ntickLower int24 The lower tick of the range\ntickUpper int24 The upper tick of the range\nstakes \n  function  stakes(\n    uint256 tokenId ,\n    bytes32 incentiveId\n  ) external  view returns (uint160 secondsPerLiquidityInsideInitialX128 , uint128 liquidity )\nCopy\nReturns information about a staked liquidity NFT\nParameters:  \nName Type Description\ntokenId uint256 The ID of the staked token", "metadata": {"page_number": 415, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "24ead3a5d125", "text": "Copy\nReturns information about a staked liquidity NFT\nParameters:  \nName Type Description\ntokenId uint256 The ID of the staked token\nincentiveId bytes32 The ID of the incentive for which the token is staked\nReturn Values:  \nName Type Description\nsecondsPerLiquidityInsideInitialX128 uint160 secondsPerLiquidity represented as a UQ32.128\nliquidity uint128The amount of liquidity in the NFT  as of the last time the rewards were\ncomputed\nrewards \n  function  rewards(\n    contract  IERC20Minimal  rewardToken ,\n    address owner\n  ) external  view returns (uint256 rewardsOwed )\nCopy\nReturns amounts of reward tokens owed to a given address according to the last time all stakes were updated\nParameters:  \nName Type Description\nrewardToken contract IERC20Minimal The token for which to check rewards", "metadata": {"page_number": 415, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "77bc7b11e4dd", "text": "Copy\nReturns amounts of reward tokens owed to a given address according to the last time all stakes were updated\nParameters:  \nName Type Description\nrewardToken contract IERC20Minimal The token for which to check rewards\nowner address The owner for which the rewards owed are checked\nReturn Values:", "metadata": {"page_number": 415, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2ff1977f8801", "text": "Name Type Description\nrewardsOwed uint256 The amount of the reward token claimable by the owner\ncreateIncentive \n  function  createIncentive (\n    struct IUniswapV3Staker .IncentiveKey key ,\n    uint256 reward\n  ) external\nCopy\nCreates a new liquidity mining incentive program\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey Details of the incentive to create\nreward uint256 The amount of reward tokens to be distributed\nendIncentive \n  function  endIncentive (\n    struct IUniswapV3Staker .IncentiveKey key\n  ) external  returns (uint256 refund)\nCopy\nEnds an incentive after the incentive end time has passed and all stakes have been withdrawn\nParameters:  \nName Type Description", "metadata": {"page_number": 416, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "65488a973de7", "text": ") external  returns (uint256 refund)\nCopy\nEnds an incentive after the incentive end time has passed and all stakes have been withdrawn\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey Details of the incentive to end\nReturn Values:  \nName Type Description\nrefund uint256 The remaining reward tokens when the incentive is ended\ntransferDeposit \n  function  transferDeposit (\n    uint256 tokenId ,\n    address to\n  ) external\nCopy\nTransfers ownership of a deposit from the sender to the given recipient\nParameters:  \nName Type Description\ntokenId uint256 The ID of the token (and the deposit) to transfer\nto address The new owner of the deposit\nwithdrawToken", "metadata": {"page_number": 416, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6d720c953231", "text": "function  withdrawToken (\n    uint256 tokenId ,\n    address to,\n    bytes data\n  ) external\nCopy\nWithdraws a Uniswap V3 LP  token tokenId  from this contract to the recipient to\nParameters:  \nName Type Description\ntokenId uint256 The unique identifier of an Uniswap V3 LP  token\nto address The address where the LP  token will be sent\ndata bytes An optional data array that will be passed along to the to address via the NFT  safeT ransferFrom\nstakeToken \n  function  stakeToken (\n    struct IUniswapV3Staker .IncentiveKey key ,\n    uint256 tokenId\n  ) external\nCopy\nStakes a Uniswap V3 LP  token\nParameters:  \nName Type Description", "metadata": {"page_number": 417, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b116d6418643", "text": "uint256 tokenId\n  ) external\nCopy\nStakes a Uniswap V3 LP  token\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The key of the incentive for which to stake the NFT\ntokenId uint256 The ID of the token to stake\nunstakeToken \n  function  unstakeToken (\n    struct IUniswapV3Staker .IncentiveKey key ,\n    uint256 tokenId\n  ) external\nCopy\nUnstakes a Uniswap V3 LP  token\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The key of the incentive for which to unstake the NFT\ntokenId uint256 The ID of the token to unstake\nclaimReward\n  function  claimReward (", "metadata": {"page_number": 417, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "53b41bd9e404", "text": "tokenId uint256 The ID of the token to unstake\nclaimReward\n  function  claimReward (\n    contract  IERC20Minimal  rewardToken ,\n    address to,\n    uint256 amountRequested\n  ) external  returns (uint256 reward)\nCopy\nTransfers amountRequested  of accrued rewardToken  rewards from the contract to the recipient to", "metadata": {"page_number": 417, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f2b00c308ec1", "text": "Parameters:  \nName Type Description\nrewardToken contract IERC20Minimal The token being distributed as a reward\nto address The address where claimed rewards will be sent to\namountRequested uint256 The amount of reward tokens to claim. Claims entire reward amount if set to 0.\nReturn Values:  \nName Type Description\nreward uint256 The amount of reward tokens claimed\ngetRewardInfo \n  function  getRewardInfo (\n    struct IUniswapV3Staker .IncentiveKey key ,\n    uint256 tokenId\n  ) external  returns (uint256 reward, uint160 secondsInsideX128 )\nCopy\nCalculates the reward amount that will be received for the given stake\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The key of the incentive\ntokenId uint256 The ID of the token", "metadata": {"page_number": 418, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "51decac3327a", "text": "Parameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The key of the incentive\ntokenId uint256 The ID of the token\nReturn Values:  \nName Type Description\nreward uint256 The reward accrued to the NFT  for the given incentive thus far\nsecondsInsideX128 uint160 The seconds inside the tick range\nEvents  \nIncentiveCreated \n  event IncentiveCreated (\n    contract  IERC20Minimal  rewardToken ,\n    contract  IUniswapV3Pool  pool,\n    uint256 startTime ,\n    uint256 endTime ,\n    address refundee ,\n    uint256 reward\n  )\nCopy\nEvent emitted when a liquidity mining incentive has been created\nParameters:  \nName Type Description\nrewardToken contract IERC20Minimal The token being distributed as a reward", "metadata": {"page_number": 418, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6b713abc5671", "text": ")\nCopy\nEvent emitted when a liquidity mining incentive has been created\nParameters:  \nName Type Description\nrewardToken contract IERC20Minimal The token being distributed as a reward\npool contract IUniswapV3Pool The Uniswap V3 pool\nstartTime uint256 The time when the incentive program begins", "metadata": {"page_number": 418, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "67c0e567c5e5", "text": "Name Type Description\nendTime uint256 The time when rewards stop accruing\nrefundee address The address which receives any remaining reward tokens after the end time\nreward uint256 The amount of reward tokens to be distributed\nIncentiveEnded \n  event IncentiveEnded (\n    bytes32 incentiveId ,\n    uint256 refund\n  )\nCopy\nEvent that can be emitted when a liquidity mining incentive has ended\nParameters:  \nName Type Description\nincentiveId bytes32 The incentive which is ending\nrefund uint256 The amount of reward tokens refunded\nDepositTransferred \n  event DepositTransferred (\n    uint256 tokenId ,\n    address oldOwner ,\n    address newOwner\n  )\nCopy\nEmitted when ownership of a deposit changes\nParameters:  \nName Type Description", "metadata": {"page_number": 419, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "021e2d00fdf4", "text": "uint256 tokenId ,\n    address oldOwner ,\n    address newOwner\n  )\nCopy\nEmitted when ownership of a deposit changes\nParameters:  \nName Type Description\ntokenId uint256 The ID of the deposit (and token) that is being transferred\noldOwner address The owner before the deposit was transferred\nnewOwner address The owner after the deposit was transferred\nTokenStaked \n  event TokenStaked (\n    uint256 tokenId ,\n    bytes32 liquidity ,\n    uint128 incentiveId\n  )\nCopy\nEvent emitted when a Uniswap V3 LP  token has been staked\nParameters:  \nName Type Description\ntokenId uint256 The unique identifier of an Uniswap V3 LP  token\nliquidity bytes32 The amount of liquidity staked", "metadata": {"page_number": 419, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "034a0931f799", "text": "Parameters:  \nName Type Description\ntokenId uint256 The unique identifier of an Uniswap V3 LP  token\nliquidity bytes32 The amount of liquidity staked\nincentiveId uint128 The incentive in which the token is staking", "metadata": {"page_number": 419, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "35f9fa2d5528", "text": "TokenUnstaked \n  event TokenUnstaked (\n    uint256 tokenId ,\n    bytes32 incentiveId\n  )\nCopy\nEvent emitted when a Uniswap V3 LP  token has been unstaked\nParameters:  \nName Type Description\ntokenId uint256 The unique identifier of an Uniswap V3 LP  token\nincentiveId bytes32 The incentive in which the token is staking\nRewardClaimed \n  event RewardClaimed (\n    address to,\n    uint256 reward\n  )\nCopy\nEvent emitted when a reward token has been claimed\nParameters:  \nName Type Description\nto address The address where claimed rewards were sent to\nreward uint256 The amount of reward tokens claimed\nEdit this page\nHelpful?\nPrevious\nUniswap V3 Staker Contract\nNext", "metadata": {"page_number": 420, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0845d9a6abd3", "text": "to address The address where claimed rewards were sent to\nreward uint256 The amount of reward tokens claimed\nEdit this page\nHelpful?\nPrevious\nUniswap V3 Staker Contract\nNext\nIncentiveId\nFunctions\nfactory\nnonfungiblePositionManager\nmaxIncentiveDuration\nmaxIncentiveStartLeadT ime\nincentives\ndeposits\nstakes\nrewards\ncreateIncentive\nendIncentive\ntransferDeposit\nwithdrawT oken\nstakeT oken\nunstakeT oken\nclaimReward\ngetRewardInfo\nEvents\nIncentiveCreated\nIncentiveEnded", "metadata": {"page_number": 420, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7781869f1191", "text": "DepositT ransferred\nTokenStaked\nTokenUnstaked\nRewardClaimed\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 421, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b1457cdb003e", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nIERC20Minimal\nIUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nIUniswapV3FlashCallback", "metadata": {"page_number": 422, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "174338f2ccb8", "text": "IUniswapV3Factory\nIUniswapV3Pool\nIUniswapV3PoolDeployer\ncallback\nIUniswapV3FlashCallback\nIUniswapV3MintCallback\nIUniswapV3SwapCallback\nPool\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nInterfaces\ncallback\nIUniswapV3SwapCallbackHelpful?\nOn this page", "metadata": {"page_number": 422, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1805d8dff4ef", "text": "IUniswapV3SwapCallback\nAny contract that calls IUniswapV3PoolActions#swap must implement this interface\nFunctions  \nuniswapV3SwapCallback \n  function  uniswapV3SwapCallback (\n    int256 amount0Delta ,\n    int256 amount1Delta ,\n    bytes data\n  ) external\nCopy\nCalled to msg.sender  after executing a swap via IUniswapV3Pool#swap.\nIn the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a\nUniswapV3Pool deployed by the canonical UniswapV3Factory . amount0Delta and amount1Delta can both be 0 if no tokens\nwere swapped.\nParameters:  \nName Type Description", "metadata": {"page_number": 423, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c9cd1228972d", "text": "UniswapV3Pool deployed by the canonical UniswapV3Factory . amount0Delta and amount1Delta can both be 0 if no tokens\nwere swapped.\nParameters:  \nName Type Description\namount0Delta int256The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end\nof the swap. If positive, the callback must send that amount of token0 to the pool.\namount1Delta int256The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end\nof the swap. If positive, the callback must send that amount of token1 to the pool.\ndata bytes Any data passed through by the caller via the IUniswapV3PoolActions#swap call.\nEdit this page\nHelpful?\nPrevious\nIUniswapV3MintCallback\nNext\nIUniswapV3PoolActions", "metadata": {"page_number": 423, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c05012e4f18c", "text": "Edit this page\nHelpful?\nPrevious\nIUniswapV3MintCallback\nNext\nIUniswapV3PoolActions\nFunctions\nuniswapV3SwapCallback\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 423, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "987fe863a112", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 424, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5fc8b89458ea", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 425, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b1557f613e0e", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 425, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ff7e6e090dd7", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nIV3MigratorHelpful?\nOn this page\nIV3Migrator\nEnables migration of liqudity from Uniswap v2-compatible pairs into Uniswap v3 pools\nFunctions  \nmigrate \n  function  migrate(\n    struct IV3Migrator .MigrateParams params\n  ) external\nCopy\nMigrates liquidity to v3 by burning v2 liquidity and minting a new position for v3\nSlippage protection is enforced via amount{0,1}Min , which should be a discount of the expected values of the maximum\namount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an out-of-range position,\namount{0,1}Min  may be set to 0, enforcing that the position remains out of range\nParameters:", "metadata": {"page_number": 426, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "881f55e2ad38", "text": "amount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an out-of-range position,\namount{0,1}Min  may be set to 0, enforcing that the position remains out of range\nParameters:  \nName Type Description\nparamsstruct\nIV3Migrator .MigrateParamsThe params necessary to migrate v2 liquidity , encoded as MigrateParams  in\ncalldata\nEdit this page\nHelpful?\nPrevious\nITickLens\nNext\nIERC1271\nFunctions\nmigrate\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 426, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2a0c2275fa72", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 427, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "80b4ab2b4a91", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nIERC20Metadata\nIERC721Permit\nIMulticall\nINonfungiblePositionManager\nINonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer", "metadata": {"page_number": 428, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4549dfc414cf", "text": "INonfungibleT okenPositionDescriptor\nIPeripheryImmutableState\nIPeripheryPayments\nIPeripheryPaymentsW ithFee\nIPoolInitializer\nIQuoter\nIQuoterV2\nISelfPermit\nISwapRouter\nITickLens\nIV3Migrator\nexternal\nIERC1271\nIERC20PermitAllowed\nIWETH9\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes", "metadata": {"page_number": 428, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7bfe598df84f", "text": "Universal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nInterfaces\nexternal\nIWETH9Helpful?\nOn this page\nIWETH9\nFunctions  \ndeposit \n  function  deposit(\n  ) external\nCopy\nDeposit ether to get wrapped ether\nwithdraw \n  function  withdraw (\n  ) external\nCopy\nWithdraw wrapped ether to get ether\nEdit this page\nHelpful?\nPrevious\nIERC20PermitAllowed\nNext\nQuoter\nFunctions\ndeposit\nwithdraw\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 429, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46141fa456b8", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 430, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e48f1207c9d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02", "metadata": {"page_number": 431, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "454cb0c18dfb", "text": "Technical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02\nCommon Errors\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nSmart Contracts\nLibraryHelpful?\nOn this page\nLibrary\nCode  \nUniswapV2Library.sol\nInternal Functions\nsortT okens  \nfunction  sortTokens (address tokenA, address tokenB) internal  pure returns (address token0, address token1);", "metadata": {"page_number": 431, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b7416f17bf6d", "text": "Copy\nSorts token addresses.\npairFor  \nfunction  pairFor(address factory , address tokenA, address tokenB) internal  pure returns (address pair);\nCopy\nCalculates the address for a pair without making any external calls via the v2 SDK.\ngetReserves  \nfunction  getReserves (address factory , address tokenA, address tokenB) internal  view returns (uint reserveA , uint reserveB );\nCopy\nCalls getReserves  on the pair for the passed tokens, and returns the results sorted in the order that the parameters were passed in.\nquote  \nfunction  quote(uint amountA , uint reserveA , uint reserveB ) internal  pure returns (uint amountB );\nCopy\nGiven some asset amount and reserves, returns an amount of the other asset representing equivalent value.\nUseful for calculating optimal token amounts before calling mint.\ngetAmountOut", "metadata": {"page_number": 432, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9d5b86646741", "text": "Copy\nGiven some asset amount and reserves, returns an amount of the other asset representing equivalent value.\nUseful for calculating optimal token amounts before calling mint.\ngetAmountOut  \nfunction  getAmountOut (uint amountIn , uint reserveIn , uint reserveOut ) internal  pure returns (uint amountOut );\nCopy\nGiven an input  asset amount, returns the maximum output  amount of the other asset (accounting for fees) given reserves.\nUsed in getAmountsOut .\ngetAmountIn  \nfunction  getAmountIn (uint amountOut , uint reserveIn , uint reserveOut ) internal  pure returns (uint amountIn );\nCopy\nReturns the minimum input  asset amount required to buy the given output  asset amount (accounting for fees) given reserves.\nUsed in getAmountsIn .\ngetAmountsOut  \nfunction  getAmountsOut (uint amountIn , address[] memory path) internal  view returns (uint[] memory amounts );", "metadata": {"page_number": 432, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a40e0d74d9e0", "text": "Used in getAmountsIn .\ngetAmountsOut  \nfunction  getAmountsOut (uint amountIn , address[] memory path) internal  view returns (uint[] memory amounts );\nCopy\nGiven an input  asset amount and an array of token addresses, calculates all subsequent maximum output  token amounts by calling getReserves  for\neach pair of token addresses in the path in turn, and using these to call getAmountOut .\nUseful for calculating optimal token amounts before calling swap .\ngetAmountsIn  \nfunction  getAmountsIn (address factory , uint amountOut , address[] memory path) internal  view returns (uint[] memory amounts );\nCopy", "metadata": {"page_number": 432, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "01b5631d4257", "text": "Given an output  asset amount and an array of token addresses, calculates all preceding minimum input  token amounts by calling getReserves  for each\npair of token addresses in the path in turn, and using these to call getAmountIn .\nUseful for calculating optimal token amounts before calling swap .\nEdit this page\nHelpful?\nPrevious\nPair (ERC-20)\nNext\nRouter01\nCode\nsortT okens\npairFor\ngetReserves\nquote\ngetAmountOut\ngetAmountIn\ngetAmountsOut\ngetAmountsIn\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 433, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a65a4c339b6e", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 433, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0f17af2ce0f1", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nMinting a Position\nAdding & Removing Liquidity\nCollecting Fees\nSwapping and Adding Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nGuides\nPooling Liquidity\nCollecting FeesHelpful?\nOn this page\nCollecting Fees\nIntroduction", "metadata": {"page_number": 434, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a31703d45499", "text": "V1 SDK\n\u0000\nV3 SDK\nGuides\nPooling Liquidity\nCollecting FeesHelpful?\nOn this page\nCollecting Fees\nIntroduction  \nThis guide will cover how to collect fees from a liquidity position on the Uniswap V3 protocol. It is based on the collecting\nfees code example , found in the Uniswap code examples repository . To run this example, check out the examples's\nREADME  and follow the setup instructions.\ninfo\nIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository , please visit\nour background  page!\nIn the Uniswap V3 protocol, liquidity positions are represented using non-fungible tokens. In this guide we will use the\nNonfungiblePositionManager  class to help us mint a liquidity position for the USDC - DAI  pair. We will then attempt to", "metadata": {"page_number": 434, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b8c75cec5e5", "text": "NonfungiblePositionManager  class to help us mint a liquidity position for the USDC - DAI  pair. We will then attempt to\ncollect any fees that the position has accrued from those trading against our provisioned liquidity . The inputs to our guide are", "metadata": {"page_number": 434, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "01e0a74b88e1", "text": "the two tokens  that we are pooling for , the amount  of each token we are pooling for , the Pool fee and the max amount of\naccrued fees  we want to collect for each token.\nThe guide will cover :\n1. Setting up our fee collection\n2. Submitting our fee collection transaction\nAt the end of the guide, given the inputs above, we should be able to collect the accrued fees (if any) of a minted position\nwith the press of a button and see the change reflected in our position and the balance of our tokens.\nFor this guide, the following Uniswap packages are used:\n@uniswap/v3-sdk\n@uniswap/sdk-core\nThe core code of this guide can be found in collectFees() .\nnote\nThis guide assumes you are familiar with our Minting a Position  guide. A minted position is required to add or remove", "metadata": {"page_number": 435, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d8476b9389b2", "text": "The core code of this guide can be found in collectFees() .\nnote\nThis guide assumes you are familiar with our Minting a Position  guide. A minted position is required to add or remove\nliquidity from, so the buttons will be disabled until a position is minted.\nAlso note that we do not need to give approval to the NonfungiblePositionManager  to transfer our tokens as we will have\nalready done that when minting our position.\nSetting up our  fee collection  \nAll of the fee collecting logic can be found in the collectFees  function. Notice how the Collect Fees  button is disabled\nuntil a position is minted. This happens because there will be no fees to collect unless there is a position whose liquidity has\nbeen traded against.\nTo start, we construct an options object of type CollectOptions  that holds the data about the fees we want to collect:\nConstructing the CollectOptions\nloading...\nCopy\nView on Github", "metadata": {"page_number": 435, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6f21f82c3596", "text": "To start, we construct an options object of type CollectOptions  that holds the data about the fees we want to collect:\nConstructing the CollectOptions\nloading...\nCopy\nView on Github\nSimilar to the other functions exposed by the NonfungiblePositionManager , we pass the tokenId  and the recipient  of\nthe fees, which in this case is our function's input position id and our wallet's address.\nThe other two CurrencyAmount  parameters ( expectedCurrencyOwed0  and expectedCurrencyOwed1 ) define the maximum\namount of currency we expect to get collect through accrued fees of each token in the pool. We set these through our guide's\nconfiguration.\nSubmitting our  fee collection transaction  \nWe then get the call parameters for collecting our fees from our NonfungiblePositionManager  using the constructed\nCollectOptions :\nGetting the calldata and value for the transaction\nloading...\nCopy", "metadata": {"page_number": 435, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bcf8d3905747", "text": "We then get the call parameters for collecting our fees from our NonfungiblePositionManager  using the constructed\nCollectOptions :\nGetting the calldata and value for the transaction\nloading...\nCopy\nView on Github", "metadata": {"page_number": 435, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "44c0f769695c", "text": "The function above returns the calldata and value required to construct the transaction for collecting accrued fees. Now that\nwe have both the calldata and value we needed for the transaction, we can build and execute the it:\nBuilding and submitting the transaction\nloading...\nCopy\nView on Github\nAfter pressing the button, if someone has traded against our position, we should be able to note how the balance of USDC\nand DAI increases as we collect fees.\nNext Steps  \nThe previous guides detail all the atomic steps needed to create and manage positions. However , these approaches may not\nuse all of your desired currency . To ensure you are using your full funds while minimizing gas prices, check out our guide on\nSwapping and Adding Liquidity  in a single transaction!\nEdit this page\nHelpful?\nPrevious\nAdding & Removing Liquidity\nNext\nSwapping and Adding Liquidity\nIntroduction", "metadata": {"page_number": 436, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0990fe486fb", "text": "Swapping and Adding Liquidity  in a single transaction!\nEdit this page\nHelpful?\nPrevious\nAdding & Removing Liquidity\nNext\nSwapping and Adding Liquidity\nIntroduction\nSetting up our fee collection\nSubmitting our fee collection transaction\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 436, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0bf2e2d65e19", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 438, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bb80d670d721", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 438, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "743734c15616", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nLiquidityAmountsHelpful?\nOn this page\nLiquidityAmounts\nProvides functions for computing liquidity amounts from token amounts and prices\nFunctions  \ngetLiquidityForAmount0 \n  function  getLiquidityForAmount0 (\n    uint160 sqrtRatioAX96 ,\n    uint160 sqrtRatioBX96 ,\n    uint256 amount0\n  ) internal  returns (uint128 liquidity )\nCopy\nComputes the amount of liquidity received for a given amount of token0 and price range\nCalculates amount0 (sqrt(upper) sqrt(lower)) / (sqrt(upper) - sqrt(lower))\nParameters:  \nName Type Description", "metadata": {"page_number": 439, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2fed2caf5c9c", "text": "Calculates amount0 (sqrt(upper) sqrt(lower)) / (sqrt(upper) - sqrt(lower))\nParameters:  \nName Type Description\nsqrtRatioAX96 uint160 A sqrt price representing the first tick boundary\nsqrtRatioBX96 uint160 A sqrt price representing the second tick boundary\namount0 uint256 The amount0 being sent in\nReturn Values:  \nName Type Description\nliquidity uint128 The amount of returned liquidity\ngetLiquidityForAmount1 \n  function  getLiquidityForAmount1 (\n    uint160 sqrtRatioAX96 ,\n    uint160 sqrtRatioBX96 ,\n    uint256 amount1\n  ) internal  returns (uint128 liquidity )\nCopy\nComputes the amount of liquidity received for a given amount of token1 and price range", "metadata": {"page_number": 439, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "913ae01b51eb", "text": "uint256 amount1\n  ) internal  returns (uint128 liquidity )\nCopy\nComputes the amount of liquidity received for a given amount of token1 and price range\nCalculates amount1 / (sqrt(upper) - sqrt(lower)).", "metadata": {"page_number": 439, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "329b6b9413b0", "text": "Parameters:  \nName Type Description\nsqrtRatioAX96 uint160 A sqrt price representing the first tick boundary\nsqrtRatioBX96 uint160 A sqrt price representing the second tick boundary\namount1 uint256 The amount1 being sent in\nReturn Values:  \nName Type Description\nliquidity uint128 The amount of returned liquidity\ngetLiquidityForAmounts \n  function  getLiquidityForAmounts (\n    uint160 sqrtRatioX96 ,\n    uint160 sqrtRatioAX96 ,\n    uint160 sqrtRatioBX96 ,\n    uint256 amount0 ,\n    uint256 amount1\n  ) internal  returns (uint128 liquidity )\nCopy\nComputes the maximum amount of liquidity received for a given amount of token0, token1, the current pool prices and the", "metadata": {"page_number": 440, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7a4d210b1a8b", "text": "uint256 amount1\n  ) internal  returns (uint128 liquidity )\nCopy\nComputes the maximum amount of liquidity received for a given amount of token0, token1, the current pool prices and the\nprices at the tick boundaries\nParameters:  \nName Type Description\nsqrtRatioX96 uint160 A sqrt price representing the current pool prices\nsqrtRatioAX96 uint160 A sqrt price representing the first tick boundary\nsqrtRatioBX96 uint160 A sqrt price representing the second tick boundary\namount0 uint256 The amount of token0 being sent in\namount1 uint256 The amount of token1 being sent in\nReturn Values:  \nName Type Description\nliquidity uint128 The maximum amount of liquidity received\ngetAmount0ForLiquidity \n  function  getAmount0ForLiquidity (", "metadata": {"page_number": 440, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f490f807032d", "text": "Return Values:  \nName Type Description\nliquidity uint128 The maximum amount of liquidity received\ngetAmount0ForLiquidity \n  function  getAmount0ForLiquidity (\n    uint160 sqrtRatioAX96 ,\n    uint160 sqrtRatioBX96 ,\n    uint128 liquidity\n  ) internal  returns (uint256 amount0 )\nCopy\nComputes the amount of token0 for a given amount of liquidity and a price range\nParameters:", "metadata": {"page_number": 440, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "701edc00a6d8", "text": "Name Type Description\nsqrtRatioAX96 uint160 A sqrt price representing the first tick boundary\nsqrtRatioBX96 uint160 A sqrt price representing the second tick boundary\nliquidity uint128 The liquidity being valued\nReturn Values:  \nName Type Description\namount0 uint256 The amount of token0\ngetAmount1ForLiquidity \n  function  getAmount1ForLiquidity (\n    uint160 sqrtRatioAX96 ,\n    uint160 sqrtRatioBX96 ,\n    uint128 liquidity\n  ) internal  returns (uint256 amount1 )\nCopy\nComputes the amount of token1 for a given amount of liquidity and a price range\nParameters:  \nName Type Description\nsqrtRatioAX96 uint160 A sqrt price representing the first tick boundary", "metadata": {"page_number": 441, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b890b8bb72f9", "text": "Copy\nComputes the amount of token1 for a given amount of liquidity and a price range\nParameters:  \nName Type Description\nsqrtRatioAX96 uint160 A sqrt price representing the first tick boundary\nsqrtRatioBX96 uint160 A sqrt price representing the second tick boundary\nliquidity uint128 The liquidity being valued\nReturn Values:  \nName Type Description\namount1 uint256 The amount of token1\ngetAmountsForLiquidity \n  function  getAmountsForLiquidity (\n    uint160 sqrtRatioX96 ,\n    uint160 sqrtRatioAX96 ,\n    uint160 sqrtRatioBX96 ,\n    uint128 liquidity\n  ) internal  returns (uint256 amount0 , uint256 amount1 )\nCopy", "metadata": {"page_number": 441, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ab9ebc5a8f48", "text": "uint160 sqrtRatioBX96 ,\n    uint128 liquidity\n  ) internal  returns (uint256 amount0 , uint256 amount1 )\nCopy\nComputes the token0 and token1 value for a given amount of liquidity , the current pool prices and the prices at the tick\nboundaries\nParameters:  \nName Type Description\nsqrtRatioX96 uint160 A sqrt price representing the current pool prices\nsqrtRatioAX96 uint160 A sqrt price representing the first tick boundary\nsqrtRatioBX96 uint160 A sqrt price representing the second tick boundary", "metadata": {"page_number": 441, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3523d139c415", "text": "Name Type Description\nliquidity uint128 The liquidity being valued\nReturn Values:  \nName Type Description\namount0 uint256 The amount of token0\namount1 uint256 The amount of token1\nEdit this page\nHelpful?\nPrevious\nHexStrings\nNext\nNFTDescriptor\nFunctions\ngetLiquidityForAmount0\ngetLiquidityForAmount1\ngetLiquidityForAmounts\ngetAmount0ForLiquidity\ngetAmount1ForLiquidity\ngetAmountsForLiquidity\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 442, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9f6c0025818f", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 442, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fad6a6d96f5e", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 443, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9ec734fb7b79", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 443, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0c0f5b68c9c0", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nLiquidityAmountsT estHelpful?\nOn this page\nLiquidityAmountsT est\nFunctions  \ngetLiquidityForAmount0 \n  function  getLiquidityForAmount0 (\n  ) external  returns (uint128 liquidity )\nCopy\ngetGasCostOfGetLiquidityForAmount0 \n  function  getGasCostOfGetLiquidityForAmount0 (\n  ) external  returns (uint256)\nCopy\ngetLiquidityForAmount1 \n  function  getLiquidityForAmount1 (\n  ) external  returns (uint128 liquidity )\nCopy\ngetGasCostOfGetLiquidityForAmount1", "metadata": {"page_number": 444, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "472bd4a9a81a", "text": "getLiquidityForAmount1 \n  function  getLiquidityForAmount1 (\n  ) external  returns (uint128 liquidity )\nCopy\ngetGasCostOfGetLiquidityForAmount1 \n  function  getGasCostOfGetLiquidityForAmount1 (\n  ) external  returns (uint256)\nCopy\ngetLiquidityForAmounts \n  function  getLiquidityForAmounts (\n  ) external  returns (uint128 liquidity )\nCopy\ngetGasCostOfGetLiquidityForAmounts \n  function  getGasCostOfGetLiquidityForAmounts (\n  ) external  returns (uint256)\nCopy", "metadata": {"page_number": 444, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "44dbdee25e98", "text": "getAmount0ForLiquidity \n  function  getAmount0ForLiquidity (\n  ) external  returns (uint256 amount0 )\nCopy\ngetGasCostOfGetAmount0ForLiquidity \n  function  getGasCostOfGetAmount0ForLiquidity (\n  ) external  returns (uint256)\nCopy\ngetAmount1ForLiquidity \n  function  getAmount1ForLiquidity (\n  ) external  returns (uint256 amount1 )\nCopy\ngetGasCostOfGetAmount1ForLiquidity \n  function  getGasCostOfGetAmount1ForLiquidity (\n  ) external  returns (uint256)\nCopy\ngetAmountsForLiquidity \n  function  getAmountsForLiquidity (\n  ) external  returns (uint256 amount0 , uint256 amount1 )\nCopy", "metadata": {"page_number": 445, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c03186376187", "text": "Copy\ngetAmountsForLiquidity \n  function  getAmountsForLiquidity (\n  ) external  returns (uint256 amount0 , uint256 amount1 )\nCopy\ngetGasCostOfGetAmountsForLiquidity \n  function  getGasCostOfGetAmountsForLiquidity (\n  ) external  returns (uint256)\nCopy\nEdit this page\nHelpful?\nPrevious\nBase64T est\nNext\nMockT imeNonfungiblePositionManager\nFunctions\ngetLiquidityForAmount0\ngetGasCostOfGetLiquidityForAmount0\ngetLiquidityForAmount1\ngetGasCostOfGetLiquidityForAmount1\ngetLiquidityForAmounts\ngetGasCostOfGetLiquidityForAmounts", "metadata": {"page_number": 445, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33a29e4e91cc", "text": "getLiquidityForAmount1\ngetGasCostOfGetLiquidityForAmount1\ngetLiquidityForAmounts\ngetGasCostOfGetLiquidityForAmounts\ngetAmount0ForLiquidity\ngetGasCostOfGetAmount0ForLiquidity", "metadata": {"page_number": 445, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "da8857c63a20", "text": "getAmount1ForLiquidity\ngetGasCostOfGetAmount1ForLiquidity\ngetAmountsForLiquidity\ngetGasCostOfGetAmountsForLiquidity\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 446, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "73f71440d331", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nBlockT imestamp\nERC721Permit\nLiquidityManagement\nMulticall\nPeripheryImmutableState\nPeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest", "metadata": {"page_number": 447, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3457565561f5", "text": "PeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nBaseHelpful?", "metadata": {"page_number": 447, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "adcb33dfd989", "text": "LiquidityManagement\nOn this page\nLiquidityManagement\nInternal functions for safely managing liquidity in Uniswap V3\nParameter  Structs  \nAddLiquidityParams \n    struct AddLiquidityParams  {\n        address token0;\n        address token1;\n        uint24 fee;\n        address recipient ;\n        int24 tickLower ;\n        int24 tickUpper ;\n        uint256 amount0Desired ;\n        uint256 amount1Desired ;\n        uint256 amount0Min ;\n        uint256 amount1Min ;\n    }\nCopy\nFunctions  \nuniswapV3MintCallback \n  function  uniswapV3MintCallback (\n    uint256 amount0Owed ,\n    uint256 amount1Owed ,\n    bytes data\n  ) external", "metadata": {"page_number": 448, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3012130eb0bf", "text": "uniswapV3MintCallback \n  function  uniswapV3MintCallback (\n    uint256 amount0Owed ,\n    uint256 amount1Owed ,\n    bytes data\n  ) external\nCopy\nCalled to msg.sender  after minting liquidity to a position from IUniswapV3Pool#mint.\nIn the implementation you must pay the pool tokens owed for the minted liquidity . The caller of this method must be checked\nto be a UniswapV3Pool deployed by the canonical UniswapV3Factory .\nParameters:  \nName Type Description\namount0Owed uint256 The amount of token0 due to the pool for the minted liquidity\namount1Owed uint256 The amount of token1 due to the pool for the minted liquidity\ndata bytes Any data passed through by the caller via the IUniswapV3PoolActions#mint call\naddLiquidity", "metadata": {"page_number": 448, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f7059a7bb41c", "text": "amount1Owed uint256 The amount of token1 due to the pool for the minted liquidity\ndata bytes Any data passed through by the caller via the IUniswapV3PoolActions#mint call\naddLiquidity \n  function  addLiquidity (\n    AddLiquidityParams memory params\n  ) internal  returns (uint128 liquidity , uint256 amount0 , uint256 amount1 , contract  IUniswapV3Pool  pool)\nCopy", "metadata": {"page_number": 448, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "69d9cf3cb1d8", "text": "Add liquidity to an initialized pool\nEdit this page\nHelpful?\nPrevious\nERC721Permit\nNext\nMulticall\nParameter Structs\nAddLiquidityParams\nFunctions\nuniswapV3MintCallback\naddLiquidity\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 449, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dc282d02bea9", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 450, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b8e718d7063", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 450, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7c732ac98282", "text": "classes\nLiquidityMath\nOn this page\nLiquidityMath\n@uniswap/v3-sdk  / Exports  / LiquidityMath\nClass: LiquidityMath\nTable of contents  \nConstructors \nconstructor\nMethods \naddDelta\nConstructors  \nconstructor \n\u2022 Private  new LiquidityMath ()\nCannot be constructed.\nDefined in  \nutils/liquidityMath.ts:8\nMethods  \naddDelta \n\u25b8 Static  addDelta (x, y): default\nParameters  \nName Type\nxdefault\nydefault\nReturns  \ndefault\nDefined in", "metadata": {"page_number": 451, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "64b124a577c8", "text": "utils/liquidityMath.ts:10\nEdit this page\nHelpful?\nPrevious\nFullMath\nNext\nMulticall\nTable of contents\nConstructors\nMethods\nConstructors\nconstructor\nMethods\naddDelta\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 452, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f95c380e27ac", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nLicense Modifications\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nGovernance Proposals\nLicense ModificationsHelpful?\nOn this page\nLicense Modifications\nLicensing  \nPlease note that Uniswap V3 is under BUSL  license  until the Change Date, currently 2023-04-01. Exceptions to the license", "metadata": {"page_number": 453, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fd340bc63bbe", "text": "License ModificationsHelpful?\nOn this page\nLicense Modifications\nLicensing  \nPlease note that Uniswap V3 is under BUSL  license  until the Change Date, currently 2023-04-01. Exceptions to the license\nmay be specified by Uniswap Governance via Additional Use Grants, which can, for example, allow V3 to be deployed on\nnew chains. Please follow the Uniswap Governance process  to request a DAO vote for exceptions to the license, or to move\nup the Change Date.\nLicense changes must be enacted via the ENS domain  uniswap.eth, which is controlled by Uniswap Governance. This\nmeans (among other things) that Governance has the power to associate arbitrary text with any subdomain of the form\nX.uniswap.eth. Modifications of the Change Date should be specified at v3-core-license-date.uniswap.eth, and Additional", "metadata": {"page_number": 453, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9500eb415880", "text": "X.uniswap.eth. Modifications of the Change Date should be specified at v3-core-license-date.uniswap.eth, and Additional\nUse Grants should be specified at v3-core-license-grants.uniswap.eth. The process for associating text with a subdomain is\ndetailed below:\nENS Subdomain Details & Process\nProposals", "metadata": {"page_number": 453, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6df314f5f31b", "text": "Proposals are submitted via GovernorBravoDelegator  @ 0x408ED6354d4973f66138C91495F2f2FCbd8724C3 , a proxy\ncontract currently pointing to the implementation at 0x53a328F4086d7C0F1Fa19e594c9b842125263026 . NPM packages for\nconsuming the governance contract ABIs, and details on previous versions, are available here\nGovernor Bravo #propose Parameters\nPopulating Pr oposal Calldata  \nBelow is an example of using a scripting environment to generate a proposal. This is for educational purposes only - that\nexample assumes access to a private key with a suf ficient amount of delegated UNI to submit a proposal, which is an\ninsecure practice. There are several ways to generate a proposal transaction and submit it to Ethereum; this example should\nonly be used for reference and not in production.\nPopulating `Propose` Calldata\nHelpful Links", "metadata": {"page_number": 454, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9fb5f7d03558", "text": "insecure practice. There are several ways to generate a proposal transaction and submit it to Ethereum; this example should\nonly be used for reference and not in production.\nPopulating `Propose` Calldata\nHelpful Links  \nGovernor Bravo Proxy\nGovernor Bravo Delegate\nENS Subnode Record Update Details\nEdit this page\nHelpful?\nPrevious\nThe Final Contract\nNext\nOverview\nLicensing\nProposals\nPopulating Proposal Calldata\nHelpful Links\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists", "metadata": {"page_number": 454, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6b743d3f1b3f", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 454, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4fb41bf3640b", "text": "Governance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 455, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "11c6446f3141", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nSet Up Your Local EnvironmentHelpful?\nOn this page\nSet Up Your Local Envir onment\nOne of the most common questions we get asked is what development toolset to use to build on-chain integrations with", "metadata": {"page_number": 456, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8251e7eddca2", "text": "Guides\nSet Up Your Local EnvironmentHelpful?\nOn this page\nSet Up Your Local Envir onment\nOne of the most common questions we get asked is what development toolset to use to build on-chain integrations with\nUniswap. There\u2019 s no right answer to this question but for this guide we\u2019ll recommend a common one: Node.js  , NPM and\nHardhat .\nAt the end of this guide you\u2019ll have a development environment set up that you can use to build the rest of the examples in\nthe Guides section of the docs, or start your own integration project!\nTo get you started as quickly as possible, we have provided the Quick Start  section below where you can clone some boiler\nplate and get building. To start from scratch and learn the underlying concepts, jump to the Start from Scratch  section.\nQuick Start\nThe Uniswap boilerplate repo  provides a basic Hardhat environment with required imports already pre-loaded for you. You", "metadata": {"page_number": 456, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ce9fe8fdd422", "text": "plate and get building. To start from scratch and learn the underlying concepts, jump to the Start from Scratch  section.\nQuick Start\nThe Uniswap boilerplate repo  provides a basic Hardhat environment with required imports already pre-loaded for you. You\ncan simply clone it and install the dependencies:\ngit clone https://github.com/Uniswap/uniswap-first-contract-example\ncd uniswap-first-contract-example\nnpm install \nCopy", "metadata": {"page_number": 456, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "870e37f77c3e", "text": "Then hop to the Local Node with a Mainnet Fork  to complete your set up and start developing.\nStart fr om Scratch\nIn the following sections, we\u2019ll walk through the steps to create the same environment set up as the boiler plate from scratch\nand learn the underlying concepts.\nSet Up Dependencies  \nNode is one of the most common Javascript runtimes. For our purposes it will provide scripting we can use to compile and\ntest our contracts. If you haven\u2019 t already , install NodeJS and its package manager NPM ( instructions ). Once those\ndependencies are set up, we can initialize our project:\n$ npm init\nCopy\nHardhat  is an Ethereum development toolset that provides a number of powerful features including Solidity compilation,\ntesting and deployment, all in a single convenient wrapper . We\u2019ll use NPM to add Hardhat to our project:\n$ npm add --save-dev hardhat\nCopy", "metadata": {"page_number": 457, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8b09c10497ce", "text": "testing and deployment, all in a single convenient wrapper . We\u2019ll use NPM to add Hardhat to our project:\n$ npm add --save-dev hardhat\nCopy\nWith Hardhat installed we can invoke it to scaf fold our development environment. When you first run Hardhat you\u2019ll have\nthe option of starting with a templated Javascript or Typescript project or an empty project. Since Hardhat relies heavily on\nfolder structure, we recommend starting with either of the templated options. Initialize Hardhat and follow the prompts to\nmake your selection and answer yes to the follow up prompts:\n$ npx hardhat init\nCopy\nOnce the Hardhat initialization completes, take a look around at what got set up. The folder structure should be intuitive,\n./contracts  is where you\u2019ll write your Solidity contracts, ./test  is where you\u2019ll write your tests and ./scripts  is where", "metadata": {"page_number": 457, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "52abae7345b2", "text": "Once the Hardhat initialization completes, take a look around at what got set up. The folder structure should be intuitive,\n./contracts  is where you\u2019ll write your Solidity contracts, ./test  is where you\u2019ll write your tests and ./scripts  is where\nyou can write scripts to perform actions like deploying. Out of the box, Hardhat is configured to use this folder structure so\ndon\u2019t change it unless you know what you\u2019re doing!\nNext we\u2019ll use NPM to add the Uniswap V3 contracts which will allow us to seamlessly integrate with the protocol in our\nnew contracts:\n$ npm add @uniswap/v3-periphery @uniswap/v3-core\nCopy\nThe Uniswap V3 contracts were written using a past version of the solidity compiler . Since we\u2019re building integrations on V3\nwe have to tell Hardhat to use the correct compiler to build these files. Go to the ./hardhat.config.js  file and change the", "metadata": {"page_number": 457, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3a56115c4654", "text": "we have to tell Hardhat to use the correct compiler to build these files. Go to the ./hardhat.config.js  file and change the\nSolidity version to \u201c0.7.6\u201d:\n// ...\nmodule.exports = {\n  solidity : \"0.7.6\",\n};\nCopy\nThat\u2019 s it! You should now have a functional development environment to start building on chain Uniswap integrations. Let\u2019 s\nrun a quick test to confirm everything is set up properly .", "metadata": {"page_number": 457, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1018602260dd", "text": "Compile a Basic Contract  \nTo confirm that our environment is configured correctly we\u2019ll attempt to compile a basic Swap contract. Create a new file,\n./contracts/Swap.sol  and paste the following code into it (a detailed guide to this contract can be found here):\n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2 ;\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\ncontract SimpleSwap {\n    ISwapRouter public immutable swapRouter ;\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;", "metadata": {"page_number": 458, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b5b1307f735", "text": "contract SimpleSwap {\n    ISwapRouter public immutable swapRouter ;\n    address public constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;\n    address public constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 ;\n    uint24 public constant feeTier = 3000;\n    \n    constructor (ISwapRouter _swapRouter ) {\n        swapRouter = _swapRouter ;\n    }\n    \n    function  swapWETHForDAI (uint256 amountIn ) external returns (uint256 amountOut ) {\n        // Transfer the specified amount of WETH9 to this contract.\n        TransferHelper .safeTransferFrom (WETH9, msg.sender, address(this), amountIn );", "metadata": {"page_number": 458, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cde33ba0beef", "text": "// Transfer the specified amount of WETH9 to this contract.\n        TransferHelper .safeTransferFrom (WETH9, msg.sender, address(this), amountIn );\n        // Approve the router to spend WETH9.\n        TransferHelper .safeApprove (WETH9, address(swapRouter ), amountIn );\n        // Note: To use this example, you should explicitly set slippage limits, omitting for simplicity\n        uint256 minOut = /* Calculate min output */  0;\n        uint160 priceLimit = /* Calculate price limit */  0;\n        // Create the params that will be used to execute the swap\n        ISwapRouter .ExactInputSingleParams memory params =\n            ISwapRouter .ExactInputSingleParams ({\n                tokenIn : WETH9,\n                tokenOut : DAI,\n                fee : feeTier ,", "metadata": {"page_number": 458, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b652f61f3a92", "text": "ISwapRouter .ExactInputSingleParams ({\n                tokenIn : WETH9,\n                tokenOut : DAI,\n                fee : feeTier ,\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountIn : amountIn ,\n                amountOutMinimum : minOut,\n                sqrtPriceLimitX96 : priceLimit\n            });\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter .exactInputSingle (params);\n    }\n}\nCopy\nTo compile all the contracts in the ./contracts  folder , we\u2019ll use the Hardhat compile command:\n$ npx hardhat compile\nCopy\nIf the environment is compiled correctly you should see the message:\nCompiled { x } Solidity files successfully\nCopy", "metadata": {"page_number": 458, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "72c6c1571c0c", "text": "$ npx hardhat compile\nCopy\nIf the environment is compiled correctly you should see the message:\nCompiled { x } Solidity files successfully\nCopy\nLocal Node with a Mainnet Fork", "metadata": {"page_number": 458, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7fb71e45bc01", "text": "When building and testing integrations with on chain protocols, developers often hit a problem: the liquidity on the live\nchain is critical to thoroughly testing their code but testing against a live network like Mainnet can be extremely expensive.\nLuckily , Hardhat has a powerful feature that allows developers to run a local Ethereum test node that uses a fork of Mainnet.\nThis allows us to test against simulated liquidity for free.\nAs a prerequisite we\u2019ll need an RPC that supports Forking . Alchemy  includes forking in its free tier so it\u2019 s a great place to\nstart (sign up and get an API key here). You can then run the following Hardhat command to start your node:\n$ npx hardhat node --fork https://eth-mainnet.alchemyapi.io/v2/ {YOUR_API_KEY }\nCopy\nWith your local node up and running, you can use the --network localhost  flag in tests to point the Hardhat testing suite to\nthat local node:", "metadata": {"page_number": 459, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "905f6184fb19", "text": "Copy\nWith your local node up and running, you can use the --network localhost  flag in tests to point the Hardhat testing suite to\nthat local node:\n$ npx hardhat test --network localhost\nCopy\nNext Steps\nWith your environment set up you\u2019re ready to start building. Jump over to the guides section to learn about the Uniswap\nfunctions you can integrate with. Remember to add all contracts (.sol files) to the ./contracts  folder and their subsequent\ntests to the ./tests  folder . You can then test them against your local forked node by running:\n$ npx hardhat test --network localhost\nCopy\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nSingle Swaps\nSet Up Dependencies\nCompile a Basic Contract\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 459, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d22b93bdd272", "text": "Previous\nOverview\nNext\nSingle Swaps\nSet Up Dependencies\nCompile a Basic Contract\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 459, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d741b91ceef2", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 460, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "40826ab4e076", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nBitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside", "metadata": {"page_number": 461, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "25de51f7f76c", "text": "FixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside\nSqrtPriceMath\nSwapMath\nTick\nTickBitmap\nTickMath\nTransferHelper\nUnsafeMath\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000", "metadata": {"page_number": 461, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f54cf5303f17", "text": "V3 Protocol\nTechnical Reference\nCore\nLibraries\nLowGasSafeMathHelpful?\nOn this page\nLowGasSafeMath\nContains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nFunctions  \nadd \n  function  add(\n    uint256 x,\n    uint256 y\n  ) internal  pure returns (uint256 z)\nCopy\nReturns x + y , reverts if sum overflows uint256\nParameters:  \nName Type Description\nx uint256 The augend\ny uint256 The addend\nReturn Values:  \nName Type Description\nz uint256 The sum of x and y\nsub \n  function  sub(\n    uint256 x,\n    uint256 y", "metadata": {"page_number": 462, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ea8690e0676e", "text": "Return Values:  \nName Type Description\nz uint256 The sum of x and y\nsub \n  function  sub(\n    uint256 x,\n    uint256 y\n  ) internal  pure returns (uint256 z)\nCopy\nReturns x - y , reverts if underflows\nParameters:  \nName Type Description\nx uint256 The minuend\ny uint256 The subtrahend\nReturn Values:", "metadata": {"page_number": 462, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ace58a2d69c2", "text": "Name Type Description\nz uint256 The dif ference of x and y\nmul \n  function  mul(\n    uint256 x,\n    uint256 y\n  ) internal  pure returns (uint256 z)\nCopy\nReturns x * y, reverts if overflows\nParameters:  \nName Type Description\nx uint256 The multiplicand\ny uint256 The multiplier\nReturn Values:  \nName Type Description\nz uint256 The product of x and y\nadd \n  function  add(\n    int256 x,\n    int256 y\n  ) internal  pure returns (int256 z)\nCopy\nReturns x + y , reverts if overflows or underflows\nParameters:  \nName Type Description\nx int256 The augend", "metadata": {"page_number": 463, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "afe846df6f95", "text": ") internal  pure returns (int256 z)\nCopy\nReturns x + y , reverts if overflows or underflows\nParameters:  \nName Type Description\nx int256 The augend\ny int256 The addend\nReturn Values:  \nName Type Description\nz int256 The sum of x and y\nsub \n  function  sub(\n    int256 x,\n    int256 y\n  ) internal  pure returns (int256 z)\nCopy", "metadata": {"page_number": 463, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b8b485b35d81", "text": "Returns x - y , reverts if overflows or underflows\nParameters:  \nName Type Description\nx int256 The minuend\ny int256 The subtrahend\nReturn Values:  \nName Type Description\nz int256 The dif ference of x and y\nEdit this page\nHelpful?\nPrevious\nLiquidityMath\nNext\nOracle\nFunctions\nadd\nsub\nmul\nadd\nsub\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 464, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a56008cdb388", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 464, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e3249503d50a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nFees\nPricing\nUnderstanding Returns\nSecurity\nMath\nResearch\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol", "metadata": {"page_number": 466, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bdbd21c4dfaf", "text": "Security\nMath\nResearch\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nAdvanced Topics\nMathHelpful?\nMath\nThis section will be expanded in the future. In the mean time, the Uniswap V2 whitepaper  has most relevant math for\nUniswap V2.", "metadata": {"page_number": 466, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0cb2dadaf9e7", "text": "Edit this page\nHelpful?\nPrevious\nSecurity\nNext\nResearch\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 467, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d9334b170c20", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 468, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7277317192ad", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nMethodParametersHelpful?", "metadata": {"page_number": 468, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "931b6c0f6f7e", "text": "On this page\nMethodParameters\n@uniswap/v3-sdk  / Exports  / MethodParameters\nInterface: MethodParameters\nGenerated method parameters for executing a call.\nTable of contents  \nProperties \ncalldata\nvalue\nProperties  \ncalldata \n\u2022 calldata : string\nThe hex encoded calldata to perform the given operation\nDefined in  \nutils/calldata.ts:1 1\nvalue \n\u2022 value : string\nThe amount of ether (wei) to send in hex.\nDefined in  \nutils/calldata.ts:15\nEdit this page\nHelpful?\nPrevious\nIncreaseSpecificOptions\nNext\nMintSpecificOptions\nTable of contents\nProperties\nProperties", "metadata": {"page_number": 469, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a6e085019cfb", "text": "Edit this page\nHelpful?\nPrevious\nIncreaseSpecificOptions\nNext\nMintSpecificOptions\nTable of contents\nProperties\nProperties\ncalldata\nvalue", "metadata": {"page_number": 469, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d0276724a60", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 470, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "23ab908eb9bf", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nSet Up Your Contract\nMint a New Position\nCollecting Fees\nDecrease Liquidity\nIncrease Liquidity\nThe Full Contract\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nMint a New PositionHelpful?\nOn this page\nMint a New Position\nInput Parameters", "metadata": {"page_number": 471, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bdddc5a30e8e", "text": "V1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nMint a New PositionHelpful?\nOn this page\nMint a New Position\nInput Parameters  \nTo mint a new position, we use the nonFungiblePositionManager  and call mint .\nFor the sake of this example, we're hard coding the token amounts to be minted. In production, this would be a user -configurable function ar gument.\n    /// @notice Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 DAI and 1000 USDC \n    /// @return tokenId The id of the newly minted ERC721\n    /// @return liquidity The amount of liquidity for the position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function  mintNewPosition ()\n        external", "metadata": {"page_number": 471, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2f092901a04e", "text": "/// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function  mintNewPosition ()\n        external\n        returns (\n            uint256 tokenId ,\n            uint128 liquidity ,\n            uint256 amount0 ,\n            uint256 amount1\n        )\n    {\n        // For this example, we will provide equal amounts of liquidity in both assets.\n        // Providing liquidity in both assets means liquidity will be earning fees and is considered in-range.\n        uint256 amount0ToMint = 1000;\n        uint256 amount1ToMint = 1000;\nCopy\nCalling Mint  \nHere we approve the nonfungiblePositionManager  to use the contracts' tokens, then populate the MintParams  struct and assign it to a local variable params  that will be passed to the", "metadata": {"page_number": 471, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eac4165e0089", "text": "Copy\nCalling Mint  \nHere we approve the nonfungiblePositionManager  to use the contracts' tokens, then populate the MintParams  struct and assign it to a local variable params  that will be passed to the\nnonfungiblePositionManager  when we call mint .\nBy using TickMath.MIN_TICK  and TickMath.MAX_TICK , we are providing liquidity across the whole range of the pool. In production you may want to specify a more concentrated\nposition.\nWe set amount0Min  and amount1Min  to zero for the example - but this would be a vulnerability in production. A function calling mint  with no slippage protection would be vulnerable\nto a frontrunning attack designed to execute the mint  call at an inaccurate price.\nFor a more secure practice the developer would need to implement a slippage estimation process.\nNote that this function will not initialize a pool where one does not yet exist.\n        // Approve the position manager", "metadata": {"page_number": 471, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2a03b0b150ca", "text": "For a more secure practice the developer would need to implement a slippage estimation process.\nNote that this function will not initialize a pool where one does not yet exist.\n        // Approve the position manager\n        TransferHelper .safeApprove (DAI, address(nonfungiblePositionManager ), amount0ToMint );\n        TransferHelper .safeApprove (USDC, address(nonfungiblePositionManager ), amount1ToMint );", "metadata": {"page_number": 471, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "06835cdd1c69", "text": "INonfungiblePositionManager .MintParams memory params =\n            INonfungiblePositionManager .MintParams ({\n                token0 : DAI,\n                token1 : USDC,\n                fee : poolFee ,\n                tickLower : TickMath .MIN_TICK ,\n                tickUpper : TickMath .MAX_TICK ,\n                amount0Desired : amount0ToMint ,\n                amount1Desired : amount1ToMint ,\n                amount0Min : 0,\n                amount1Min : 0,\n                recipient : address(this),\n                deadline : block.timestamp\n            });\n        // Note that the pool defined by DAI/USDC and fee tier 0.3% must already be created and initialized in order to mint\n        (tokenId, liquidity , amount0 , amount1 ) = nonfungiblePositionManager .mint(params);\nCopy", "metadata": {"page_number": 472, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b6adff87c08", "text": "(tokenId, liquidity , amount0 , amount1 ) = nonfungiblePositionManager .mint(params);\nCopy\nUpdating The Deposit Mapping And Refunding The Calling Addr ess \nNow we can call the internal function we previously wrote in Setting Up Your Contract . After that, we can take any liquidity leftover from minting and refund it to msg.sender .\n        // Create a deposit\n        _createDeposit (msg.sender, tokenId );\n        // Remove allowance and refund in both assets.\n        if (amount0 < amount0ToMint ) {\n            TransferHelper .safeApprove (DAI, address(nonfungiblePositionManager ), 0);\n            uint256 refund0 = amount0ToMint - amount0 ;\n            TransferHelper .safeTransfer (DAI, msg.sender, refund0 );\n        }\n        if (amount1 < amount1ToMint ) {", "metadata": {"page_number": 472, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6a9ebde64f84", "text": "uint256 refund0 = amount0ToMint - amount0 ;\n            TransferHelper .safeTransfer (DAI, msg.sender, refund0 );\n        }\n        if (amount1 < amount1ToMint ) {\n            TransferHelper .safeApprove (USDC, address(nonfungiblePositionManager ), 0);\n            uint256 refund1 = amount1ToMint - amount1 ;\n            TransferHelper .safeTransfer (USDC, msg.sender, refund1 );\n        }\n    }\nCopy\nThe Full Example  \n    /// @notice Calls the mint function defined in periphery, mints the same amount of each token. For this example we are providing 1000 DAI and 1000 USDC \n    /// @return tokenId The id of the newly minted ERC721\n    /// @return liquidity The amount of liquidity for the position", "metadata": {"page_number": 472, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fad9461a7c5a", "text": "/// @return tokenId The id of the newly minted ERC721\n    /// @return liquidity The amount of liquidity for the position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function  mintNewPosition ()\n        external\n        returns (\n            uint256 tokenId ,\n            uint128 liquidity ,\n            uint256 amount0 ,\n            uint256 amount1\n        )\n    {\n        // For this example, we will provide equal amounts of liquidity in both assets.\n        // Providing liquidity in both assets means liquidity will be earning fees and is considered in-range.\n        uint256 amount0ToMint = 1000;\n        uint256 amount1ToMint = 1000;\n        // Approve the position manager", "metadata": {"page_number": 472, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c15337535052", "text": "// Providing liquidity in both assets means liquidity will be earning fees and is considered in-range.\n        uint256 amount0ToMint = 1000;\n        uint256 amount1ToMint = 1000;\n        // Approve the position manager\n        TransferHelper .safeApprove (DAI, address(nonfungiblePositionManager ), amount0ToMint );\n        TransferHelper .safeApprove (USDC, address(nonfungiblePositionManager ), amount1ToMint );\n        INonfungiblePositionManager .MintParams memory params =\n            INonfungiblePositionManager .MintParams ({\n                token0 : DAI,\n                token1 : USDC,\n                fee : poolFee ,\n                tickLower : TickMath .MIN_TICK ,\n                tickUpper : TickMath .MAX_TICK ,\n                amount0Desired : amount0ToMint ,\n                amount1Desired : amount1ToMint ,", "metadata": {"page_number": 472, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ce473456930b", "text": "tickLower : TickMath .MIN_TICK ,\n                tickUpper : TickMath .MAX_TICK ,\n                amount0Desired : amount0ToMint ,\n                amount1Desired : amount1ToMint ,\n                amount0Min : 0,\n                amount1Min : 0,\n                recipient : address(this),\n                deadline : block.timestamp\n            });\n        // Note that the pool defined by DAI/USDC and fee tier 0.3% must already be created and initialized in order to mint\n        (tokenId, liquidity , amount0 , amount1 ) = nonfungiblePositionManager .mint(params);\n        // Create a deposit\n        _createDeposit (msg.sender, tokenId );\n        // Remove allowance and refund in both assets.\n        if (amount0 < amount0ToMint ) {", "metadata": {"page_number": 472, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2148d9db220d", "text": "// Create a deposit\n        _createDeposit (msg.sender, tokenId );\n        // Remove allowance and refund in both assets.\n        if (amount0 < amount0ToMint ) {\n            TransferHelper .safeApprove (DAI, address(nonfungiblePositionManager ), 0);\n            uint256 refund0 = amount0ToMint - amount0 ;\n            TransferHelper .safeTransfer (DAI, msg.sender, refund0 );\n        }\n        if (amount1 < amount1ToMint ) {\n            TransferHelper .safeApprove (USDC, address(nonfungiblePositionManager ), 0);\n            uint256 refund1 = amount1ToMint - amount1 ;", "metadata": {"page_number": 472, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a452609432c1", "text": "TransferHelper .safeTransfer (USDC, msg.sender, refund1 );\n        }\n    }\nCopy\nEdit this page\nHelpful?\nPrevious\nSet Up Your Contract\nNext\nCollecting Fees\nInput Parameters\nCalling Mint\nUpdating The Deposit Mapping And Refunding The Calling Address\nThe Full Example\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 473, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "71e50dd1d89e", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 473, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "65211316671f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nMinting a Position\nAdding & Removing Liquidity\nCollecting Fees\nSwapping and Adding Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nGuides\nPooling Liquidity\nMinting a PositionHelpful?\nOn this page\nMinting a Position\nIntroduction", "metadata": {"page_number": 474, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "240e6f2648dc", "text": "V1 SDK\n\u0000\nV3 SDK\nGuides\nPooling Liquidity\nMinting a PositionHelpful?\nOn this page\nMinting a Position\nIntroduction  \nThis guide will cover how to create (or mint) a liquidity position on the Uniswap V3 protocol. It is based on the minting a\nposition code example , found in the Uniswap code examples repository . To run this example, check out the examples's\nREADME  and follow the setup instructions.\ninfo\nIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository , please visit\nour background  page!\nIn the Uniswap V3 protocol, liquidity positions are represented using non-fungible tokens. In this guide we will use the\nNonfungiblePositionManager  class to help us mint a liquidity position for the USDC - DAI  pair. The inputs to our guide", "metadata": {"page_number": 474, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e0f60b030e00", "text": "NonfungiblePositionManager  class to help us mint a liquidity position for the USDC - DAI  pair. The inputs to our guide\nare the two tokens  that we are pooling for , the amount  of each token we are pooling for and the Pool fee.", "metadata": {"page_number": 474, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5e8189a83d17", "text": "The guide will cover :\n1. Giving approval to transfer our tokens\n2. Creating an instance of a Pool\n3. Calculating our Position  from our input tokens\n4. Configuring and executing our minting transaction\nAt the end of the guide, given the inputs above, we should be able to mint a liquidity position with the press of a button and\nview the position on the UI of the web application.\nFor this guide, the following Uniswap packages are used:\n@uniswap/v3-sdk\n@uniswap/sdk-core\n@uniswap/smart-order-router\nThe core code of this guide can be found in mintPosition()\nGiving appr oval to transfer  our tokens  \nThe first step is to give approval to the protocol's NonfungiblePositionManager  to transfer our tokens:\nApproving our tokens for transferring\nloading...", "metadata": {"page_number": 475, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "37da16f7b842", "text": "Giving appr oval to transfer  our tokens  \nThe first step is to give approval to the protocol's NonfungiblePositionManager  to transfer our tokens:\nApproving our tokens for transferring\nloading...\nCopy\nView on Github\nThe logic to achieve that is wrapped in the getTokenTransferApprovals  function. In short, since both USDC  and DAI are\nERC20 tokens, we setup a reference to their smart contracts and call the approve  function:\nSetting up an ERC20 contract reference and approving\nloading...\nCopy\nView on Github\nCreating an instance of a Pool  \nHaving approved the transfer of our tokens, we now need to get data about the pool for which we will provide liquidity , in\norder to instantiate a Pool class.\nTo start, we compute our Pool's address by using a helper function and passing in the unique identifiers of a Pool - the two", "metadata": {"page_number": 475, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "64716de127a8", "text": "order to instantiate a Pool class.\nTo start, we compute our Pool's address by using a helper function and passing in the unique identifiers of a Pool - the two\ntokens  and the Pool fee. The fee input parameter represents the swap fee that is distributed to all in range liquidity at the\ntime of the swap:\nComputing the Pool's address\nloading...\nCopy\nView on Github\nThen, we get the Pool's data by creating a reference to the Pool's smart contract and accessing its methods:\nSetting up a Pool contract reference and fetching current state data\nloading...", "metadata": {"page_number": 475, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b6173d6efde7", "text": "Copy\nView on Github\nHaving collected the required data, we can now create an instance of the Pool  class:\nFetching pool data and creating an instance of the Pool class\nloading...\nCopy\nView on Github\nCalculating our  Position  from our  input tokens  \nHaving created the instance of the Pool  class, we can now use that to create an instance of a Position  class, which\nrepresents the price range for a specific pool that LPs choose to provide in:\nCreate a Position representation instance\nloading...\nCopy\nView on Github\nWe use the fromAmounts  static function of the Position  class to create an instance of it, which uses the following\nparameters:\nThe tickLower  and tickUpper  parameters specify the price range at which to provide liquidity . This example calls\nnear estUsableT ick to get the current useable tick and adjust the lower parameter to be below it by two tickSpacing", "metadata": {"page_number": 476, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7c9438915a21", "text": "parameters:\nThe tickLower  and tickUpper  parameters specify the price range at which to provide liquidity . This example calls\nnear estUsableT ick to get the current useable tick and adjust the lower parameter to be below it by two tickSpacing\nand the upper to be above it by two tickSpacing. This guarantees that the provided liquidity is \"in range\", meaning it\nwill be earning fees upon minting this position\namount0  and amount1  define the maximum amount of currency the liquidity position can use. In this example, we\nsupply these from our configuration parameters.\nGiven those parameters, fromAmounts  will attempt to calculate the maximum amount of liquidity we can supply .\nConfiguring and executing our  minting transaction  \nThe Position instance is then passed as input to the NonfungiblePositionManager 's addCallParameters  function. The\nfunction also requires an AddLiquidityOptions  object as its second parameter . This is either of type MintOptions  for", "metadata": {"page_number": 476, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e48f241cf761", "text": "The Position instance is then passed as input to the NonfungiblePositionManager 's addCallParameters  function. The\nfunction also requires an AddLiquidityOptions  object as its second parameter . This is either of type MintOptions  for\nminting a new position or IncreaseOptions  for adding liquidity to an existing position. For this example, we're using a\nMintOptions  to create our position.\nGetting the transaction calldata and parameters\nloading...\nCopy\nView on Github\nThe function returns the calldata as well as the value required to execute the transaction:\nSubmitting the Position NFT  minting transaction\nloading...\nCopy\nView on Github", "metadata": {"page_number": 476, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6cd6fba177da", "text": "The ef fect of the transaction is to mint a new Position NFT . We should see a new position with liquidity in our list of\npositions.\nNext Steps  \nOnce you have minted a position, our next guide ( Adding and Removing Liquidity ) will demonstrate how you can add and\nremove liquidity from that minted position!\nEdit this page\nHelpful?\nPrevious\nRouting a Swap\nNext\nAdding & Removing Liquidity\nIntroduction\nGiving approval to transfer our tokens\nCreating an instance of a Pool\nCalculating our Position  from our input tokens\nConfiguring and executing our minting transaction\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 477, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "297ef1a2805c", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 477, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "950b5ed3f13c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 478, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a360650ba6fe", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nMintSpecificOptionsHelpful?", "metadata": {"page_number": 478, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "063d6b046cb8", "text": "On this page\nMintSpecificOptions\n@uniswap/v3-sdk  / Exports  / MintSpecificOptions\nInterface: MintSpecificOptions\nTable of contents  \nProperties \ncreatePool\nrecipient\nProperties  \ncreatePool \n\u2022 Optional  createPool : boolean\nCreates pool if not initialized before mint.\nDefined in  \nnonfungiblePositionManager .ts:34\nrecipient \n\u2022 recipient : string\nThe account that should receive the minted NFT .\nDefined in  \nnonfungiblePositionManager .ts:29\nEdit this page\nHelpful?\nPrevious\nMethodParameters\nNext\nNFTPermitOptions\nTable of contents\nProperties\nProperties\ncreatePool\nrecipient\nDevelopers", "metadata": {"page_number": 479, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "23e7af29f203", "text": "Previous\nMethodParameters\nNext\nNFTPermitOptions\nTable of contents\nProperties\nProperties\ncreatePool\nrecipient\nDevelopers", "metadata": {"page_number": 479, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc81ab2d4dce", "text": "Feedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 480, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3159ffb84142", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 481, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0dd2a7a1882f", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 481, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e62f8fc67d8", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nMockT imeNonfungiblePositionManagerHelpful?\nOn this page\nMockT imeNonfungiblePositionManager\nFunctions  \nconstructor \n  function  constructor (\n  ) public\nCopy\n_blockTimestamp \n  function  _blockTimestamp (\n  ) internal  returns (uint256)\nCopy\nsetTime \n  function  setTime(\n  ) external\nCopy\nEdit this page\nHelpful?\nPrevious\nLiquidityAmountsT est\nNext\nMockT imeSwapRouter\nFunctions\nconstructor\n_blockT imestamp\nsetTime\nDevelopers\nFeedback", "metadata": {"page_number": 482, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "494c6e24f6cd", "text": "LiquidityAmountsT est\nNext\nMockT imeSwapRouter\nFunctions\nconstructor\n_blockT imestamp\nsetTime\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 482, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2d9285b370b8", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 483, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ca990f35ed1", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 484, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fd6c2b31a315", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 484, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "481b664e1371", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nMockT imeSwapRouterHelpful?\nOn this page\nMockT imeSwapRouter\nFunctions  \nconstructor \n  function  constructor (\n  ) public\nCopy\n_blockTimestamp \n  function  _blockTimestamp (\n  ) internal  returns (uint256)\nCopy\nsetTime \n  function  setTime(\n  ) external\nCopy\nEdit this page\nHelpful?\nPrevious\nMockT imeNonfungiblePositionManager\nNext\nNFTDescriptorT est\nFunctions\nconstructor\n_blockT imestamp\nsetTime\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 485, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "76a40f395cda", "text": "Next\nNFTDescriptorT est\nFunctions\nconstructor\n_blockT imestamp\nsetTime\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 485, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5e9550eb978c", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 486, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4cef16a6372a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nMinting a Position\nAdding & Removing Liquidity\nCollecting Fees\nSwapping and Adding Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nGuides\nPooling Liquidity\nAdding & Removing LiquidityHelpful?\nOn this page\nAdding & Removing Liquidity\nIntroduction", "metadata": {"page_number": 487, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d686671e2735", "text": "\u0000\nV3 SDK\nGuides\nPooling Liquidity\nAdding & Removing LiquidityHelpful?\nOn this page\nAdding & Removing Liquidity\nIntroduction  \nThis guide will cover how to modify a liquidity position by adding or removing liquidity on the Uniswap V3 protocol. It is\nbased on the modifying a position code example , found in the Uniswap code examples repository . To run this example,\ncheck out the examples's README  and follow the setup instructions.\ninfo\nIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository , please visit\nour background  page!\nIn the Uniswap V3 protocol, liquidity positions are represented using non-fungible tokens. In this guide we will use the\nNonfungiblePositionManager  class to help us mint a liquidity position and then modify the provided liquidity for the", "metadata": {"page_number": 487, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1a2b2dc62258", "text": "USDC - DAI  pair. The inputs to our guide are the two tokens  that we are pooling for , the amount  of each token we are\npooling for , the Pool fee and the fraction  by which to add and r emove  from our position.\nThe guide will cover :\n1. Adding liquidity to our position\n2. Removing liquidity from our position\nAt the end of the guide, given the inputs above, we should be able to add or remove liquidity from a minted position with the\npress of a button and see the change reflected in our position and the balance of our tokens.\nFor this guide, the following Uniswap packages are used:\n@uniswap/v3-sdk\n@uniswap/sdk-core\nThe core code of this guide can be found in addLiquidity()  and removeLiquidity()\nnote\nThis guide assumes you are familiar with our Minting a Position  guide. A minted position is required to add or remove", "metadata": {"page_number": 488, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "03598c96887b", "text": "The core code of this guide can be found in addLiquidity()  and removeLiquidity()\nnote\nThis guide assumes you are familiar with our Minting a Position  guide. A minted position is required to add or remove\nliquidity from, so the buttons will be disabled until a position is minted.\nAlso note that we do not need to give approval to the NonfungiblePositionManager  to transfer our tokens as we will have\nalready done that when minting our position.\nAdding liquidity to our  position  \nAssuming we have already minted a position, our first step is to construct the modified position using our original position\nto calculate the amount by which we want to increase our current position:\nCreating the Position\nloading...\nCopy\nView on Github\nThe function receives two ar guments, which are the CurrencyAmount s that are used to construct the Position instance. In this", "metadata": {"page_number": 488, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a9db6b51b050", "text": "Creating the Position\nloading...\nCopy\nView on Github\nThe function receives two ar guments, which are the CurrencyAmount s that are used to construct the Position instance. In this\nexample, both of the ar guments follow the same logic: we multiply the parameterized tokenAmount  by the parameterized\nfractionToAdd  since the new liquidity position will be added on top of the already minted liquidity position.\nWe then need to construct an options object of type AddLiquidityOptions  similar to how we did in the minting case. In this\ncase, we will use IncreaseOptions :\nConstructing the options object\nloading...\nCopy\nView on Github\nCompared to minting, we have we have omitted the recipient  parameter and instead passed in the tokenId  of the position\nwe previously minted.\nThe newly created position along with the options object are then passed to the NonfungiblePositionManager 's", "metadata": {"page_number": 488, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a8d49d8a0b2e", "text": "Compared to minting, we have we have omitted the recipient  parameter and instead passed in the tokenId  of the position\nwe previously minted.\nThe newly created position along with the options object are then passed to the NonfungiblePositionManager 's\naddCallParameters :\nPassing the position and options object to addCallParameters", "metadata": {"page_number": 488, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "622cc850147f", "text": "loading...\nCopy\nView on Github\nThe return values of addCallParameters  are the calldata and value of the transaction we need to submit to increase our\nposition's liquidity . We can now build and execute the transaction:\nBuilding and submitting the transaction\nloading...\nCopy\nView on Github\nAfter pressing the button, note how the balance of USDC and DAI drops and our position's liquidity increases.\nRemoving liquidity fr om our  position  \nThe removeLiquidity  function is the mirror action of adding liquidity and will be somewhat similar as a result, requiring a\nposition to already be minted.\nTo start, we create a position identical to the one we minted:\nCreating an identical position as minting\nloading...\nCopy\nView on Github\nWe then need to construct an options object of type RemoveLiquidityOptions :", "metadata": {"page_number": 489, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9c9d36c3de3e", "text": "Creating an identical position as minting\nloading...\nCopy\nView on Github\nWe then need to construct an options object of type RemoveLiquidityOptions :\nConstructing the options object\nloading...\nCopy\nView on Github\nJust as with adding liquidity , we have we have omitted the recipient  parameter and instead passed in the tokenId  of the\nposition we previously minted.\nWe have also provide two additional parameters:\nliquidityPercentage  determines how much liquidity is removed from our initial position (as a Percentage ), and\ntransfers the removed liquidity back to our address. We set this percentage from our guide configuration ranging from\n0 (0%) to 1 (100%).\ncollectOptions  gives us the option to collect the fees, if any , that we have accrued for this position. In this example,", "metadata": {"page_number": 489, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2dc20624422c", "text": "0 (0%) to 1 (100%).\ncollectOptions  gives us the option to collect the fees, if any , that we have accrued for this position. In this example,\nwe won't collect any fees, so we provide zero values. If you'd like to see how to collect fees without modifying your\nposition, check out our collecting fees  guide!\nConstructing the collect options object\nloading...\nCopy\nView on Github\nThe position object along with the options object is passed to the NonfungiblePositionManager 's removeCallParameters ,\nsimilar to how we did in the adding liquidity case:", "metadata": {"page_number": 489, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fe624eb4a2d3", "text": "Getting the calldata and value for the transaction\nloading...\nCopy\nView on Github\nThe return values removeCallParameters  are the calldata and value that are needed to construct the transaction to remove\nliquidity from our position. We can build the transaction and send it for execution:\nBuilding and submitting the transaction\nloading...\nCopy\nView on Github\nAfter pressing the button, note how the balance of USDC and DAI increases and our position's liquidity drops.\nNext Steps  \nNow that you can mint and modify a position, check out how to collect fees  from the position!\nEdit this page\nHelpful?\nPrevious\nMinting a Position\nNext\nCollecting Fees\nIntroduction\nAdding liquidity to our position\nRemoving liquidity from our position\nNext Steps\nDevelopers\nFeedback", "metadata": {"page_number": 490, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f486d2889d2a", "text": "Previous\nMinting a Position\nNext\nCollecting Fees\nIntroduction\nAdding liquidity to our position\nRemoving liquidity from our position\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 490, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "826bdd232f0c", "text": "Governance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 491, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8a6411223afb", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 492, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4dc0e92f2174", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 492, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6dcd915a0514", "text": "classes\nMulticall\nOn this page\nMulticall\n@uniswap/v3-sdk  / Exports  / Multicall\nClass: Multicall\nTable of contents  \nConstructors \nconstructor\nProperties \nINTERF ACE\nMethods \nencodeMulticall\nConstructors  \nconstructor \n\u2022 Private  new Multicall ()\nCannot be constructed.\nDefined in  \nmulticall.ts:10\nProperties  \nINTERFACE \n\u25aa Static  INTERF ACE : Interface\nDefined in  \nmulticall.ts:5\nMethods  \nencodeMulticall \n\u25b8 Static  encodeMulticall (calldatas ): string", "metadata": {"page_number": 493, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e5f1424b437", "text": "Parameters  \nName Type\ncalldatas string  | string []\nReturns  \nstring\nDefined in  \nmulticall.ts:12\nEdit this page\nHelpful?\nPrevious\nLiquidityMath\nNext\nNoTickDataProvider\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nINTERF ACE\nMethods\nencodeMulticall\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 494, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5fd97fd83cc2", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord", "metadata": {"page_number": 494, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae6a1d4661b3", "text": "Twitter\nBlog", "metadata": {"page_number": 495, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5485b7fd3407", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nSingle Swaps\nMultihop Swaps\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement A Swap\nMultihop SwapsHelpful?\nOn this page\nMultihop Swaps\nIntroduction", "metadata": {"page_number": 496, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32edbc4fa5f4", "text": "V1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement A Swap\nMultihop SwapsHelpful?\nOn this page\nMultihop Swaps\nIntroduction  \nThe examples below are implementations of the two styles of multi-hop swapping available on v3. The examples below are not production ready code, and are implemented in a simplistic\nmanner for the purpose of learning.\nSetting up the Contract  \nDeclare the solidity version that will be used to compile the contract, and the abicoder v2  to allow arbitrary nested arrays and structs to be encoded and decoded in calldata, a feature we\nuse when executing a swap.\n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nCopy\nImport the two needed contracts from the npm package installation.", "metadata": {"page_number": 496, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4896cf3b87f1", "text": "pragma solidity  =0.7.6;\npragma abicoder v2 ;\nCopy\nImport the two needed contracts from the npm package installation.\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nCopy\nCreate a contract called SwapExamples , and declare an immutable public variable swapRouter  of type ISwapRouter . This allows us to call functions in the ISwapRouter  interface.\ncontract  SwapExamples  {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.", "metadata": {"page_number": 496, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e369a473243b", "text": "// For the scope of these swap examples,\n    // we will detail the design considerations when using `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n    // It should be noted that for the sake of these examples we pass in the swap router as a constructor argument instead of inheriting it.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n    ISwapRouter public immutable swapRouter ;\nCopy\nHardcode the token contract addresses and pool fee tiers for the example. In production, you would likely use an input parameter for this and pass the input into a memory variable,\nallowing the contract to change the pools and tokens it interacts with on a per transaction basis, but for conceptual simplicity , we are hardcoding them here.", "metadata": {"page_number": 496, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2217a3c966a5", "text": "allowing the contract to change the pools and tokens it interacts with on a per transaction basis, but for conceptual simplicity , we are hardcoding them here.\n    address public constant  DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;\n    address public constant  WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 ;\n    address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant  poolFee = 3000;\n    constructor (ISwapRouter _swapRouter ) {\n        swapRouter = _swapRouter ;\n    }", "metadata": {"page_number": 496, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dcfa8d91f3c7", "text": "Copy\nExact Input Multi Hop Swaps  \nExact input multi hop swaps will swap a fixed amount on a given input token for the maximum amount possible for a given output, and can include an arbitrary number of intermediary\nswaps.\nInput Parameters \npath : The path is a sequence of ( tokenAddress  - fee - tokenAddress ), which are the variables needed to compute each pool contract address in our sequence of swaps. The multihop\nswap router code will automatically find the correct pool with these variables, and execute the swap needed within each pool in our sequence.\nrecipient : the destination address of the outbound asset.\ndeadline : the unix time after which a transaction will be reverted, to protect against long delays and the increased chance of lar ge price swings therein.\namountIn : the amount of the inbound asset\namountOutMin : the minimum amount of the outbound asset, less than which will cause the transaction to revert. For the sake of this example we will set it to 0, in production one will", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7b071330b781", "text": "amountIn : the amount of the inbound asset\namountOutMin : the minimum amount of the outbound asset, less than which will cause the transaction to revert. For the sake of this example we will set it to 0, in production one will\nneed to use the SDK to quote an expected price, or an on chain price oracle for more advanced manipulation resistant systems.\nCalling the function\n    /// @notice swapExactInputMultihop swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\n    /// For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The amount of DAI to be swapped.\n    /// @return amountOut The amount of WETH9 received after the swap.", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db147f215c58", "text": "/// @param amountIn The amount of DAI to be swapped.\n    /// @return amountOut The amount of WETH9 received after the swap.\n    function  swapExactInputMultihop (uint256 amountIn ) external  returns (uint256 amountOut ) {\n        // Transfer `amountIn` of DAI to this contract.\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountIn );\n        // Approve the router to spend DAI.\n        TransferHelper .safeApprove (DAI, address(swapRouter ), amountIn );\n        // Multiple pool swaps are encoded through bytes called a `path`. A path is a sequence of token addresses and poolFees that define the pools used in\n        // The format for pool encoding is (tokenIn, fee, tokenOut/tokenIn, fee, tokenOut) where tokenIn/tokenOut parameter is the shared token across the p", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8bdc750d7123", "text": "// The format for pool encoding is (tokenIn, fee, tokenOut/tokenIn, fee, tokenOut) where tokenIn/tokenOut parameter is the shared token across the p\n        // Since we are swapping DAI to USDC and then USDC to WETH9 the path encoding is (DAI, 0.3%, USDC, 0.3%, WETH9).\n        ISwapRouter .ExactInputParams memory params =\n            ISwapRouter .ExactInputParams ({\n                path : abi.encodePacked (DAI, poolFee , USDC, poolFee , WETH9),\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountIn : amountIn ,\n                amountOutMinimum : 0\n            });\n        // Executes the swap.\n        amountOut = swapRouter .exactInput (params);\n    }\nCopy\nExact Output Multihop Swap", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a8bc30622e4b", "text": "amountOutMinimum : 0\n            });\n        // Executes the swap.\n        amountOut = swapRouter .exactInput (params);\n    }\nCopy\nExact Output Multihop Swap  \nAn exact output swap will swap a variable amount of the input token for a fixed amount of the outbound token. This is the less common technique for multihop swaps. The code for\nswapping is lar gely the same except for one notable dif ference, the Path  is encoded backwards, as an exact output swap is executed in reverse order to pass down the necessary variables\nfor the chain of transactions\nInput Parameters \npath : The path is a sequence of tokenAddress  Fee tokenAddress , encoded in r everse or der, which are the variables needed to compute each pool contract address in our sequence of\nswaps. The multihop swap router code will automatically find the correct pool with these variables, and execute the swap needed within each pool in our sequence.", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f401cfa89d7c", "text": "swaps. The multihop swap router code will automatically find the correct pool with these variables, and execute the swap needed within each pool in our sequence.\nrecipient : the destination address of the outbound asset.\ndeadline : the unix time after which a transaction will be reverted, to protect against long delays and the increased chance of lar ge price swings therein.\namountOut : The desired amount of WETH9.\namountInMaximum : The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\nCalling the function\n    /// @notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool.\n    /// For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is s\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "af4580e6d89c", "text": "/// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The desired amount of WETH9.\n    /// @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\n    /// @return amountIn The amountIn of DAI actually spent to receive the desired amountOut.\n    function  swapExactOutputMultihop (uint256 amountOut , uint256 amountInMaximum ) external  returns (uint256 amountIn ) {\n        // Transfer the specified `amountInMaximum` to this contract.\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountInMaximum );\n        // Approve the router to spend  `amountInMaximum`.", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9599be6d6b5d", "text": "TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountInMaximum );\n        // Approve the router to spend  `amountInMaximum`.\n        TransferHelper .safeApprove (DAI, address(swapRouter ), amountInMaximum );\n        // The parameter path is encoded as (tokenOut, fee, tokenIn/tokenOut, fee, tokenIn)\n        // The tokenIn/tokenOut field is the shared token between the two pools used in the multiple pool swap. In this case USDC is the \"shared\" token.\n        // For an exactOutput swap, the first swap that occurs is the swap which returns the eventual desired token.\n        // In this case, our desired output token is WETH9 so that swap happens first, and is encoded in the path accordingly.\n        ISwapRouter .ExactOutputParams memory params =\n            ISwapRouter .ExactOutputParams ({", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eaa3caa24ddb", "text": "// In this case, our desired output token is WETH9 so that swap happens first, and is encoded in the path accordingly.\n        ISwapRouter .ExactOutputParams memory params =\n            ISwapRouter .ExactOutputParams ({\n                path : abi.encodePacked (WETH9, poolFee , USDC, poolFee , DAI),\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountOut : amountOut ,\n                amountInMaximum : amountInMaximum\n            });\n        // Executes the swap, returning the amountIn actually spent.\n        amountIn = swapRouter .exactOutput (params);", "metadata": {"page_number": 497, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "82a05145f231", "text": "// If the swap did not require the full amountInMaximum to achieve the exact amountOut then we refund msg.sender and approve the router to spend 0.\n        if (amountIn < amountInMaximum ) {\n            TransferHelper .safeApprove (DAI, address(swapRouter ), 0);\n            TransferHelper .safeTransferFrom (DAI, address(this), msg.sender, amountInMaximum - amountIn );\n        }\n    }\nCopy\nThe Full Contract  \n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "73653bae7943", "text": "import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;\ncontract  SwapExamples  {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n    ISwapRouter public immutable swapRouter ;\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d76114cfc6c8", "text": "ISwapRouter public immutable swapRouter ;\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n    address public constant  DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;\n    address public constant  WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 ;\n    address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant  poolFee = 3000;\n    constructor (ISwapRouter _swapRouter ) {\n        swapRouter = _swapRouter ;\n    }", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "469c901e2f7b", "text": "uint24 public constant  poolFee = 3000;\n    constructor (ISwapRouter _swapRouter ) {\n        swapRouter = _swapRouter ;\n    }\n    /// @notice swapInputMultiplePools swaps a fixed amount of DAI for a maximum possible amount of WETH9 through an intermediary pool.\n    /// For this example, we will swap DAI to USDC, then USDC to WETH9 to achieve our desired output.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The amount of DAI to be swapped.\n    /// @return amountOut The amount of WETH9 received after the swap.\n    function  swapExactInputMultihop (uint256 amountIn ) external  returns (uint256 amountOut ) {\n        // Transfer `amountIn` of DAI to this contract.", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ccb814abf9d5", "text": "function  swapExactInputMultihop (uint256 amountIn ) external  returns (uint256 amountOut ) {\n        // Transfer `amountIn` of DAI to this contract.\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountIn );\n        // Approve the router to spend DAI.\n        TransferHelper .safeApprove (DAI, address(swapRouter ), amountIn );\n        // Multiple pool swaps are encoded through bytes called a `path`. A path is a sequence of token addresses and poolFees that define the pools used in\n        // The format for pool encoding is (tokenIn, fee, tokenOut/tokenIn, fee, tokenOut) where tokenIn/tokenOut parameter is the shared token across the p\n        // Since we are swapping DAI to USDC and then USDC to WETH9 the path encoding is (DAI, 0.3%, USDC, 0.3%, WETH9).", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7f5f35e203de", "text": "// Since we are swapping DAI to USDC and then USDC to WETH9 the path encoding is (DAI, 0.3%, USDC, 0.3%, WETH9).\n        ISwapRouter .ExactInputParams memory params =\n            ISwapRouter .ExactInputParams ({\n                path : abi.encodePacked (DAI, poolFee , USDC, poolFee , WETH9),\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountIn : amountIn ,\n                amountOutMinimum : 0\n            });\n        // Executes the swap.\n        amountOut = swapRouter .exactInput (params);\n    }\n    /// @notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool.", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7ff8d78ae196", "text": "amountOut = swapRouter .exactInput (params);\n    }\n    /// @notice swapExactOutputMultihop swaps a minimum possible amount of DAI for a fixed amount of WETH through an intermediary pool.\n    /// For this example, we want to swap DAI for WETH9 through a USDC pool but we specify the desired amountOut of WETH9. Notice how the path encoding is s\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The desired amount of WETH9.\n    /// @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\n    /// @return amountIn The amountIn of DAI actually spent to receive the desired amountOut.", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e88e314ebb39", "text": "/// @param amountInMaximum The maximum amount of DAI willing to be swapped for the specified amountOut of WETH9.\n    /// @return amountIn The amountIn of DAI actually spent to receive the desired amountOut.\n    function  swapExactOutputMultihop (uint256 amountOut , uint256 amountInMaximum ) external  returns (uint256 amountIn ) {\n        // Transfer the specified `amountInMaximum` to this contract.\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountInMaximum );\n        // Approve the router to spend  `amountInMaximum`.\n        TransferHelper .safeApprove (DAI, address(swapRouter ), amountInMaximum );\n        // The parameter path is encoded as (tokenOut, fee, tokenIn/tokenOut, fee, tokenIn)", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc15e38baba0", "text": "TransferHelper .safeApprove (DAI, address(swapRouter ), amountInMaximum );\n        // The parameter path is encoded as (tokenOut, fee, tokenIn/tokenOut, fee, tokenIn)\n        // The tokenIn/tokenOut field is the shared token between the two pools used in the multiple pool swap. In this case USDC is the \"shared\" token.\n        // For an exactOutput swap, the first swap that occurs is the swap which returns the eventual desired token.\n        // In this case, our desired output token is WETH9 so that swap happpens first, and is encoded in the path accordingly.\n        ISwapRouter .ExactOutputParams memory params =\n            ISwapRouter .ExactOutputParams ({\n                path : abi.encodePacked (WETH9, poolFee , USDC, poolFee , DAI),\n                recipient : msg.sender,\n                deadline : block.timestamp ,", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "98537536fe09", "text": "path : abi.encodePacked (WETH9, poolFee , USDC, poolFee , DAI),\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountOut : amountOut ,\n                amountInMaximum : amountInMaximum\n            });\n        // Executes the swap, returning the amountIn actually spent.\n        amountIn = swapRouter .exactOutput (params);\n        // If the swap did not require the full amountInMaximum to achieve the exact amountOut then we refund msg.sender and approve the router to spend 0.\n        if (amountIn < amountInMaximum ) {\n            TransferHelper .safeApprove (DAI, address(swapRouter ), 0);\n            TransferHelper .safeTransferFrom (DAI, address(this), msg.sender, amountInMaximum - amountIn );", "metadata": {"page_number": 498, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "60646537e968", "text": "}\n    }\n}\nCopy\nEdit this page\nHelpful?\nPrevious\nSingle Swaps\nNext\nSet Up Your Contract\nIntroduction\nSetting up the Contract\nExact Input Multi Hop Swaps\nInput Parameters\nCalling the function\nExact Output Multihop Swap\nInput Parameters\nCalling the function\nThe Full Contract\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord", "metadata": {"page_number": 499, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ec3c3d06b019", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 499, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "86ce090b07cc", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nCurrencyAmount\nEther\nFraction\nNativeCurrency\nPercent\nPrice\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nNativeCurrencyHelpful?", "metadata": {"page_number": 500, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3119d4bd9131", "text": "Price\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nNativeCurrencyHelpful?\nOn this page\nNativeCurr ency\n@uniswap/sdk-core  / Exports  / NativeCurrency\nClass: NativeCurr ency\nRepresents the native currency of the chain on which it resides, e.g.", "metadata": {"page_number": 500, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "92a413f370f7", "text": "Hierar chy \nBaseCurrency\n\u21b3 NativeCurrency\n\u21b3\u21b3 Ether\nTable of contents  \nConstructors \nconstructor\nProperties \nchainId\ndecimals\nisNative\nisToken\nname\nsymbol\nAccessors \nwrapped\nMethods \nequals\nConstructors  \nconstructor \n\u2022 Protected  new NativeCurr ency (chainId , decimals , symbol? , name? )\nConstructs an instance of the base class BaseCurrency .\nParameters  \nName Type Description\nchainId number the chain ID on which this currency resides\ndecimals number decimals of the currency\nsymbol? string symbol of the currency\nname? string of the currency\nInherited fr om \nBaseCurrency .constructor\nDefined in", "metadata": {"page_number": 501, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "399df68de997", "text": "entities/baseCurrency .ts:42\nProperties  \nchainId \n\u2022 Readonly  chainId : number\nThe chain ID on which this currency resides\nInherited fr om \nBaseCurrency .chainId\nDefined in  \nentities/baseCurrency .ts:21\ndecimals \n\u2022 Readonly  decimals : number\nThe decimals used in representing currency amounts\nInherited fr om \nBaseCurrency .decimals\nDefined in  \nentities/baseCurrency .ts:25\nisNative \n\u2022 Readonly  isNative : true\nOverrides  \nBaseCurrency .isNative\nDefined in  \nentities/nativeCurrency .ts:7\nisToken \n\u2022 Readonly  isToken : false\nOverrides  \nBaseCurrency .isToken", "metadata": {"page_number": 502, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b7ff0f460c84", "text": "Defined in  \nentities/nativeCurrency .ts:8\nname \n\u2022 Optional  Readonly  name : string\nThe name of the currency , i.e. a descriptive textual non-unique identifier\nInherited fr om \nBaseCurrency .name\nDefined in  \nentities/baseCurrency .ts:33\nsymbol \n\u2022 Optional  Readonly  symbol : string\nThe symbol of the currency , i.e. a short textual non-unique identifier\nInherited fr om \nBaseCurrency .symbol\nDefined in  \nentities/baseCurrency .ts:29\nAccessors  \nwrapped \n\u2022 Abstract  get wrapped (): Token\nReturn the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to\nbe used in Uniswap\nReturns  \nToken\nInherited fr om", "metadata": {"page_number": 503, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b8be11abc0d4", "text": "Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must implement this to\nbe used in Uniswap\nReturns  \nToken\nInherited fr om \nBaseCurrency .wrapped\nDefined in  \nentities/baseCurrency .ts:62", "metadata": {"page_number": 503, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c065708113f6", "text": "Methods  \nequals \n\u25b8 Abstract  equals (other ): boolean\nReturns whether this currency is functionally equivalent to the other currency\nParameters  \nName Type Description\notherCurrency the other currency\nReturns  \nboolean\nInherited fr om \nBaseCurrency .equals\nDefined in  \nentities/baseCurrency .ts:56\nEdit this page\nHelpful?\nPrevious\nFraction\nNext\nPercent\nHierarchy\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties\nchainId\ndecimals\nisNative\nisToken\nname\nsymbol\nAccessors\nwrapped\nMethods\nequals\nDevelopers", "metadata": {"page_number": 504, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5d62f977b9e3", "text": "Properties\nchainId\ndecimals\nisNative\nisToken\nname\nsymbol\nAccessors\nwrapped\nMethods\nequals\nDevelopers\nFeedback", "metadata": {"page_number": 504, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6098f3b2f984", "text": "Bug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 505, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b497678a2984", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 506, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "02dd242c2eaf", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 506, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "08d880e50522", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nNFTDescriptorHelpful?\nOn this page\nNFTDescriptor\nFunctions  \nconstructTokenURI \n  function  constructTokenURI (\n  ) public returns (string)\nCopy\nescapeQuotes \n  function  escapeQuotes (\n  ) internal  returns (string)\nCopy\ntickToDecimalString \n  function  tickToDecimalString (\n  ) internal  returns (string)\nCopy\nfixedPointToDecimalString \n  function  fixedPointToDecimalString (\n  ) internal  returns (string)\nCopy\nfeeToPercentString \n  function  feeToPercentString (\n  ) internal  returns (string)\nCopy\naddressToString", "metadata": {"page_number": 507, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b08350615baf", "text": ") internal  returns (string)\nCopy\nfeeToPercentString \n  function  feeToPercentString (\n  ) internal  returns (string)\nCopy\naddressToString \n  function  addressToString (\n  ) internal  returns (string)\nCopy\ngenerateSVGImage", "metadata": {"page_number": 507, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "717644847126", "text": "function  generateSVGImage (\n  ) internal  returns (string svg)\nCopy\ntokenToColorHex \n  function  tokenToColorHex (\n  ) internal  returns (string str)\nCopy\ngetCircleCoord \n  function  getCircleCoord (\n  ) internal  returns (uint256)\nCopy\nsliceTokenHex \n  function  sliceTokenHex (\n  ) internal  returns (uint256)\nCopy\nEdit this page\nHelpful?\nPrevious\nLiquidityAmounts\nNext\nNFTSVG\nFunctions\nconstructT okenURI\nescapeQuotes\ntickT oDecimalString\nfixedPointT oDecimalString\nfeeToPercentString\naddressT oString\ngenerateSVGImage", "metadata": {"page_number": 508, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b499c4680e1", "text": "constructT okenURI\nescapeQuotes\ntickT oDecimalString\nfixedPointT oDecimalString\nfeeToPercentString\naddressT oString\ngenerateSVGImage\ntokenT oColorHex\ngetCircleCoord\nsliceT okenHex\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 508, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "36053d5b6ae0", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 509, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f695d7a58ae2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 510, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "27da4699fcb0", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 510, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a9e813cad921", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nNFTDescriptorT estHelpful?\nOn this page\nNFTDescriptorT est\nFunctions  \nconstructTokenURI \n  function  constructTokenURI (\n  ) public returns (string)\nCopy\ngetGasCostOfConstructTokenURI \n  function  getGasCostOfConstructTokenURI (\n  ) public returns (uint256)\nCopy\ntickToDecimalString \n  function  tickToDecimalString (\n  ) public returns (string)\nCopy\nfixedPointToDecimalString \n  function  fixedPointToDecimalString (\n  ) public returns (string)\nCopy\nfeeToPercentString \n  function  feeToPercentString (", "metadata": {"page_number": 511, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c06eb06b9c13", "text": "Copy\nfixedPointToDecimalString \n  function  fixedPointToDecimalString (\n  ) public returns (string)\nCopy\nfeeToPercentString \n  function  feeToPercentString (\n  ) public returns (string)\nCopy\naddressToString \n  function  addressToString (\n  ) public returns (string)\nCopy", "metadata": {"page_number": 511, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "18902d66da8d", "text": "generateSVGImage \n  function  generateSVGImage (\n  ) public returns (string)\nCopy\ntokenToColorHex \n  function  tokenToColorHex (\n  ) public returns (string)\nCopy\nsliceTokenHex \n  function  sliceTokenHex (\n  ) public returns (uint256)\nCopy\nrangeLocation \n  function  rangeLocation (\n  ) public returns (string, string)\nCopy\nisRare \n  function  isRare(\n  ) public returns (bool)\nCopy\nEdit this page\nHelpful?\nPrevious\nMockT imeSwapRouter\nNext\nPathT est\nFunctions\nconstructT okenURI\ngetGasCostOfConstructT okenURI\ntickT oDecimalString", "metadata": {"page_number": 512, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "557012728ec7", "text": "MockT imeSwapRouter\nNext\nPathT est\nFunctions\nconstructT okenURI\ngetGasCostOfConstructT okenURI\ntickT oDecimalString\nfixedPointT oDecimalString\nfeeToPercentString\naddressT oString\ngenerateSVGImage\ntokenT oColorHex\nsliceT okenHex\nrangeLocation\nisRare\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 512, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "96600b99c04f", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 513, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "272a1caf9bdf", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 514, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3c20e391c189", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nNFTPermitOptionsHelpful?", "metadata": {"page_number": 514, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d68c7351b5d", "text": "On this page\nNFTPermitOptions\n@uniswap/v3-sdk  / Exports  / NFTPermitOptions\nInterface: NFTPermitOptions\nTable of contents  \nProperties \ndeadline\nr\ns\nspender\nv\nProperties  \ndeadline \n\u2022 deadline : BigintIsh\nDefined in  \nnonfungiblePositionManager .ts:131\nr \n\u2022 r: string\nDefined in  \nnonfungiblePositionManager .ts:129\ns \n\u2022 s: string\nDefined in  \nnonfungiblePositionManager .ts:130\nspender \n\u2022 spender : string\nDefined in", "metadata": {"page_number": 515, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f2c32435ad5f", "text": "nonfungiblePositionManager .ts:132\nv \n\u2022 v: 0 | 1 | 27 | 28\nDefined in  \nnonfungiblePositionManager .ts:128\nEdit this page\nHelpful?\nPrevious\nMintSpecificOptions\nNext\nQuoteOptions\nTable of contents\nProperties\nProperties\ndeadline\nr\ns\nspender\nv\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 516, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "684a87d1a654", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 516, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8c5defeb5ffb", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nUniswap V3 Staker Design\nUniswap V3 Staker Contract\nInterfaces\nLibraries\nIncentiveId\nNFTPositionInfo\nRewardMath\nTest\nNonfungiblePositionManager", "metadata": {"page_number": 517, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a742d462efa8", "text": "Uniswap V3 Staker Contract\nInterfaces\nLibraries\nIncentiveId\nNFTPositionInfo\nRewardMath\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nStaker\nLibraries\nNFTPositionInfoHelpful?\nOn this page", "metadata": {"page_number": 517, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7d745e6f9dbc", "text": "NFTPositionInfo\nEncapsulates the logic for getting info about a NFT  token ID\nFunctions  \ngetPositionInfo \n  function  getPositionInfo (\n    contract  IUniswapV3Factory  factory ,\n    contract  INonfungiblePositionManager  nonfungiblePositionManager ,\n    uint256 tokenId\n  ) internal  view returns (contract  IUniswapV3Pool  pool, int24 tickLower , int24 tickUpper , uint128 liquidity )\nCopy\nParameters:  \nName Type Description\nfactory contract IUniswapV3FactoryThe address of the Uniswap V3 Factory used in computing\nthe pool address\nnonfungiblePositionManagercontract\nINonfungiblePositionManagerThe address of the nonfungible position manager to query\ntokenId uint256 The unique identifier of an Uniswap V3 LP  token\nReturn Values:", "metadata": {"page_number": 518, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "853837b17292", "text": "INonfungiblePositionManagerThe address of the nonfungible position manager to query\ntokenId uint256 The unique identifier of an Uniswap V3 LP  token\nReturn Values:  \nName Type Description\npool IUniswapV3Pool The address of the Uniswap V3 pool\ntickLower int24 The lower tick of the Uniswap V3 position\ntickUpper int24 The upper tick of the Uniswap V3 position\nliquidity uint128 The amount of liquidity staked\nEdit this page\nHelpful?\nPrevious\nIncentiveId\nNext\nRewardMath\nFunctions\ngetPositionInfo\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 518, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f169c8006e00", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 518, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a1f41ac6a6fb", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 519, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e2f1f0d24cd6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 520, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d85c7b71a136", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 520, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "73aa73a1df4e", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nNFTSVGHelpful?\nOn this page\nNFTSVG\nProvides a function for generating an SVG associated with a Uniswap NFT\nFunctions  \ngenerateSVG\n  function  generateSVG (\n  ) internal  returns (string svg)\nCopy\ngetCurve \n  function  getCurve (\n  ) internal  returns (string curve)\nCopy\ngenerateSVGCurveCircle \n  function  generateSVGCurveCircle (\n  ) internal  returns (string svg)\nCopy\nrangeLocation \n  function  rangeLocation (\n  ) internal  returns (string, string)\nCopy\nisRare \n  function  isRare(\n  ) internal  returns (bool)", "metadata": {"page_number": 521, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "65ba9ad71ad5", "text": "Copy\nrangeLocation \n  function  rangeLocation (\n  ) internal  returns (string, string)\nCopy\nisRare \n  function  isRare(\n  ) internal  returns (bool)\nCopy\nEdit this page\nHelpful?\nPrevious\nNFTDescriptor", "metadata": {"page_number": 521, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "043a5f0fd8fb", "text": "Next\nOracleLibrary\nFunctions\ngenerateSVG\ngetCurve\ngenerateSVGCurveCircle\nrangeLocation\nisRare\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 522, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "461e24e6442a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 523, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "59cc4b141493", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 523, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5f987d39c34a", "text": "classes\nNonfungiblePositionManager\nOn this page\nNonfungiblePositionManager\n@uniswap/v3-sdk  / Exports  / NonfungiblePositionManager\nClass: NonfungiblePositionManager\nTable of contents  \nConstructors \nconstructor\nProperties \nINTERF ACE\nMethods \naddCallParameters\ncollectCallParameters\ncreateCallParameters\nencodeCollect\nencodeCreate\nremoveCallParameters\nsafeT ransferFromParameters\nConstructors  \nconstructor \n\u2022 Private  new NonfungiblePositionManager ()\nCannot be constructed.\nDefined in  \nnonfungiblePositionManager .ts:181\nProperties  \nINTERFACE \n\u25aa Static  INTERF ACE : Interface", "metadata": {"page_number": 524, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bee37a38d954", "text": "\u2022 Private  new NonfungiblePositionManager ()\nCannot be constructed.\nDefined in  \nnonfungiblePositionManager .ts:181\nProperties  \nINTERFACE \n\u25aa Static  INTERF ACE : Interface\nDefined in  \nnonfungiblePositionManager .ts:176", "metadata": {"page_number": 524, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fcfcdb2fc1ad", "text": "Methods  \naddCallParameters \n\u25b8 Static  addCallParameters (position , options ): MethodParameters\nParameters  \nName Type\nposition Position\noptions AddLiquidityOptions\nReturns  \nMethodParameters\nDefined in  \nnonfungiblePositionManager .ts:199\ncollectCallParameters \n\u25b8 Static  collectCallParameters (options ): MethodParameters\nParameters  \nName Type\noptions CollectOptions\nReturns  \nMethodParameters\nDefined in  \nnonfungiblePositionManager .ts:326\ncreateCallParameters \n\u25b8 Static  createCallParameters (pool ): MethodParameters\nParameters  \nName Type\npoolPool\nReturns  \nMethodParameters", "metadata": {"page_number": 525, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3a478dd1b90b", "text": "Defined in  \nnonfungiblePositionManager .ts:192\nencodeCollect \n\u25b8 Static  Private  encodeCollect (options ): string []\nParameters  \nName Type\noptions CollectOptions\nReturns  \nstring []\nDefined in  \nnonfungiblePositionManager .ts:286\nencodeCreate \n\u25b8 Static  Private  encodeCr eate(pool ): string\nParameters  \nName Type\npoolPool\nReturns  \nstring\nDefined in  \nnonfungiblePositionManager .ts:183\nremoveCallParameters \n\u25b8 Static  removeCallParameters (position , options ): MethodParameters\nProduces the calldata for completely or partially exiting a position\nParameters  \nName Type Description\nposition Position The position to exit", "metadata": {"page_number": 526, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "45c203f16934", "text": "\u25b8 Static  removeCallParameters (position , options ): MethodParameters\nProduces the calldata for completely or partially exiting a position\nParameters  \nName Type Description\nposition Position The position to exit\noptions RemoveLiquidityOptions Additional information necessary for generating the calldata", "metadata": {"page_number": 526, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b42ed2ad946f", "text": "Returns  \nMethodParameters\nThe call parameters\nDefined in  \nnonfungiblePositionManager .ts:341\nsafeTransferFromParameters \n\u25b8 Static  safeT ransferFr omParameters (options ): MethodParameters\nParameters  \nName Type\noptions SafeTransferOptions\nReturns  \nMethodParameters\nDefined in  \nnonfungiblePositionManager .ts:416\nEdit this page\nHelpful?\nPrevious\nNoTickDataProvider\nNext\nPayments\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nINTERF ACE\nMethods\naddCallParameters\ncollectCallParameters\ncreateCallParameters", "metadata": {"page_number": 527, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "baa6435ff760", "text": "Methods\nConstructors\nconstructor\nProperties\nINTERF ACE\nMethods\naddCallParameters\ncollectCallParameters\ncreateCallParameters\nencodeCollect\nencodeCreate\nremoveCallParameters\nsafeT ransferFromParameters\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 527, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "05eb103ce8af", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 528, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7ca60014373f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol", "metadata": {"page_number": 529, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1183dd4e245a", "text": "SwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nNonfungibleT okenPositionDescriptorHelpful?\nOn this page\nNonfungibleT okenPositionDescriptor\nProduces a string containing the data URI for a JSON metadata string", "metadata": {"page_number": 529, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac4634f44396", "text": "Functions  \nconstructor \n  function  constructor (\n  ) public\nCopy\ntokenURI \n  function  tokenURI (\n    contract  INonfungiblePositionManager  positionManager ,\n    uint256 tokenId\n  ) external  returns (string)\nCopy\nProduces the URI describing a particular token ID for a position manager\nNote this URI may be a data: URI with the JSON contents directly inlined\nParameters:  \nName Type Description\npositionManagercontract\nINonfungiblePositionManagerThe position manager for which to describe the token\ntokenId uint256The ID of the token for which to produce a description, which\nmay not be valid\nReturn Values:  \nName Type Description\nThe contract INonfungiblePositionManager URI of the ERC721-compliant metadata\nflipRatio \n  function  flipRatio (", "metadata": {"page_number": 530, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c95a3c0632ec", "text": "may not be valid\nReturn Values:  \nName Type Description\nThe contract INonfungiblePositionManager URI of the ERC721-compliant metadata\nflipRatio \n  function  flipRatio (\n  ) public returns (bool)\nCopy\ntokenRatioPriority \n  function  tokenRatioPriority (\n  ) public returns (int256)\nCopy\nEdit this page\nHelpful?\nPrevious\nNonfungiblePositionManager\nNext\nSwapRouter", "metadata": {"page_number": 530, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d3bfc95eca85", "text": "Functions\nconstructor\ntokenURI\nflipRatio\ntokenRatioPriority\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 531, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2ba571a993bd", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 532, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f99a5591fdd2", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 532, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a5e0bbb75e45", "text": "classes\nNoTickDataProvider\nOn this page\nNoTickDataPr ovider\n@uniswap/v3-sdk  / Exports  / NoT ickDataProvider\nClass: NoT ickDataPr ovider\nThis tick data provider does not know how to fetch any tick data. It throws whenever it is required. Useful if you do not need\nto load tick data for your use case.\nImplements  \nTickDataProvider\nTable of contents  \nConstructors \nconstructor\nProperties \nERROR _MESSAGE\nMethods \ngetTick\nnextInitializedT ickW ithinOneW ord\nConstructors  \nconstructor \n\u2022 new NoT ickDataPr ovider ()\nProperties  \nERROR_MESSAGE \n\u25aa Static  Private  ERROR _MESSAGE : string  = 'No tick data provider was given'", "metadata": {"page_number": 533, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "53b3b71d7776", "text": "Constructors  \nconstructor \n\u2022 new NoT ickDataPr ovider ()\nProperties  \nERROR_MESSAGE \n\u25aa Static  Private  ERROR _MESSAGE : string  = 'No tick data provider was given'\nDefined in  \nentities/tickDataProvider .ts:27\nMethods", "metadata": {"page_number": 533, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a1c5d89385f5", "text": "getTick \n\u25b8 getT ick(_tick ): Promise <{ liquidityNet : BigintIsh  }>\nReturn information corresponding to a specific tick\nParameters  \nName Type Description\n_ticknumber the tick to load\nReturns  \nPromise <{ liquidityNet : BigintIsh  }>\nImplementation of  \nTickDataProvider .getTick\nDefined in  \nentities/tickDataProvider .ts:28\nnextInitializedTickWithinOneWord \n\u25b8 nextInitializedT ickW ithinOneW ord(_tick , _lte , _tickSpacing ): Promise <[number , boolean ]>\nReturn the next tick that is initialized within a single word\nParameters  \nName Type Description\n_tick number The current tick\n_lte boolean Whether the next tick should be lte the current tick\n_tickSpacing number The tick spacing of the pool", "metadata": {"page_number": 534, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "246cb6e991bf", "text": "Parameters  \nName Type Description\n_tick number The current tick\n_lte boolean Whether the next tick should be lte the current tick\n_tickSpacing number The tick spacing of the pool\nReturns  \nPromise <[number , boolean ]>\nImplementation of  \nTickDataProvider .nextInitializedT ickW ithinOneW ord\nDefined in  \nentities/tickDataProvider .ts:32\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 534, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "11609a3d4b97", "text": "Multicall\nNext\nNonfungiblePositionManager\nImplements\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nERROR_MESSAGE\nMethods\ngetTick\nnextInitializedT ickW ithinOneW ord\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 535, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b6b11bfe43d2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nConcentrated Liquidity\nFees\nOracle\nRange Orders\nSwaps\nToken Integration Issues\nGovernance\nResearch\nResources\nGlossary\n\u0000\nProtocol Concepts\nOracleHelpful?\nOn this page\nOracle\nnote\nUnfamiliar with the concept of an oracle? Check out the Ethereum Foundation's oracle overview  first.\nAll Uniswap v3 pools can serve as oracles, of fering access to historical price and liquidity data. This capability unlocks a wide range\nof on-chain use cases.", "metadata": {"page_number": 536, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "458359be3e3a", "text": "All Uniswap v3 pools can serve as oracles, of fering access to historical price and liquidity data. This capability unlocks a wide range\nof on-chain use cases.\nHistorical data is stored as an array of observations. At first, each pool tracks only a single observation, overwriting it as blocks\nelapse. This limits how far into the past users may access data. However , any party willing to pay the transaction fees may increase\nthe number of tracked observations  (up to a maximum of 65535 ), expanding the period of data availability to ~9 days or more.\nStoring price and liquidity history directly in the pool contract substantially reduces the potential for logical errors on the part of the\ncalling contract, and reduces integration costs by eliminating the need to store historical values. Additionally , the v3 oracle's\nconsiderable maximum length makes oracle price manipulation significantly more dif ficult, as the calling contract may cheaply\nconstruct a time-weighted average over any arbitrary range inside of (or fully encompassing) the length of the oracle array .\nObservations", "metadata": {"page_number": 536, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e4b486dda2a1", "text": "considerable maximum length makes oracle price manipulation significantly more dif ficult, as the calling contract may cheaply\nconstruct a time-weighted average over any arbitrary range inside of (or fully encompassing) the length of the oracle array .\nObservations  \nObservation s take the following form:\nstruct Observation  {\n    // the block timestamp of the observation\n    uint32 blockTimestamp ;\n    // the tick accumulator, i.e. tick * time elapsed since the pool was first initialized\n    int56 tickCumulative ;\n    // the seconds per liquidity, i.e. seconds elapsed / max(1, liquidity) since the pool was first initialized", "metadata": {"page_number": 536, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1bd6589a54f1", "text": "uint160 secondsPerLiquidityCumulativeX128 ;\n    // whether or not the observation is initialized\n    bool initialized ;\n}\nCopy\nObservation s may be retrieved via the observations  method on v3 pools. However , this is not the recommended way to consume\noracle data. Instead, prefer observe :\nfunction  observe(uint32[] calldata  secondsAgos )\n    external\n    view\n    returns (int56[] memory tickCumulatives , uint160[] memory secondsPerLiquidityCumulativeX128s );\nCopy\nEach time observe  is called, the caller must specify an array containing any number of seconds ago, denoting the times to return\nobservations from. Note that each of the given times must be more recent (or as old as) the oldest stored observation. Note: if the\ntimes don't correspond exactly to a block in which an observation was written, a counterfactual observation will be constructed,", "metadata": {"page_number": 537, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "585e2d644f7a", "text": "observations from. Note that each of the given times must be more recent (or as old as) the oldest stored observation. Note: if the\ntimes don't correspond exactly to a block in which an observation was written, a counterfactual observation will be constructed,\nremoving the need for the caller to interpolate manually . This is one of the primary reasons to use observe  over observations .\nNote that because the oracle is only updated at most once every block, calling observe  with a secondsAgo  value of 0 will return the\nmost recently written observation, which can only be as recent as the beginning of the current block (or older).\nTick Accumulator  \nThe tick accumulator stores the cumulative sum of the active tick at the time of the observation. The tick accumulator value increases\nmonotonically and grows by the value of the current tick - per second.\nTo derive the arithmetic mean tick over an interval, the caller needs to retrieve two observations, one after the other , take the delta of", "metadata": {"page_number": 537, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9f1fae150642", "text": "monotonically and grows by the value of the current tick - per second.\nTo derive the arithmetic mean tick over an interval, the caller needs to retrieve two observations, one after the other , take the delta of\nthe two values, and divide by the time elapsed between them. Calculating a TWAP from the tick accumulator is also covered in the\nwhitepaper . Note that using an arithmetic mean tick to derive a price corresponds to a geometric  mean price.\nSee OracleLibrary  for an example of how to use the tick accumulator .\nLiquidity Accumulator  \nThe liquidity accumulator stores the value of seconds / in-range liquidity at the time of the observation. The liquidity accumulator\nvalue increases monotonically and grows by the value of seconds / in-range liquidity - per second.\nTo derive the harmonic mean liquidity over an interval, the caller needs to retrieve two observations, one after the other , take the delta", "metadata": {"page_number": 537, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "97fb7f3ede64", "text": "value increases monotonically and grows by the value of seconds / in-range liquidity - per second.\nTo derive the harmonic mean liquidity over an interval, the caller needs to retrieve two observations, one after the other , take the delta\nof the two values, then divide the time elapsed by this value. Calculating TWAL is addressed in finer detail in the whitepaper .\nnote\nThe in-range liquidity accumulator should be used with care. Because the current tick and the current in-range liquidity can be\nentirely uncorrelated, there are scenarios in which taking the arithmetic mean tick and the harmonic mean liquidity over the same\ninterval in a pool can inaccurately characterize this pool relative to another . For example, if the current tick on pool A is 0 for 5\nseconds, and 100 for 5 seconds, the tick accumulator will be 50. If over this same interval, the in-range liquidity was 5000 and 50, the", "metadata": {"page_number": 537, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "55fabcf77c8f", "text": "seconds, and 100 for 5 seconds, the tick accumulator will be 50. If over this same interval, the in-range liquidity was 5000 and 50, the\nharmonic mean liquidity will be ~99. Compare this to pool B (composed of the same assets) where the tick was 50 and the in-range\nliquidity was ~99 for 10 seconds. The accumulator values will be identical, but the underlying behavior is of course quite dif ferent.\nDeriving Price Fr om A Tick \nWhen we use \"active tick\" or otherwise to refer to the current tick of a pool, we mean the lower tick boundary that is\nclosest to the current price.\nWhen a pool is created, each token is assigned to either token0  or token1  based on the contract address of the tokens in the pair .\nWhether or not a token is token0  or token1  is meaningless; it is only used to maintain a fixed assignment for the purpose of relative\nvaluation and general logic in the pool contract.", "metadata": {"page_number": 537, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3beb6d0edaf5", "text": "Deriving an asset price from the current tick is achievable due to the fixed expression across the pool contract of token0 in terms of\ntoken1.\nAn example of finding the price of WETH in a WETH / USDC pool, where WETH is token0  and USDC is token1 :\nYou have an oracle reading that shows a return of tickCumulative  as [70_000 , 1_070_000 ], with an elapsed time between the\nobservations of 10 seconds.\nWe can derive the average tick over this interval by taking the dif ference in accumulator values ( 1_070_000  - 70_000  = 1_000_000 ),\nand dividing by the time elapsed ( 1_000_000  / 10 = 100_000 ).\nWith a tick reading of 100_000 , we can find the value of token1  (USDC) in terms of token0  (WETH) by using the current tick as i", "metadata": {"page_number": 538, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "71b1461edfd8", "text": "With a tick reading of 100_000 , we can find the value of token1  (USDC) in terms of token0  (WETH) by using the current tick as i\nin the formula p(i) = 1.0001**i  (see 6.1 in the whitepaper ).\n1.0001**100_000 \u2245 22015.5  USDC / WETH\nTicks are signed integers and can be expressed as a negative number , so for any circumstances where token0  is of a lower value than\ntoken1 , a negative tick value will be returned by tickCumulative  and a relative value of < 0 will be returned by a calculation of\ntoken0  in terms of token1 .\nOracles Integrations on Layer  2 Rollups  \nOptimism \nOn Optimism, every transaction is confirmed as an individual block. The block.timestamp  of these blocks, however , reflect the\nblock.timestamp  of the last L1 block ingested by the Sequencer . For this reason, Uniswap pools on Optimism are not suitable for", "metadata": {"page_number": 538, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9975b08e7915", "text": "block.timestamp  of the last L1 block ingested by the Sequencer . For this reason, Uniswap pools on Optimism are not suitable for\nproviding oracle prices, as this high-latency block.timestamp  update process makes the oracle much less costly to manipulate. In the\nfuture, it's possible that the Optimism block.timestamp  will have much higher granularity (with a small trust assumption in the\nSequencer), or that forced inclusion transactions will improve oracle security . For more information on these potential upcoming\nchanges, please see the Optimistic Specs repo . For the time being, usage of the oracle feature on Optimism should be avoided.\nEdit this page\nHelpful?\nPrevious\nFees\nNext\nRange Orders\nObservations\nTick Accumulator\nLiquidity Accumulator\nDeriving Price From A Tick\nOracles Integrations on Layer 2 Rollups\nOptimism\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 538, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "62d0f8883144", "text": "Observations\nTick Accumulator\nLiquidity Accumulator\nDeriving Price From A Tick\nOracles Integrations on Layer 2 Rollups\nOptimism\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 538, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4e406dab4869", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 539, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "edcd96daa138", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 540, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "686095e534e1", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 540, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "26c4f7ced3f4", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nOracleLibraryHelpful?\nOn this page\nOracleLibrary\nProvides functions to integrate with V3 pool oracle\nFunctions  \nconsult \n  function  consult(\n    address pool,\n    uint32 period\n  ) internal  view returns (int24 arithmeticMeanTick , uint128 harmonicMeanLiquidity )\nCopy\nCalculates time-weighted means of tick and liquidity for a given Uniswap V3 pool\nParameters:  \nName Type Description\npool address Address of Uniswap V3 pool that we want to observe\nperiod uint32 Number of seconds in the past to start calculating time-weighted average\nReturn Values:  \nName Type Description", "metadata": {"page_number": 541, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8a57c8c00fe0", "text": "Name Type Description\npool address Address of Uniswap V3 pool that we want to observe\nperiod uint32 Number of seconds in the past to start calculating time-weighted average\nReturn Values:  \nName Type Description\narithmeticMeanTick int24 The arithmetic mean tick from (block.timestamp - secondsAgo) to block.timestamp\nharmonicMeanLiquidity uint128 The harmonic mean liquidity from (block.timestamp - secondsAgo) to block.timestamp\ngetQuoteAtTick \n  function  getQuoteAtTick (\n    int24 tick,\n    uint128 baseAmount ,\n    address baseToken ,\n    address quoteToken\n  ) internal  pure returns (uint256 quoteAmount )\nCopy\nGiven a tick and a token amount, calculates the amount of token received in exchange\nParameters:", "metadata": {"page_number": 541, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0805589593a3", "text": "Name Type Description\ntick int24 Tick value used to calculate the quote\nbaseAmount uint128 Amount of token to be converted\nbaseToken address Address of an ERC20 token contract used as the baseAmount denomination\nquoteToken address Address of an ERC20 token contract used as the quoteAmount denomination\nReturn Values:  \nName Type Description\nquoteAmount uint256 Amount of quoteT oken received for baseAmount of baseT oken\nEdit this page\nHelpful?\nPrevious\nNFTSVG\nNext\nPath\nFunctions\nconsult\ngetQuoteAtT ick\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 542, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "546a0fe73ef4", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 542, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a43ce83d642a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nSwaps\nPools\nFlash Swaps\nOracles\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol", "metadata": {"page_number": 543, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2c1b5e8e1410", "text": "Advanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nCore Concepts\nOraclesHelpful?\nOn this page\nIntroduction\nA price oracle is any tool used to view price information about a given asset. When you look at stock prices on your phone, you are using your phone as a price oracle. Similarly , the app on\nyour phone relies on devices to retrieve price information - likely several, which are aggregated and then displayed to you, the end-user . These are price oracles as well.\nWhen building smart contracts that integrate with DeFi protocols, developers will inevitably run into the price oracle problem. What is the best way to retrieve the price of a given asset on-\nchain?", "metadata": {"page_number": 543, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "17c3735ca929", "text": "When building smart contracts that integrate with DeFi protocols, developers will inevitably run into the price oracle problem. What is the best way to retrieve the price of a given asset on-\nchain?\nMany oracle designs on Ethereum have been implemented on an ad-hoc basis, with varying degrees of decentralization and security . Because of this, the ecosystem has witnessed numerous\nhigh-profile hacks where the oracle implementation is the primary attack vector . Some of these vulnerabilities are discussed here.\nWhile there is no one size fits all solution, Uniswap V2 enables developers to build highly decentralized and manipulation-resistant on-chain price oracles, which may solve many of the\ndemands necessary for building robust protocols.\nUniswap V2 solution\nUniswap V2 includes several improvements for supporting manipulation-resistant public price feeds. First, every pair measures (but does not store) the market price at the beginning of", "metadata": {"page_number": 543, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a13209479018", "text": "demands necessary for building robust protocols.\nUniswap V2 solution\nUniswap V2 includes several improvements for supporting manipulation-resistant public price feeds. First, every pair measures (but does not store) the market price at the beginning of\neach block, before any trades take place. This price is expensive to manipulate because it is set by the last transaction, whether it is a mint, swap, or burn, in a previous block.\nTo set the measur ed price to one that is out of sync with the global market price, an attacker  has to make a bad trade at the end of a pr evious block  , typically with no guarantee\nthat they will arbitrage it back in the next block. Attackers will lose money to arbitrageurs unless they can \u201cselfishly\u201d mine two blocks in a row . This type of attack presents several\nchallenges and has not been observed to date .\nUnfortunately , this alone is not enough. If significant value settles based on the price resulting from this mechanism, an attack\u2019 s profit will likely outweigh the loss.", "metadata": {"page_number": 543, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ccfc1273164a", "text": "challenges and has not been observed to date .\nUnfortunately , this alone is not enough. If significant value settles based on the price resulting from this mechanism, an attack\u2019 s profit will likely outweigh the loss.\nInstead, Uniswap V2 adds this end-of-block price to a single cumulative-price variable in the core contract weighted by the amount of time this price existed. This variable r epresents a\nsum of the Uniswap price for  every second in the entir e history of the contract.", "metadata": {"page_number": 543, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6bf36c2d614e", "text": "This variable can be used by external contracts to track accurate time-weighted average prices (TW APs) across any time interval.\nThe TWAP is constructed by reading the cumulative price from an ERC20 token pair at the beginning and at the end of the desired interval. The dif ference in this cumulative price can then\nbe divided by the length of the interval to create a TWAP for that period.", "metadata": {"page_number": 545, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8c2661fd1a63", "text": "TWAPs can be used directly or as the basis for moving averages (EMAs and SMAs) as needed.\nA few notes:\nFor a 10-minute TWAP, sample once every 10 minutes. For a 1-week TWAP, sample once every week.\nFor a simple TWAP, the cost of manipulation increases (approx. linear) with liquidity on Uniswap, as well as (approx. linear) with the length of time over which you average.\nThe Cost of an attack is relatively simple to estimate. Moving the price 5% on a 1-hour TWAP is approximately equal to the amount lost to arbitrage and fees for moving the price 5%\nevery block for 1 hour .\nThere are some nuances that are good to be aware of when using Uniswap V2 as an oracle, especially where manipulation resistance is concerned. The whitepaper  elaborates on some of\nthem. Additional oracle-focused developer guides and documentation will be released soon.", "metadata": {"page_number": 547, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "717c19b40c36", "text": "There are some nuances that are good to be aware of when using Uniswap V2 as an oracle, especially where manipulation resistance is concerned. The whitepaper  elaborates on some of\nthem. Additional oracle-focused developer guides and documentation will be released soon.\nIn the meantime, check out our example implementation  of a 24 hr TWAP Oracle built on Uniswap V2!\nManipulation r esistance  \nThe cost of manipulating the price for a specific time period can be roughly estimated as the amount lost to arbitrage and fees every block for the entire period. For lar ger liquidity pools\nand over longer time periods, this attack is impractical, as the cost of manipulation typically exceeds the value at stake.\nOther factors, such as network congestion, can reduce the cost of attack. For a more in-depth review of the security of Uniswap V2 price oracles, read the security audit section on Oracle\nIntegrity .\nBuilding an oracle\nTo learn more about building oracles check out building an Oracle  in the developer guides.", "metadata": {"page_number": 547, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aed5db96c5c4", "text": "Integrity .\nBuilding an oracle\nTo learn more about building oracles check out building an Oracle  in the developer guides.\nEdit this page\nHelpful?\nPrevious\nFlash Swaps\nNext\nFees\nManipulation resistance\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 547, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "036a3bb6cee5", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\nOverview\nGuides\nGetting Started\nTechnical Reference\nData\nComputation\nFormat\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nOrchestrationHelpful?\nOn this page\nOrchestration", "metadata": {"page_number": 548, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d3f620a9b96f", "text": "Orchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nOrchestrationHelpful?\nOn this page\nOrchestration\nOrchestration functions are plain-english wrappers for the function defined in /sdk/1.0.0/reference/data  and Computation .\nFunctions suf fixed with WithData  are synchronous, and require token reserves to be passed in as ar guments. Functions without the suf fix\nare asychronous, and require token addresses to be passed in as ar guments.\ntradeExactEthForT okensW ithData\nThe function facilitates trading an exact amount of ETH for a specified token.\nFunction Signatur e \nexport function  tradeExactEthForTokensWithData (reserves : OptionalReserves , ethAmount : BigNumberish ): TradeDetails\nCopy", "metadata": {"page_number": 548, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9da70b64e7f7", "text": "Input Parameters  \nParameter Type Description\nreserves OptionalReserves Reserves data for the output token.\nethAmount BigNumberish The input amount of ETH.\nExample Usage\nconst tradeDetails : TradeDetails  = tradeExactEthForTokensWithData (reserves , '1000000000000000000' )\nCopy\ntradeExactEthForT okens\nThe function facilitates trading an exact amount of ETH for a specified token.\nFunction Signatur e \nexport async function  tradeExactEthForTokens (\n  tokenAddress : string,\n  ethAmount : BigNumberish ,\n  chainIdOrProvider ?: ChainIdOrProvider\n): Promise<TradeDetails >\nCopy\nInput Parameters  \nParameter Type Description\ntokenAddress string Address of output token.\nethAmount BigNumberish The input amount of ETH.", "metadata": {"page_number": 549, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "231ac7130ec5", "text": "): Promise<TradeDetails >\nCopy\nInput Parameters  \nParameter Type Description\ntokenAddress string Address of output token.\nethAmount BigNumberish The input amount of ETH.\nchainIdOrProvider? ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider  connected to a chain with\na supported chain id.\nExample Usage\nconst tradeDetails : TradeDetails  = await tradeExactEthForTokens (tokenAddress , '1000000000000000000' )\nCopy\ntradeEthForExactT okensW ithData\nThe function facilitates trading ETH for an exact amount of a specified token.\nFunction Signatur e \nexport function  tradeEthForExactTokensWithData (reserves : OptionalReserves , tokenAmount : BigNumberish ): TradeDetails\nCopy\nInput Parameters", "metadata": {"page_number": 549, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "026a28af5685", "text": "Function Signatur e \nexport function  tradeEthForExactTokensWithData (reserves : OptionalReserves , tokenAmount : BigNumberish ): TradeDetails\nCopy\nInput Parameters  \nParameter Type Description\nreserves OptionalReserves Reserves data for the output token.\ntokenAmount BigNumberish The output amount of tokens.\nExample Usage", "metadata": {"page_number": 549, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "268a8fa4e171", "text": "const tradeDetails : TradeDetails  = tradeEthForExactTokensWithData (reserves , '1000000000000000000' )\nCopy\ntradeEthForExactT okens\nThe function facilitates trading ETH for an exact amount of a specified token.\nFunction Signatur e \nexport async function  tradeEthForExactTokens (\n  tokenAddress : string,\n  tokenAmount : BigNumberish ,\n  chainIdOrProvider ?: ChainIdOrProvider\n): Promise<TradeDetails >\nCopy\nInput Parameters  \nParameter Type Description\ntokenAddress string Address of output token.\ntokenAmount BigNumberish The output amount of tokens.\nchainIdOrProvider? ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider  connected to a chain with\na supported chain id.", "metadata": {"page_number": 550, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ecf6c1673bbc", "text": "chainIdOrProvider? ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider  connected to a chain with\na supported chain id.\nExample Usage\nconst tradeDetails : TradeDetails  = await tradeEthForExactTokens (tokenAddress , '1000000000000000000' )\nCopy\ntradeExactT okensForEthW ithData\nThe function facilitates trading an exact amount of a specified token for ETH.\nFunction Signatur e \nexport function  tradeExactTokensForEthWithData (reserves : OptionalReserves , tokenAmount : BigNumberish ): TradeDetails\nCopy\nInput Parameters  \nParameter Type Description\nreserves OptionalReserves Reserves data for the input token.\ntokenAmount BigNumberish The input amount of tokens.\nExample Usage", "metadata": {"page_number": 550, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9b6b15c7a204", "text": "Copy\nInput Parameters  \nParameter Type Description\nreserves OptionalReserves Reserves data for the input token.\ntokenAmount BigNumberish The input amount of tokens.\nExample Usage\nconst tradeDetails : TradeDetails  = tradeExactTokensForEthWithData (reserves , '1000000000000000000' )\nCopy\ntradeExactT okensForEth\nThe function facilitates trading an exact amount of a specified token for ETH.", "metadata": {"page_number": 550, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "44252662384c", "text": "Function Signatur e \nexport async function  tradeExactTokensForEth (\n  tokenAddress : string,\n  tokenAmount : BigNumberish ,\n  chainIdOrProvider ?: ChainIdOrProvider\n): Promise<TradeDetails >\nCopy\nInput Parameters  \nParameter Type Description\ntokenAddress string Address of input token.\ntokenAmount BigNumberish The input amount of tokens.\nchainIdOrProvider? ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider  connected to a chain with\na supported chain id.\nExample Usage\nconst tradeDetails : TradeDetails  = await tradeExactTokensForEth (tokenAddress , '1000000000000000000' )\nCopy\ntradeT okensForExactEthW ithData", "metadata": {"page_number": 551, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7015215660c4", "text": "const tradeDetails : TradeDetails  = await tradeExactTokensForEth (tokenAddress , '1000000000000000000' )\nCopy\ntradeT okensForExactEthW ithData\nThe function facilitates trading a specified token for an exact amount of ETH.\nFunction Signatur e \nexport function  tradeTokensForExactEthWithData (reserves : OptionalReserves , ethAmount : BigNumberish ): TradeDetails\nCopy\nInput Parameters  \nParameter Type Description\nreserves OptionalReserves Reserves data for the input token.\nethAmount BigNumberish The outpute amount of ETH.\nExample Usage\nconst tradeDetails : TradeDetails  = tradeTokensForExactEthWithData (reserves , '1000000000000000000' )\nCopy\ntradeT okensForExactEth", "metadata": {"page_number": 551, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "67c94eb7fa12", "text": "Example Usage\nconst tradeDetails : TradeDetails  = tradeTokensForExactEthWithData (reserves , '1000000000000000000' )\nCopy\ntradeT okensForExactEth\nThe function facilitates trading a specified token for an exact amount of ETH.\nFunction Signatur e \nexport async function  tradeTokensForExactEth (\n  tokenAddress : string,\n  ethAmount : BigNumberish ,\n  chainIdOrProvider ?: ChainIdOrProvider\n): Promise<TradeDetails >\nCopy", "metadata": {"page_number": 551, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "21f2617e934a", "text": "Input Parameters  \nParameter Type Description\ntokenAddress string Address of input token.\nethAmount BigNumberish The output amount of ETH.\nchainIdOrProvider? ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider  connected to a chain with\na supported chain id.\nExample Usage\nconst tradeDetails : TradeDetails  = await tradeTokensForExactEth (tokenAddress , '1000000000000000000' )\nCopy\ntradeExactT okensForT okensW ithData\nThe function facilitates trading an exact amount of a specified token for another token.\nFunction Signatur e \nexport function  tradeExactTokensForTokensWithData (\n  reservesInput : OptionalReserves ,\n  reservesOutput : OptionalReserves ,\n  tokenAmount : BigNumberish\n): TradeDetails", "metadata": {"page_number": 552, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b534cc863b20", "text": "export function  tradeExactTokensForTokensWithData (\n  reservesInput : OptionalReserves ,\n  reservesOutput : OptionalReserves ,\n  tokenAmount : BigNumberish\n): TradeDetails\nCopy\nInput Parameters  \nParameter Type Description\nreservesInput OptionalReserves Reserves data for the input token.\nreservesOutput OptionalReserves Reserves data for the output token.\ntokenAmount BigNumberish The input amount of tokens.\nExample Usage\nconst tradeDetails : TradeDetails  = tradeExactTokensForTokensWithData (\n  reservesInput ,\n  reservesOutput ,\n  '1000000000000000000'\n)\nCopy\ntradeExactT okensForT okens\nThe function facilitates trading an exact amount of a specified token for another token.\nFunction Signatur e", "metadata": {"page_number": 552, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32a8ae202073", "text": "'1000000000000000000'\n)\nCopy\ntradeExactT okensForT okens\nThe function facilitates trading an exact amount of a specified token for another token.\nFunction Signatur e \nexport async function  tradeExactTokensForTokens (\n  tokenAddressInput : string,\n  tokenAddressOutput : string,\n  tokenAmount : BigNumberish ,\n  chainIdOrProvider ?: ChainIdOrProvider\n): Promise<TradeDetails >\nCopy", "metadata": {"page_number": 552, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b02fe09edcac", "text": "Input Parameters  \nParameter Type Description\ntokenAddressInput string Address of input token.\ntokenAddressOutput string Address of output token.\ntokenAmount BigNumberish The input amount of tokens.\nchainIdOrProvider? ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider  connected to a chain with\na supported chain id.\nExample Usage\nconst tradeDetails : TradeDetails  = await tradeExactTokensForTokens (\n  tokenAddressInput ,\n  tokenAddressOutput ,\n  '1000000000000000000'\n)\nCopy\ntradeT okensForExactT okensW ithData\nThe function facilitates trading a specified token for an exact amount of another token.\nFunction Signatur e \nexport function  tradeTokensForExactTokensWithData (", "metadata": {"page_number": 553, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2e1872a4c7e3", "text": "tradeT okensForExactT okensW ithData\nThe function facilitates trading a specified token for an exact amount of another token.\nFunction Signatur e \nexport function  tradeTokensForExactTokensWithData (\n  reservesInput : OptionalReserves ,\n  reservesOutput : OptionalReserves ,\n  tokenAmount : BigNumberish\n): TradeDetails\nCopy\nInput Parameters  \nParameter Type Description\nreservesInput OptionalReserves Reserves data for the input token.\nreservesOutput OptionalReserves Reserves data for the output token.\ntokenAmount BigNumberish The output amount of tokens.\nExample Usage\nconst tradeDetails : TradeDetails  = tradeTokensForExactTokensWithData (\n  reservesInput ,\n  reservesOutput ,\n  '1000000000000000000'\n)\nCopy", "metadata": {"page_number": 553, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "03233f12a84f", "text": "reservesInput ,\n  reservesOutput ,\n  '1000000000000000000'\n)\nCopy\ntradeT okensForExactT okens\nThe function facilitates trading an exact amount of a specified token for another token.\nFunction Signatur e \nexport async function  tradeTokensForExactTokens (\n  tokenAddressInput : string,\n  tokenAddressOutput : string,\n  tokenAmount : BigNumberish ,", "metadata": {"page_number": 553, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "310767c099fa", "text": "chainIdOrProvider ?: ChainIdOrProvider\n): Promise<TradeDetails >\nCopy\nInput Parameters  \nParameter Type Description\ntokenAddressInput string Address of input token.\ntokenAddressOutput string Address of output token.\ntokenAmount BigNumberish The output amount of tokens.\nchainIdOrProvider? ChainIdOrProviderA supported chain id (1, 3, 4, or 42), or an underlying web3 provider  connected to a chain with\na supported chain id.\nExample Usage\nconst tradeDetails : TradeDetails  = await tradeTokensForExactTokens (\n  tokenAddressInput ,\n  tokenAddressOutput ,\n  '1000000000000000000'\n)\nCopy\nEdit this page\nHelpful?\nPrevious\nFormat\nNext\nTransact", "metadata": {"page_number": 554, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "29e75c3dbf5b", "text": "'1000000000000000000'\n)\nCopy\nEdit this page\nHelpful?\nPrevious\nFormat\nNext\nTransact\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nFunction Signature", "metadata": {"page_number": 554, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "74952cac829d", "text": "Input Parameters\nExample Usage\nFunction Signature\nInput Parameters\nExample Usage\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 555, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c7738be6678e", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000", "metadata": {"page_number": 556, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dfdf7cccd29c", "text": "Technical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nTechnical Reference\nOther ExportsHelpful?\nJSBI\nimport { JSBI } from '@uniswap/sdk'\n// import JSBI from 'jsbi'\nC o p y", "metadata": {"page_number": 556, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "22cd49adaf41", "text": "The default export from jsbi.\nBigintIsh\nimport { BigintIsh  } from '@uniswap/sdk'\n// type BigintIsh = JSBI | bigint | string\nC o p y\nA union type comprised of all types that can be cast to a JSBI instance.\nChainId\nimport { ChainId } from '@uniswap/sdk'\n// enum ChainId {\n//   MAINNET = 1,\n//   ROPSTEN = 3,\n//   RINKEBY = 4,\n//   G\u00d6RLI = 5,\n//   KOVAN = 42\n// }\nC o p y\nA enum denominating supported chain IDs.\nTradeT ype\nimport { TradeType  } from '@uniswap/sdk'\n// enum TradeType {", "metadata": {"page_number": 557, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c733a1ce9837", "text": "C o p y\nA enum denominating supported chain IDs.\nTradeT ype\nimport { TradeType  } from '@uniswap/sdk'\n// enum TradeType {\n//   EXACT_INPUT,\n//   EXACT_OUTPUT\n// }\nC o p y\nA enum denominating supported trade types.\nRounding\nimport { Rounding  } from '@uniswap/sdk'\n// enum Rounding {\n//   ROUND_DOWN,\n//   ROUND_HALF_UP,\n//   ROUND_UP\n// }\nC o p y\nA enum denominating supported rounding options.\nFACT ORY_ADDRESS\nimport { FACTORY_ADDRESS  } from '@uniswap/sdk'\nC o p y\nThe factory address .", "metadata": {"page_number": 557, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1cd77ad1dc79", "text": "INIT_CODE_HASH\nimport { INIT_CODE_HASH  } from '@uniswap/sdk'\nC o p y\nSee pair addresses .\nMINIMUM_LIQUIDITY\nimport { MINIMUM_LIQUIDITY  } from '@uniswap/sdk'\nC o p y\nSee minimum liquidity .\nInsufficientReservesErr or\nimport { InsufficientReservesError  } from '@uniswap/sdk'\nC o p y\nInsufficientInputAmountErr or\nimport { InsufficientInputAmountError  } from '@uniswap/sdk'\nC o p y\nWETH\nimport { WETH } from '@uniswap/sdk'\nC o p y\nAn object whose values are WETH  Token  instances, indexed by ChainId .\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 558, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c1833c35cdf3", "text": "import { WETH } from '@uniswap/sdk'\nC o p y\nAn object whose values are WETH  Token  instances, indexed by ChainId .\nEdit this page\nHelpful?\nPrevious\nFetcher\nNext\nOverview\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 558, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3ef671e6f362", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 559, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a7453b67ec8c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nSubgraph\nOverview\nGuides\nQuery Examples\n\u0000\nSubgraph\nOverviewHelpful?\nOn this page\nThe Uniswap Subgraph\nUniswap uses multiple subgraphs  for indexing and or ganizing data from the Uniswap smart contracts. These subgraphs are\nhosted on The Graph hosted service and can be used to query Uniswap data.\nVersions and Pr oduction Endpoints  \nEach version of Uniswap has its own dedicated subgraph, and governance contracts have a dedicated subgraph as well.\nEach subgraph has a dedicated endpoint for querying data, as well as a page on The Graph explorer  the exposes the schema\nand available fields to query .", "metadata": {"page_number": 560, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f2d4caf728b8", "text": "Each subgraph has a dedicated endpoint for querying data, as well as a page on The Graph explorer  the exposes the schema\nand available fields to query .\nV3 \nExplorer Page: https://thegraph.com/explorer/subgraph/uniswap/uniswap-v3\nGraphql Endpoint: https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\nCode: https://github.com/Uniswap/uniswap-v3-subgraph\nGovernance \nExplorer Page: https://thegraph.com/explorer/subgraph/ianlapham/governance-tracking\nGraphql Endpoint: https://api.thegraph.com/subgraphs/name/ianlapham/governance-tracking\nCode: https://github.com/ianlapham/uniswap-governance-subgraph\nV2", "metadata": {"page_number": 560, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "65a1687d712a", "text": "Code: https://github.com/ianlapham/uniswap-governance-subgraph\nV2 \nExplorer Page: https://thegraph.com/explorer/subgraph/ianlapham/uniswapv2\nGraphql Endpoint: https://api.thegraph.com/subgraphs/name/ianlapham/uniswapv2\nCode: https://github.com/Uniswap/uniswap-v2-subgraph\nV1", "metadata": {"page_number": 560, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12818499edf8", "text": "Explorer Page: https://thegraph.com/explorer/subgraph/ianlapham/uniswap\nGraphql Endpoint: https://api.thegraph.com/subgraphs/name/ianlapham/uniswap\nCode: https://github.com/graphprotocol/uniswap-subgraph\nEdit this page\nHelpful?\nNext\nQuery Examples\nVersions and Production Endpoints\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord", "metadata": {"page_number": 561, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d04e1385725c", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 561, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d60fdda0dc7", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02", "metadata": {"page_number": 562, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8669359b11ba", "text": "Technical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02\nCommon Errors\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nSmart Contracts\nPair (ERC-20)Helpful?\nOn this page\nPair (ERC-20)\nThis documentation covers ERC-20 functionality for denominating pool tokens. For Uniswap-specific functionality , see Pair.\nCode\nUniswapV2ERC20.sol", "metadata": {"page_number": 562, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db28d8c76a18", "text": "Events\nAppr oval \nevent Approval (address indexed owner, address indexed spender , uint value);\nCopy\nEmitted each time an approval occurs via approve  or permit .\nTransfer  \nevent Transfer (address indexed from, address indexed to, uint value);\nCopy\nEmitted each time a transfer occurs via transfer , transferFrom , mint, or burn.\nRead-Only Functions\nname\nfunction  name() external  pure returns (string memory);\nCopy\nReturns Uniswap V2  for all pairs.\nsymbol  \nfunction  symbol() external  pure returns (string memory);\nCopy\nReturns UNI-V2  for all pairs.\ndecimals  \nfunction  decimals () external  pure returns (uint8);\nCopy\nReturns 18 for all pairs.\ntotalSupply  \nfunction  totalSupply () external  view returns (uint);", "metadata": {"page_number": 563, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "88cc5a68ad52", "text": "decimals  \nfunction  decimals () external  pure returns (uint8);\nCopy\nReturns 18 for all pairs.\ntotalSupply  \nfunction  totalSupply () external  view returns (uint);\nCopy\nReturns the total amount of pool tokens for a pair .\nbalanceOf  \nfunction  balanceOf (address owner) external  view returns (uint);\nCopy\nReturns the amount of pool tokens owned by an address.\nallowance", "metadata": {"page_number": 563, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae82fd3e6269", "text": "function  allowance (address owner, address spender ) external  view returns (uint);\nCopy\nReturns the amount of liquidity tokens owned by an address that a spender is allowed to transfer via transferFrom .\nDOMAIN_SEP ARA TOR \nfunction  DOMAIN_SEPARATOR () external  view returns (bytes32);\nCopy\nReturns a domain separator for use in permit .\nPERMIT_TYPEHASH  \nfunction  PERMIT_TYPEHASH () external  view returns (bytes32);\nCopy\nReturns a typehash for use in permit .\nnonces  \nfunction  nonces(address owner) external  view returns (uint);\nCopy\nReturns the current nonce for an address for use in permit .\nState-Changing Functions\nappr ove \nfunction  approve(address spender , uint value) external  returns (bool);\nCopy", "metadata": {"page_number": 564, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d58168ef1bc8", "text": "Copy\nReturns the current nonce for an address for use in permit .\nState-Changing Functions\nappr ove \nfunction  approve(address spender , uint value) external  returns (bool);\nCopy\nLets msg.sender  set their allowance for a spender .\nEmits Approval .\ntransfer  \nfunction  transfer (address to, uint value) external  returns (bool);\nCopy\nLets msg.sender  send pool tokens to an address.\nEmits Transfer .\ntransferFr om \nfunction  transferFrom (address from, address to, uint value) external  returns (bool);\nCopy\nSends pool tokens from one address to another .\nRequires approval.\nEmits Transfer .", "metadata": {"page_number": 564, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "62994bda304e", "text": "permit  \nfunction  permit(address owner, address spender , uint value, uint deadline , uint8 v, bytes32 r, bytes32 s) external ;\nCopy\nSets the allowance for a spender where approval is granted via a signature.\nSee Using Permit .\nEmits Approval .\nInterface\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2ERC20.sol' ;\nCopy\npragma solidity  >=0.5.0;\ninterface  IUniswapV2ERC20  {\n  event Approval (address indexed owner, address indexed spender , uint value);\n  event Transfer (address indexed from, address indexed to, uint value);\n  function  name() external  pure returns (string memory);\n  function  symbol() external  pure returns (string memory);\n  function  decimals () external  pure returns (uint8);", "metadata": {"page_number": 565, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "daa4cc75ca2c", "text": "function  name() external  pure returns (string memory);\n  function  symbol() external  pure returns (string memory);\n  function  decimals () external  pure returns (uint8);\n  function  totalSupply () external  view returns (uint);\n  function  balanceOf (address owner) external  view returns (uint);\n  function  allowance (address owner, address spender ) external  view returns (uint);\n  function  approve(address spender , uint value) external  returns (bool);\n  function  transfer (address to, uint value) external  returns (bool);\n  function  transferFrom (address from, address to, uint value) external  returns (bool);\n  function  DOMAIN_SEPARATOR () external  view returns (bytes32);\n  function  PERMIT_TYPEHASH () external  pure returns (bytes32);\n  function  nonces(address owner) external  view returns (uint);", "metadata": {"page_number": 565, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "90e98abea816", "text": "function  DOMAIN_SEPARATOR () external  view returns (bytes32);\n  function  PERMIT_TYPEHASH () external  pure returns (bytes32);\n  function  nonces(address owner) external  view returns (uint);\n  function  permit(address owner, address spender , uint value, uint deadline , uint8 v, bytes32 r, bytes32 s) external ;\n}\nCopy\nABI\nimport IUniswapV2ERC20  from '@uniswap/v2-core/build/IUniswapV2ERC20.json'\nCopy\nhttps://unpkg.com/@uniswap/v2-core@1.0.0/build/IUniswapV2ERC20.json\nEdit this page\nHelpful?\nPrevious\nPair\nNext\nLibrary\nApproval\nTransfer\nname\nsymbol", "metadata": {"page_number": 565, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2bb183623839", "text": "Edit this page\nHelpful?\nPrevious\nPair\nNext\nLibrary\nApproval\nTransfer\nname\nsymbol\ndecimals\ntotalSupply\nbalanceOf\nallowance\nDOMAIN_SEP ARA TOR\nPERMIT_TYPEHASH", "metadata": {"page_number": 565, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fad56ef5aeab", "text": "nonces\napprove\ntransfer\ntransferFrom\npermit\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 566, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b9059544627", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 567, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6bc2db083fba", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nTechnical Reference\nPairHelpful?\nOn this page\nPair\nconstructor (tokenAmountA : TokenAmount , tokenAmountB : TokenAmount )\nCopy\nThe Pair entity represents a Uniswap pair with a balance of each of its pair tokens.\nExample", "metadata": {"page_number": 567, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2b3c384fc41c", "text": "import { ChainId, Token, TokenAmount , Pair } from '@uniswap/sdk'\nconst HOT = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000' , 18, 'HOT', 'Caffeine' )\nconst NOT = new Token(ChainId.MAINNET, '0xDeCAf00000000000000000000000000000000000' , 18, 'NOT', 'Caffeine' )\nconst pair = new Pair(new TokenAmount (HOT, '2000000000000000000' ), new TokenAmount (NOT, '1000000000000000000' ))\nCopy\nStatic Methods\ngetAddr ess \ngetAddress (tokenA: Token, tokenB: Token): string\nCopy\nComputes the pair address for the passed Tokens . See Pair Addresses .", "metadata": {"page_number": 568, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f1ca44312e39", "text": "Copy\nStatic Methods\ngetAddr ess \ngetAddress (tokenA: Token, tokenB: Token): string\nCopy\nComputes the pair address for the passed Tokens . See Pair Addresses .\nProperties\nliquidityT oken  \nliquidityToken : Token\nCopy\nA Token representing the liquidity token for the pair . See Pair (ERC-20) .\ntoken0  \ntoken0: Token\nCopy\nSee Token0 .\ntoken1  \ntoken1: Token\nCopy\nSee Token1 .\nreserve0  \nreserve0 : TokenAmount\nCopy\nThe reserve of token0.\nreserve1  \nreserve1 : TokenAmount\nCopy\nThe reserve of token1.", "metadata": {"page_number": 568, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cda321099fdf", "text": "Methods\nreserveOf  \nreserveOf (token: Token): TokenAmount\nCopy\nReturns reserve0 or reserve1, depending on whether token0 or token1 is passed in.\ngetOutputAmount  \ngetOutputAmount (inputAmount : TokenAmount ): [TokenAmount , Pair]\nCopy\nPricing function for exact input amounts. Returns maximum output amount based on current reserves and the new Pair that would\nexist if the trade were executed.\ngetInputAmount  \ngetInputAmount (outputAmount : TokenAmount ): [TokenAmount , Pair]\nCopy\nPricing function for exact output amounts. Returns minimum input amount based on current reserves and the new Pair that would\nexist if the trade were executed.\ngetLiquidityMinted  \ngetLiquidityMinted (totalSupply : TokenAmount , tokenAmountA : TokenAmount , tokenAmountB : TokenAmount ): TokenAmount", "metadata": {"page_number": 569, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dc647d61bccf", "text": "exist if the trade were executed.\ngetLiquidityMinted  \ngetLiquidityMinted (totalSupply : TokenAmount , tokenAmountA : TokenAmount , tokenAmountB : TokenAmount ): TokenAmount\nCopy\nCalculates the exact amount of liquidity tokens minted from a given amount of token0 and token1.\ntotalSupply must be looked up on-chain.\nThe value returned from this function cannot  be used as an input to getLiquidityV alue.\ngetLiquidityV alue \ngetLiquidityValue (\n  token: Token,\n  totalSupply : TokenAmount ,\n  liquidity : TokenAmount ,\n  feeOn: boolean = false,\n  kLast?: BigintIsh\n): TokenAmount\nCopy\nCalculates the exact amount of token0 or token1 that the given amount of liquidity tokens represent.", "metadata": {"page_number": 569, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1727dff18862", "text": "feeOn: boolean = false,\n  kLast?: BigintIsh\n): TokenAmount\nCopy\nCalculates the exact amount of token0 or token1 that the given amount of liquidity tokens represent.\ntotalSupply must be looked up on-chain.\nIf the protocol char ge is on, feeOn must be set to true, and kLast must be provided from an on-chain lookup.\nValues returned from this function cannot  be used as inputs to getLiquidityMinted.\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 569, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "deabe626dc20", "text": "Token\nNext\nRoute\ngetAddress\nliquidityT oken\ntoken0\ntoken1\nreserve0\nreserve1\nreserveOf\ngetOutputAmount\ngetInputAmount\ngetLiquidityMinted\ngetLiquidityV alue\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 570, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ecbc0754642", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 572, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ff69452ad067", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 572, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f7e24af9b651", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nPathHelpful?\nOn this page\nPath\nFunctions  \nhasMultiplePools \n  function  hasMultiplePools (\n    bytes path\n  ) internal  returns (bool)\nCopy\nReturns true if f the path contains two or more pools\nParameters:  \nName TypeDescription\npath bytes The encoded swap path\nReturn Values:  \nTypeDescription\nbool if path contains two or more pools, otherwise false\ndecodeFirstPool \n  function  decodeFirstPool (\n    bytes path\n  ) internal  returns (address tokenA, address tokenB, uint24 fee)\nCopy\nDecodes the first pool in path\nParameters:  \nName TypeDescription", "metadata": {"page_number": 573, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "762a1dd6e5a9", "text": "bytes path\n  ) internal  returns (address tokenA, address tokenB, uint24 fee)\nCopy\nDecodes the first pool in path\nParameters:  \nName TypeDescription\npath bytes The bytes encoded swap path\nReturn Values:  \nName Type Description\ntokenA address The first token of the given pool", "metadata": {"page_number": 573, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b58dc450ebcf", "text": "Name Type Description\ntokenB address The second token of the given pool\nfee uint24 The fee level of the pool\ngetFirstPool \n  function  getFirstPool (\n    bytes path\n  ) internal  returns (bytes)\nCopy\nGets the segment corresponding to the first pool in the path\nParameters:  \nName TypeDescription\npath bytes The bytes encoded swap path\nReturn Values:  \nTypeDescription\nbytes segment containing all data necessary to tar get the first pool in the path\nskipToken \n  function  skipToken (\n    bytes path\n  ) internal  returns (bytes)\nCopy\nSkips a token + fee element from the buf fer and returns the remainder\nParameters:  \nName TypeDescription\npath bytes The swap path\nReturn Values:  \nTypeDescription", "metadata": {"page_number": 574, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e09c4f08976a", "text": "Copy\nSkips a token + fee element from the buf fer and returns the remainder\nParameters:  \nName TypeDescription\npath bytes The swap path\nReturn Values:  \nTypeDescription\nbytes remaining token + fee elements in the path\nEdit this page\nHelpful?\nPrevious\nOracleLibrary\nNext\nPoolAddress\nFunctions\nhasMultiplePools\ndecodeFirstPool", "metadata": {"page_number": 574, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "def551c73d82", "text": "getFirstPool\nskipT oken\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 575, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4a2f2d27dd80", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 576, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fbc7505b9a95", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 576, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "25a940f6a607", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nPathT estHelpful?\nOn this page\nPathT est\nFunctions  \nhasMultiplePools \n  function  hasMultiplePools (\n  ) public returns (bool)\nCopy\ndecodeFirstPool \n  function  decodeFirstPool (\n  ) public returns (address tokenA, address tokenB, uint24 fee)\nCopy\ngetFirstPool \n  function  getFirstPool (\n  ) public returns (bytes)\nCopy\nskipToken \n  function  skipToken (\n  ) public returns (bytes)\nCopy\ngetGasCostOfDecodeFirstPool \n  function  getGasCostOfDecodeFirstPool (", "metadata": {"page_number": 577, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "068dd281d1cf", "text": "Copy\nskipToken \n  function  skipToken (\n  ) public returns (bytes)\nCopy\ngetGasCostOfDecodeFirstPool \n  function  getGasCostOfDecodeFirstPool (\n  ) public returns (uint256)\nCopy\nEdit this page\nHelpful?\nPrevious\nNFTDescriptorT est\nNext\nPeripheryImmutableStateT est", "metadata": {"page_number": 577, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "18ef58458b41", "text": "Functions\nhasMultiplePools\ndecodeFirstPool\ngetFirstPool\nskipT oken\ngetGasCostOfDecodeFirstPool\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 578, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d2b4f7da424", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 579, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "85c84ee52dcb", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 579, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b1d251b31bbf", "text": "classes\nPayments\nOn this page\nPayments\n@uniswap/v3-sdk  / Exports  / Payments\nClass: Payments\nTable of contents  \nConstructors \nconstructor\nProperties \nINTERF ACE\nMethods \nencodeFeeBips\nencodeRefundETH\nencodeSweepT oken\nencodeUnwrapWETH9\nConstructors  \nconstructor \n\u2022 Private  new Payments ()\nCannot be constructed.\nDefined in  \npayments.ts:25\nProperties  \nINTERFACE \n\u25aa Static  INTERF ACE : Interface\nDefined in  \npayments.ts:20\nMethods", "metadata": {"page_number": 580, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "79cd011e975c", "text": "encodeFeeBips \n\u25b8 Static  Private  encodeFeeBips (fee): string\nParameters  \nName Type\nfeePercent\nReturns  \nstring\nDefined in  \npayments.ts:27\nencodeRefundETH \n\u25b8 Static  encodeRefundETH (): string\nReturns  \nstring\nDefined in  \npayments.ts:73\nencodeSweepToken \n\u25b8 Static  encodeSweepT oken (token , amountMinimum , recipient , feeOptions? ): string\nParameters  \nName Type\ntoken Token\namountMinimum default\nrecipient string\nfeeOptions? FeeOptions\nReturns  \nstring\nDefined in  \npayments.ts:49", "metadata": {"page_number": 581, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ff53e67f7c18", "text": "encodeUnwrapWETH9 \n\u25b8 Static  encodeUnwrapWETH9 (amountMinimum , recipient , feeOptions? ): string\nParameters  \nName Type\namountMinimum default\nrecipient string\nfeeOptions? FeeOptions\nReturns  \nstring\nDefined in  \npayments.ts:31\nEdit this page\nHelpful?\nPrevious\nNonfungiblePositionManager\nNext\nPool\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nINTERF ACE\nMethods\nencodeFeeBips\nencodeRefundETH\nencodeSweepT oken\nencodeUnwrapWETH9\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 582, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "01bf446caf3e", "text": "encodeFeeBips\nencodeRefundETH\nencodeSweepT oken\nencodeUnwrapWETH9\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 582, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bab181b23bff", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 583, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6dd6dce71bef", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nCurrencyAmount\nEther\nFraction\nNativeCurrency\nPercent\nPrice\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nPercentHelpful?", "metadata": {"page_number": 584, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b70fcef8cacc", "text": "Price\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nPercentHelpful?\nOn this page\nPercent\n@uniswap/sdk-core  / Exports  / Percent\nClass: Per cent\nHierar chy", "metadata": {"page_number": 584, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ee76a1a6c684", "text": "Fraction\n\u21b3 Percent\nTable of contents  \nConstructors \nconstructor\nProperties \ndenominator\nisPercent\nnumerator\nAccessors \nasFraction\nquotient\nremainder\nMethods \nadd\ndivide\nequalT o\ngreaterThan\ninvert\nlessThan\nmultiply\nsubtract\ntoFixed\ntoSignificant\nConstructors  \nconstructor \n\u2022 new Per cent(numerator , denominator? )\nParameters  \nName Type\nnumerator BigintIsh\ndenominator BigintIsh\nInherited fr om \nFraction .constructor\nDefined in", "metadata": {"page_number": 585, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "76daa4b4c0a2", "text": "entities/fractions/fraction.ts:28\nProperties  \ndenominator \n\u2022 Readonly  denominator : default\nInherited fr om \nFraction .denominator\nDefined in  \nentities/fractions/fraction.ts:26\nisPercent \n\u2022 Readonly  isPer cent: true\nThis boolean prevents a fraction from being interpreted as a Percent\nDefined in  \nentities/fractions/percent.ts:19\nnumerator \n\u2022 Readonly  numerator : default\nInherited fr om \nFraction .numerator\nDefined in  \nentities/fractions/fraction.ts:25\nAccessors  \nasFraction \n\u2022 get asFraction (): Fraction\nHelper method for converting any super class back to a fraction\nReturns  \nFraction\nInherited fr om", "metadata": {"page_number": 586, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "422012f30a4d", "text": "Fraction.asFraction\nDefined in  \nentities/fractions/fraction.ts:154\nquotient \n\u2022 get quotient (): default\nReturns  \ndefault\nInherited fr om \nFraction.quotient\nDefined in  \nentities/fractions/fraction.ts:42\nremainder \n\u2022 get remainder (): Fraction\nReturns  \nFraction\nInherited fr om \nFraction.remainder\nDefined in  \nentities/fractions/fraction.ts:47\nMethods  \nadd \n\u25b8 add(other ): Percent\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns", "metadata": {"page_number": 587, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "67a8668c405b", "text": "Percent\nOverrides  \nFraction .add\nDefined in  \nentities/fractions/percent.ts:21\ndivide \n\u25b8 divide (other ): Percent\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nPercent\nOverrides  \nFraction .divide\nDefined in  \nentities/fractions/percent.ts:33\nequalTo \n\u25b8 equalT o(other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nInherited fr om \nFraction .equalT o\nDefined in  \nentities/fractions/fraction.ts:91", "metadata": {"page_number": 588, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae32dd233c5e", "text": "greaterThan \n\u25b8 greaterThan (other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nInherited fr om \nFraction .greaterThan\nDefined in  \nentities/fractions/fraction.ts:99\ninvert \n\u25b8 invert (): Fraction\nReturns  \nFraction\nInherited fr om \nFraction .invert\nDefined in  \nentities/fractions/fraction.ts:51\nlessThan \n\u25b8 lessThan (other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean", "metadata": {"page_number": 589, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "507d1e90be3a", "text": "Inherited fr om \nFraction .lessThan\nDefined in  \nentities/fractions/fraction.ts:83\nmultiply \n\u25b8 multiply (other ): Percent\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nPercent\nOverrides  \nFraction .multiply\nDefined in  \nentities/fractions/percent.ts:29\nsubtract \n\u25b8 subtract (other ): Percent\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nPercent\nOverrides  \nFraction .subtract\nDefined in  \nentities/fractions/percent.ts:25", "metadata": {"page_number": 590, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7fa27c5bbc9a", "text": "toFixed \n\u25b8 toFixed (decimalPlaces? , format? , rounding? ): string\nParameters  \nName Type Default value\ndecimalPlaces number 2\nformat? object undefined\nrounding? Rounding undefined\nReturns  \nstring\nOverrides  \nFraction .toFixed\nDefined in  \nentities/fractions/percent.ts:41\ntoSignificant \n\u25b8 toSignificant (significantDigits? , format? , rounding? ): string\nParameters  \nName Type Default value\nsignificantDigits number 5\nformat? object undefined\nrounding? Rounding undefined\nReturns  \nstring\nOverrides  \nFraction .toSignificant\nDefined in  \nentities/fractions/percent.ts:37\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 591, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5df2539dc87d", "text": "string\nOverrides  \nFraction .toSignificant\nDefined in  \nentities/fractions/percent.ts:37\nEdit this page\nHelpful?\nPrevious\nNativeCurrency", "metadata": {"page_number": 591, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "641372f932fd", "text": "Next\nPrice\nHierarchy\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties\ndenominator\nisPercent\nnumerator\nAccessors\nasFraction\nquotient\nremainder\nMethods\nadd\ndivide\nequalT o\ngreaterThan\ninvert\nlessThan\nmultiply\nsubtract\ntoFixed\ntoSignificant\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 592, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fe8e75e38373", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 592, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a63f6416354d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nBlockT imestamp\nERC721Permit\nLiquidityManagement\nMulticall\nPeripheryImmutableState\nPeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest", "metadata": {"page_number": 593, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "df4cada376d6", "text": "PeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeripheryHelpful?", "metadata": {"page_number": 593, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "80781e584987", "text": "Base\nPeripheryImmutableState\nOn this page\nPeripheryImmutableState\nImmutable state used by periphery contracts\nFunctions  \nconstructor \n  function  constructor (\n    address _factory , address _WETH9\n  ) internal\nCopy\nEdit this page\nHelpful?\nPrevious\nMulticall\nNext\nPeripheryPayments\nFunctions\nconstructor\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 594, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b7c46f1e461", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 594, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2368489a752c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 595, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a5911ab5362c", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 595, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f900cca5f963", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nPeripheryImmutableStateT estHelpful?\nOn this page\nPeripheryImmutableStateT est\nFunctions  \nconstructor \n  function  constructor (\n  ) public\nCopy\nEdit this page\nHelpful?\nPrevious\nPathT est\nNext\nPoolAddressT est\nFunctions\nconstructor\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 596, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aded32b32a1c", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 596, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "452f2d4fffb3", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 597, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "26eedfeaa79d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nBlockT imestamp\nERC721Permit\nLiquidityManagement\nMulticall\nPeripheryImmutableState\nPeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest", "metadata": {"page_number": 598, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "da2c78c28b6f", "text": "PeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeripheryHelpful?", "metadata": {"page_number": 598, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "75ec9e98e38d", "text": "Base\nPeripheryPayments\nOn this page\nPeripheryPayments\nFunctions  \nreceive \n  function  receive(\n  ) external\nCopy\nunwrapWETH9 \n  function  unwrapWETH9 (\n    uint256 amountMinimum ,\n    address recipient\n  ) external\nCopy\nUnwraps the contract's WETH9 balance and sends it to recipient as ETH.\nThe amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\nParameters:  \nName Type Description\namountMinimum uint256 The minimum amount of WETH9 to unwrap\nrecipient address The address receiving ETH\nsweepToken \n  function  sweepToken (\n    address token,\n    uint256 amountMinimum ,\n    address recipient\n  ) external\nCopy", "metadata": {"page_number": 599, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6c370d8c5ecf", "text": "recipient address The address receiving ETH\nsweepToken \n  function  sweepToken (\n    address token,\n    uint256 amountMinimum ,\n    address recipient\n  ) external\nCopy\nTransfers the full amount of a token held by this contract to recipient\nThe amountMinimum parameter prevents malicious contracts from stealing the token from users\nParameters:  \nName Type Description\ntoken address The contract address of the token which will be transferred to recipient\namountMinimum uint256 The minimum amount of token required for a transfer\nrecipient address The destination address of the token", "metadata": {"page_number": 599, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "61dac082bc7d", "text": "refundETH \n  function  refundETH (\n  ) external\nCopy\nRefunds any ETH balance held by this contract to the msg.sender\nUseful for bundling with mint or increase liquidity that uses ether , or exact output swaps that use ether for the input amount\npay \n  function  pay(\n    address token,\n    address payer,\n    address recipient ,\n    uint256 value\n  ) internal\nCopy\nParameters:  \nName Type Description\ntoken address The token to pay\npayer address The entity that must pay\nrecipient address The entity that will receive payment\nvalue uint256 The amount to pay\nEdit this page\nHelpful?\nPrevious\nPeripheryImmutableState\nNext\nPeripheryPaymentsW ithFee\nFunctions\nreceive\nunwrapWETH9", "metadata": {"page_number": 600, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9cc49bbbff3a", "text": "Edit this page\nHelpful?\nPrevious\nPeripheryImmutableState\nNext\nPeripheryPaymentsW ithFee\nFunctions\nreceive\nunwrapWETH9\nsweepT oken\nrefundETH\npay\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 600, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7a8551ae2d1d", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 601, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "446b89f91898", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nBlockT imestamp\nERC721Permit\nLiquidityManagement\nMulticall\nPeripheryImmutableState\nPeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest", "metadata": {"page_number": 602, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7cd2b647de4f", "text": "PeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeripheryHelpful?", "metadata": {"page_number": 602, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3fbc5f0bf879", "text": "Base\nPeripheryPaymentsW ithFee\nOn this page\nPeripheryPaymentsW ithFee\nFunctions  \nunwrapWETH9WithFee \n  function  unwrapWETH9WithFee (\n        uint256 amountMinimum ,\n        address recipient ,\n        uint256 feeBips ,\n        address feeRecipient\n  ) public\nCopy\nUnwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1\n(inclusive) going to feeRecipient\nThe amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\nsweepTokenWithFee \n  function  sweepTokenWithFee (\n        address token,\n        uint256 amountMinimum ,\n        address recipient ,\n        uint256 feeBips ,", "metadata": {"page_number": 603, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "17ec125fedc2", "text": "sweepTokenWithFee \n  function  sweepTokenWithFee (\n        address token,\n        uint256 amountMinimum ,\n        address recipient ,\n        uint256 feeBips ,\n        address feeRecipient\n  ) public\nCopy\nTransfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1\n(inclusive) going to feeRecipient\nThe amountMinimum parameter prevents malicious contracts from stealing the token from users\nEdit this page\nHelpful?\nPrevious\nPeripheryPayments\nNext\nPoolInitializer\nFunctions\nunwrapWETH9W ithFee\nsweepT okenW ithFee\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 603, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a9cfc4a0d033", "text": "Whitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 604, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b47b35dce683", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\nOverview\nGuides\nConnect to Uniswap\nPool Liquidity\nTrade Tokens\nCustom Linking\nIframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nPool LiquidityHelpful?", "metadata": {"page_number": 605, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1431ebee581b", "text": "Iframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nPool LiquidityHelpful?\nOn this page\nFormalized Model\nUniswap liquidity pools are autonomous and use the Constant Product Market Maker (x * y = k ). This model was\nformalized and the smart contract implementation passed a lightweight formal verification.\nFormalized Specification\nLightweight Verification\nCreate Exchange", "metadata": {"page_number": 605, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d429d82535e6", "text": "The createExchange  function is used to deploy exchange contracts for ERC20 tokens that do not yet have one.\nfactory.methods.createExchange (tokenAddress ).send()\nCopy\nOnce an exchange is created the address can be retrieved with getExchange .\nExchange Reserves  \nEach exchange contract holds a liquidity reserve of ETH and its associated ERC20 token.\nETH Reserve \nThe ETH reserve associated with an ERC20 token exchange is the ETH balance of the exchange smart contract.\nconst ethReserve = web3.eth.getBalance (exchangeAddress )\nCopy\nERC20 Reserve \nThe ERC20 reserve associated with an ERC20 token exchange is the ERC20 balance of the exchange smart contract.\nconst tokenReserve = tokenContract .methods.balanceOf (exchangeAddress )\nCopy\nAdd Liquidity", "metadata": {"page_number": 606, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "882d10b27c8f", "text": "const tokenReserve = tokenContract .methods.balanceOf (exchangeAddress )\nCopy\nAdd Liquidity  \nAnyone who wants can join a Uniswap liquidity pool by calling the addLiquidity  function.\nexchange .methods.addLiquidity (min_liquidity , max_tokens , deadline ).send({ value: ethAmount })\nCopy\nAdding liquidity requires depositing an equivalent value  of ETH and ERC20 tokens into the ERC20 token's associated\nexchange contract.\nThe first liquidity provider to join a pool sets the initial exchange rate by depositing what they believe to be an equivalent\nvalue of ETH and ERC20 tokens. If this ratio is of f, arbitrage traders will bring the prices to equilibrium at the expense of\nthe initial liquidity provider .\nAll future liquidity providers deposit ETH and ERC20's using the exchange rate at the moment of their deposit. If the", "metadata": {"page_number": 606, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fd6e98b9068a", "text": "the initial liquidity provider .\nAll future liquidity providers deposit ETH and ERC20's using the exchange rate at the moment of their deposit. If the\nexchange rate is bad there is a profitable arbitrage opportunity that will correct the price.\nParameters \nThe ethAmount  sent to addLiquidity  is the exact amount of ETH that will be deposited into the liquidity reserves. It should\nbe 50% of the total value a liquidity provider wishes to deposit into the reserves.\nSince liquidity providers must deposit at the current exchange rate, the Uniswap smart contracts use ethAmount  to determine\nthe amount of ERC20 tokens that must be deposited. This token amount is the remaining 50% of total value a liquidity\nprovider wishes to deposit. Since exchange rate can change between when a transaction is signed and when it is executed on\nEthereum, max_tokens  is used to bound the amount this rate can fluctuate. For the first liquidity provider , max_tokens  is the\nexact amount of tokens deposited.", "metadata": {"page_number": 606, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "00007749d128", "text": "Liquidity tokens are minted to track the relative proportion of total reserves that each liquidity provider has contributed.\nmin_liquidity  is used in combination with max_tokens  and ethAmount  to bound the rate at which liquidity tokens are\nminted. For the first liquidity provider , min_liquidity  does not do anything and can be set to 0.\nTransaction deadline  is used to set a time after which a transaction can no longer be executed. This limits the \"free option\"\nproblem, where Ethereum miners can hold signed transactions and execute them based of f market movements.\nRemove Liquidity  \nLiquidity providers use the removeLiquidity  function to withdraw their portion of the reserves.\nexchange .methods.removeLiquidity (amount, min_eth , min_tokens , deadline ).send()\nCopy\nLiquidity is withdrawn at the same ratio as the reserves at the time of withdrawal. If the exchange rate is bad there is a\nprofitable arbitrage opportunity that will correct the price.\nParameters", "metadata": {"page_number": 607, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e3e3324e6a44", "text": "Copy\nLiquidity is withdrawn at the same ratio as the reserves at the time of withdrawal. If the exchange rate is bad there is a\nprofitable arbitrage opportunity that will correct the price.\nParameters \namount  specifies the number of liquidity tokens that will be burned. Dividing this amount by the total liquidity token supply\ngives the percentage of both the ETH and ER20 reserves the provider is withdrawing.\nSince exchange rate can change between when a transaction is signed and when it is executed on Ethereum, min_eth  and\nmin_tokens  are used to bound the amount this rate can fluctuate.\nSame as in addLiquidity , deadline  is used to set a time after which a transaction can no longer be executed.\nEdit this page\nHelpful?\nPrevious\nConnect to Uniswap\nNext\nTrade Tokens\nCreate Exchange\nExchange Reserves\nETH Reserve\nERC20 Reserve\nAdd Liquidity", "metadata": {"page_number": 607, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12ad9795cc0b", "text": "Previous\nConnect to Uniswap\nNext\nTrade Tokens\nCreate Exchange\nExchange Reserves\nETH Reserve\nERC20 Reserve\nAdd Liquidity\nParameters\nRemove Liquidity\nParameters\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 607, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d0e1d79453d8", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 608, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b14afdcf019", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 609, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "43cec34733d9", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 609, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6bdd2309df2e", "text": "classes\nPool\nOn this page\nPool\n@uniswap/v3-sdk  / Exports  / Pool\nClass: Pool\nRepresents a V3 pool\nTable of contents  \nConstructors \nconstructor\nProperties \n_token0Price\n_token1Price\nfee\nliquidity\nsqrtRatioX96\ntickCurrent\ntickDataProvider\ntoken0\ntoken1\nAccessors \nchainId\ntickSpacing\ntoken0Price\ntoken1Price\nMethods \ngetInputAmount\ngetOutputAmount\ninvolvesT oken\npriceOf\nswap\ngetAddress\nConstructors  \nconstructor", "metadata": {"page_number": 610, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d62e0223bd14", "text": "Methods \ngetInputAmount\ngetOutputAmount\ninvolvesT oken\npriceOf\nswap\ngetAddress\nConstructors  \nconstructor \n\u2022 new Pool (tokenA , tokenB , fee, sqrtRatioX96 , liquidity , tickCurrent , ticks? )\nConstruct a pool", "metadata": {"page_number": 610, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0edea8f22598", "text": "Parameters  \nName Type Default value Description\ntokenA Token undefined One of the tokens in the pool\ntokenB Token undefined The other token in the pool\nfee FeeAmount undefinedThe fee in hundredths of a bips of the\ninput amount of every swap that is\ncollected by the pool\nsqrtRatioX96 BigintIsh undefinedThe sqrt of the current ratio of\namounts of token1 to token0\nliquidity BigintIsh undefined The current value of in range liquidity\ntickCurrent number undefined The current tick of the pool\nticksTickDataProvider  | (Tick  |\nTickConstructorArgs )[]NO_TICK_DATA_PROVIDER_DEFAULTThe current state of the pool ticks or a\ndata provider that can return tick data\nDefined in  \nentities/pool.ts:70\nProperties  \n_token0Price", "metadata": {"page_number": 611, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d9dba73498e6", "text": "data provider that can return tick data\nDefined in  \nentities/pool.ts:70\nProperties  \n_token0Price \n\u2022 Private  Optional  _token0Price : Price <Token , Token >\nDefined in  \nentities/pool.ts:41\n_token1Price \n\u2022 Private  Optional  _token1Price : Price <Token , Token >\nDefined in  \nentities/pool.ts:42\nfee \n\u2022 Readonly  fee: FeeAmount\nDefined in  \nentities/pool.ts:35\nliquidity \n\u2022 Readonly  liquidity : default\nDefined in", "metadata": {"page_number": 611, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5c6d8d86a31e", "text": "entities/pool.ts:37\nsqrtRatioX96 \n\u2022 Readonly  sqrtRatioX96 : default\nDefined in  \nentities/pool.ts:36\ntickCurrent \n\u2022 Readonly  tickCurr ent: number\nDefined in  \nentities/pool.ts:38\ntickDataProvider \n\u2022 Readonly  tickDataPr ovider : TickDataProvider\nDefined in  \nentities/pool.ts:39\ntoken0 \n\u2022 Readonly  token0 : Token\nDefined in  \nentities/pool.ts:33\ntoken1 \n\u2022 Readonly  token1 : Token\nDefined in  \nentities/pool.ts:34\nAccessors  \nchainId \n\u2022 get chainId (): number\nReturns the chain ID of the tokens in the pool.", "metadata": {"page_number": 612, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bc841de6a2d4", "text": "Returns  \nnumber\nDefined in  \nentities/pool.ts:149\ntickSpacing \n\u2022 get tickSpacing (): number\nReturns  \nnumber\nDefined in  \nentities/pool.ts:317\ntoken0Price \n\u2022 get token0Price (): Price <Token , Token >\nReturns the current mid price of the pool in terms of token0, i.e. the ratio of token1 over token0\nReturns  \nPrice <Token , Token >\nDefined in  \nentities/pool.ts:109\ntoken1Price \n\u2022 get token1Price (): Price <Token , Token >\nReturns the current mid price of the pool in terms of token1, i.e. the ratio of token0 over token1\nReturns  \nPrice <Token , Token >\nDefined in  \nentities/pool.ts:124\nMethods", "metadata": {"page_number": 613, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46b7c655a16d", "text": "Returns  \nPrice <Token , Token >\nDefined in  \nentities/pool.ts:124\nMethods  \ngetInputAmount", "metadata": {"page_number": 613, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f701587e3d22", "text": "\u25b8 getInputAmount (outputAmount , sqrtPriceLimitX96? ): Promise <[CurrencyAmount <Token >, Pool ]>\nGiven a desired output amount of a token, return the computed input amount and a pool with state updated after the trade\nParameters  \nName Type Description\noutputAmount CurrencyAmount <Token >the output amount for which to quote the input amount\nsqrtPriceLimitX96? defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than\nthis value after the swap. If one for zero, the price cannot be greater than\nthis value after the swap\nReturns  \nPromise <[CurrencyAmount <Token >, Pool ]>\nThe input amount and the pool with updated state\nDefined in  \nentities/pool.ts:185\ngetOutputAmount", "metadata": {"page_number": 614, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a72673671add", "text": "Returns  \nPromise <[CurrencyAmount <Token >, Pool ]>\nThe input amount and the pool with updated state\nDefined in  \nentities/pool.ts:185\ngetOutputAmount \n\u25b8 getOutputAmount (inputAmount , sqrtPriceLimitX96? ): Promise <[CurrencyAmount <Token >, Pool ]>\nGiven an input amount of a token, return the computed output amount, and a pool with state updated after the trade\nParameters  \nName Type Description\ninputAmount CurrencyAmount <Token >The input amount for which to quote the output amount\nsqrtPriceLimitX96? default The Q64.96 sqrt price limit\nReturns  \nPromise <[CurrencyAmount <Token >, Pool ]>\nThe output amount and the pool with updated state\nDefined in  \nentities/pool.ts:159\ninvolvesToken", "metadata": {"page_number": 614, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e92aaafb8baf", "text": "Returns  \nPromise <[CurrencyAmount <Token >, Pool ]>\nThe output amount and the pool with updated state\nDefined in  \nentities/pool.ts:159\ninvolvesToken \n\u25b8 involvesT oken (token ): boolean\nReturns true if the token is either token0 or token1\nParameters", "metadata": {"page_number": 614, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3987601880ce", "text": "Name Type Description\ntokenToken The token to check\nReturns  \nboolean\nTrue if token is either token0 or token\nDefined in  \nentities/pool.ts:102\npriceOf \n\u25b8 priceOf (token ): Price <Token , Token >\nReturn the price of the given token in terms of the other token in the pool.\nParameters  \nName Type Description\ntokenToken The token to return price of\nReturns  \nPrice <Token , Token >\nThe price of the given token, in terms of the other .\nDefined in  \nentities/pool.ts:141\nswap \n\u25b8 Private  swap (zeroForOne , amountSpecified , sqrtPriceLimitX96? ): Promise <{ amountCalculated : default  ;\nliquidity : default  ; sqrtRatioX96 : default  ; tickCurrent : number  }>\nExecutes a swap", "metadata": {"page_number": 615, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "de7cbeb8134b", "text": "liquidity : default  ; sqrtRatioX96 : default  ; tickCurrent : number  }>\nExecutes a swap\nParameters  \nName Type Description\nzeroForOne boolean Whether the amount in is token0 or token1\namountSpecified defaultThe amount of the swap, which implicitly configures the swap as exact input (positive), or\nexact output (negative)\nsqrtPriceLimitX96? defaultThe Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the\nswap. If one for zero, the price cannot be greater than this value after the swap\nReturns", "metadata": {"page_number": 615, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3700df2457c4", "text": "Promise <{ amountCalculated : default  ; liquidity : default  ; sqrtRatioX96 : default  ; tickCurrent : number  }>\namountCalculated\nsqrtRatioX96\nliquidity\ntickCurrent\nDefined in  \nentities/pool.ts:215\ngetAddress \n\u25b8 Static  getAddr ess(tokenA , tokenB , fee, initCodeHashManualOverride? , factoryAddressOverride? ): string\nParameters  \nName Type\ntokenA Token\ntokenB Token\nfee FeeAmount\ninitCodeHashManualOverride? string\nfactoryAddressOverride? string\nReturns  \nstring\nDefined in  \nentities/pool.ts:44\nEdit this page\nHelpful?\nPrevious\nPayments\nNext\nPosition", "metadata": {"page_number": 616, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b95cf6c1ae04", "text": "Returns  \nstring\nDefined in  \nentities/pool.ts:44\nEdit this page\nHelpful?\nPrevious\nPayments\nNext\nPosition\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties\n_token0Price\n_token1Price\nfee", "metadata": {"page_number": 616, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5f399e83d25a", "text": "liquidity\nsqrtRatioX96\ntickCurrent\ntickDataProvider\ntoken0\ntoken1\nAccessors\nchainId\ntickSpacing\ntoken0Price\ntoken1Price\nMethods\ngetInputAmount\ngetOutputAmount\ninvolvesT oken\npriceOf\nswap\ngetAddress\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 617, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4053380a6c4f", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 617, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6a292ce92db0", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 618, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "24bfb139860f", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 618, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "113be1edd887", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nPoolAddressHelpful?\nOn this page\nPoolAddr ess\nFunctions  \ngetPoolKey \n  function  getPoolKey (\n    address tokenA,\n    address tokenB,\n    uint24 fee\n  ) internal  returns (struct PoolAddress .PoolKey)\nCopy\nReturns PoolKey: the ordered tokens with the matched fee levels\nParameters:  \nName Type Description\ntokenA address The first token of a pool, unsorted\ntokenB address The second token of a pool, unsorted\nfee uint24 The fee level of the pool\nReturn Values:  \nName Type Description\nPoolkey PoolAddress.PoolKey The pool details with ordered token0 and token1 assignments\ncomputeAddress", "metadata": {"page_number": 619, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b69f3a99863", "text": "fee uint24 The fee level of the pool\nReturn Values:  \nName Type Description\nPoolkey PoolAddress.PoolKey The pool details with ordered token0 and token1 assignments\ncomputeAddress \n  function  computeAddress (\n    address factory ,\n    struct PoolAddress .PoolKey key\n  ) internal  returns (address pool)\nCopy\nDeterministically computes the pool address given the factory and PoolKey\nParameters:  \nName Type Description\nfactory address The Uniswap V3 factory contract address\nkey struct PoolAddress.PoolKey The PoolKey", "metadata": {"page_number": 619, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7fe9fd79cfaf", "text": "Return Values:  \nName Type Description\npool address The contract address of the V3 pool\nEdit this page\nHelpful?\nPrevious\nPath\nNext\nPoolT icksCounter\nFunctions\ngetPoolKey\ncomputeAddress\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 620, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "afafbc699a0c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 621, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fd5f8bcec696", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 621, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "195e6568c383", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nPoolAddressT estHelpful?\nOn this page\nPoolAddr essTest\nFunctions  \nPOOL_INIT_CODE_HASH \n  function  POOL_INIT_CODE_HASH (\n  ) external  returns (bytes32)\nCopy\ncomputeAddress \n  function  computeAddress (\n  ) external  returns (address)\nCopy\ngetGasCostOfComputeAddress \n  function  getGasCostOfComputeAddress (\n  ) external  returns (uint256)\nCopy\nEdit this page\nHelpful?\nPrevious\nPeripheryImmutableStateT est\nNext\nSelfPermitT est\nFunctions", "metadata": {"page_number": 622, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "221fd26e35ab", "text": ") external  returns (uint256)\nCopy\nEdit this page\nHelpful?\nPrevious\nPeripheryImmutableStateT est\nNext\nSelfPermitT est\nFunctions\nPOOL_INIT_CODE_HASH\ncomputeAddress\ngetGasCostOfComputeAddress\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 622, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "686d7331d07d", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 623, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f977193d3f48", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nBlockT imestamp\nERC721Permit\nLiquidityManagement\nMulticall\nPeripheryImmutableState\nPeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest", "metadata": {"page_number": 624, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6f2df0acf446", "text": "PeripheryPayments\nPeripheryPaymentsW ithFee\nPoolInitializer\nSelfPermit\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeripheryHelpful?", "metadata": {"page_number": 624, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e0beaaca0ea", "text": "Base\nPoolInitializer\nOn this page\nPoolInitializer\nFunctions  \ncreateAndInitializePoolIfNecessary \n  function  createAndInitializePoolIfNecessary (\n    address token0,\n    address token1,\n    uint24 fee,\n    uint160 sqrtPriceX96\n  ) external  returns (address pool)\nCopy\nCreates a new pool if it does not exist, then initializes if not initialized\nThis method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\nParameters:  \nName Type Description\ntoken0 address The contract address of token0 of the pool\ntoken1 address The contract address of token1 of the pool\nfee uint24 The fee amount of the v3 pool for the specified token pair", "metadata": {"page_number": 625, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "da4b1cbe7cfc", "text": "Parameters:  \nName Type Description\ntoken0 address The contract address of token0 of the pool\ntoken1 address The contract address of token1 of the pool\nfee uint24 The fee amount of the v3 pool for the specified token pair\nsqrtPriceX96 uint160 The initial square root price of the pool as a Q64.96 value\nReturn Values:  \nName Type Description\npool addressReturns the pool address based on the pair of tokens and fee, will return the newly created pool address if\nnecessary\nEdit this page\nHelpful?\nPrevious\nPeripheryPaymentsW ithFee\nNext\nSelfPermit\nFunctions\ncreateAndInitializePoolIfNecessary\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 625, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6eda4b9dc57e", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 626, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e19344f20d63", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nSwaps\nPools\nFlash Swaps\nOracles\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000", "metadata": {"page_number": 627, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7a7b5feeb574", "text": "Oracles\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nCore Concepts\nPoolsHelpful?\nPools", "metadata": {"page_number": 627, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "84c489ccae73", "text": "Introduction\nEach Uniswap liquidity pool is a trading venue for a pair of ERC20 tokens. When a pool contract is created, its balances of each token are 0; in order for the pool to begin facilitating\ntrades, someone must seed it with an initial deposit of each token. This first liquidity provider is the one who sets the initial price of the pool. They are incentivized to deposit an equal value\nof both tokens into the pool. To see why , consider the case where the first liquidity provider deposits tokens at a ratio dif ferent from the current market rate. This immediately creates a\nprofitable arbitrage opportunity , which is likely to be taken by an external party .\nWhen other liquidity providers add to an existing pool, they must deposit pair tokens proportional to the current price. If they don\u2019 t, the liquidity they added is at risk of being arbitraged as\nwell. If they believe the current price is not correct, they may arbitrage it to the level they desire, and add liquidity at that price.\nPool tokens", "metadata": {"page_number": 628, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9413822a2929", "text": "Whenever liquidity is deposited into a pool, unique tokens known as liquidity tokens  are minted and sent to the provider's address. These tokens represent a given liquidity provider's\ncontribution to a pool. The proportion of the pool's liquidity provided determines the number of liquidity tokens the provider receives. If the provider is minting a new pool, the number of\nliquidity tokens they will receive will equal sqrt(x * y), where x and y represent the amount of each token provided.\nWhenever a trade occurs, a 0.3% fee is char ged to the transaction sender . This fee is distributed pro-rata  to all LPs in the pool upon completion of the trade.\nTo retrieve the underlying liquidity , plus any fees accrued, liquidity providers must \"burn\" their liquidity tokens, ef fectively exchanging them for their portion of the liquidity pool, plus the\nproportional fee allocation.", "metadata": {"page_number": 629, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c3faf1e1dd27", "text": "To retrieve the underlying liquidity , plus any fees accrued, liquidity providers must \"burn\" their liquidity tokens, ef fectively exchanging them for their portion of the liquidity pool, plus the\nproportional fee allocation.\nAs liquidity tokens are themselves tradable assets, liquidity providers may sell, transfer , or otherwise use their liquidity tokens in any way they see fit.\nLearn more with advanced topics:\nUnderstanding Returns\nFees\nWhy pools?\nUniswap is unique in that it doesn\u2019 t use an order book to derive the price of an asset or to match buyers and sellers of tokens. Instead, Uniswap uses what are called Liquidity Pools.\nLiquidity is typically represented by discrete orders placed by individuals onto a centrally operated order book. A participant looking to provide liquidity or make markets must actively\nmanage their orders, continuously updating them in response to the activity of others in the marketplace.", "metadata": {"page_number": 629, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "38addb54c955", "text": "Liquidity is typically represented by discrete orders placed by individuals onto a centrally operated order book. A participant looking to provide liquidity or make markets must actively\nmanage their orders, continuously updating them in response to the activity of others in the marketplace.\nWhile order books are foundational to finance and work great for certain usecases, they suf fer from a few important limitations that are especially magnified when applied to a\ndecentralized or blockchain-native setting. Order books require intermediary infrastructure to host the orderbook and match orders. This creates points of control and adds additional layers\nof complexity . They also require active participation and management from market makers who usually use sophisticated infrastructure and algorithms, limiting participation to advanced\ntraders. Order books were invented in a world with relatively few assets being traded, so it is not surprising they aren't ideal for an ecosystem where anyone can create their own token, and\nthose tokens usually have low liquidity . In sum, with the infrastructural trade-of fs presented by a platform like Ethereum, order books are not the native architecture for implementing a", "metadata": {"page_number": 629, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c0b3b814c2e0", "text": "those tokens usually have low liquidity . In sum, with the infrastructural trade-of fs presented by a platform like Ethereum, order books are not the native architecture for implementing a\nliquidity protocol on a blockchain.\nUniswap focuses on the strengths of Ethereum to reimagine token swaps from first principles.\nA blockchain-native liquidity protocol should take advantage of the trusted code execution environment, the autonomous and perpetually running virtual machine, and an open,\npermissionless, and inclusive access model that produces an exponentially growing ecosystem of virtual assets.\nIt is important to reiterate that a Pool is just a smart contract, operated by users calling functions on it. Swapping tokens is calling swap  on a Pool contract instance, while providing liquidity\nis calling deposit .\nJust how end-users can interact with the Uniswap protocol through the Interface (which in turn interacts with the underlying contracts), developers can interact directly with the smart", "metadata": {"page_number": 629, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "596c00cdd5d2", "text": "is calling deposit .\nJust how end-users can interact with the Uniswap protocol through the Interface (which in turn interacts with the underlying contracts), developers can interact directly with the smart\ncontracts and integrate Uniswap functionality into their own applications without relying on intermediaries or needing permission.\nDeveloper  resour ces", "metadata": {"page_number": 629, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "37ae2fa76a8b", "text": "To see how to pool tokens in a smart contract read Providing Liquidity .\nEdit this page\nHelpful?\nPrevious\nSwaps\nNext\nFlash Swaps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 630, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a860ff8c09a2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 631, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b5b224430bd5", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 631, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "09dd1b039d5e", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nPoolT icksCounterHelpful?\nOn this page\nPoolT icksCounter\nFunctions  \ncountInitializedTicksCrossed \n  function  countInitializedTicksCrossed (\n  ) internal  view returns (uint32 initializedTicksCrossed )\nCopy\nThis function counts the number of initialized ticks that would incur a gas cost between tickBefore and tickAfter . When\ntickBefore and/or tickAfter themselves are initialized, the logic over whether we should count them depends on the direction\nof the swap. If we are swapping upwards (tickAfter > tickBefore) we don't want to count tickBefore but we do want to count\ntickAfter . The opposite is true if we are swapping downwards.\nEdit this page\nHelpful?", "metadata": {"page_number": 632, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e063bc25fc3", "text": "tickAfter . The opposite is true if we are swapping downwards.\nEdit this page\nHelpful?\nPrevious\nPoolAddress\nNext\nPositionKey\nFunctions\ncountInitializedT icksCrossed\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists", "metadata": {"page_number": 632, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9f32f8808f88", "text": "Brand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 633, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "66050c2ad4d2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 634, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "525d31cb7e1b", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 634, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4886e982b050", "text": "classes\nPosition\nOn this page\nPosition\n@uniswap/v3-sdk  / Exports  / Position\nClass: Position\nRepresents a position on a Uniswap V3 Pool\nTable of contents  \nConstructors \nconstructor\nProperties \n_mintAmounts\n_token0Amount\n_token1Amount\nliquidity\npool\ntickLower\ntickUpper\nAccessors \namount0\namount1\nmintAmounts\ntoken0PriceLower\ntoken0PriceUpper\nMethods \nburnAmountsW ithSlippage\nmintAmountsW ithSlippage\nratiosAfterSlippage\nfromAmount0\nfromAmount1\nfromAmounts\nConstructors", "metadata": {"page_number": 635, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7c71414e332e", "text": "burnAmountsW ithSlippage\nmintAmountsW ithSlippage\nratiosAfterSlippage\nfromAmount0\nfromAmount1\nfromAmounts\nConstructors  \nconstructor \n\u2022 new Position (__namedParameters )\nConstructs a position for a given pool with the given liquidity", "metadata": {"page_number": 635, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c5afa56b265d", "text": "Parameters  \nName Type\n__namedParameters PositionConstructorArgs\nDefined in  \nentities/position.ts:40\nProperties  \n_mintAmounts \n\u2022 Private  _mintAmounts : null  | Readonly <{ amount0 : default  ; amount1 : default  }> = null\nDefined in  \nentities/position.ts:31\n_token0Amount \n\u2022 Private  _token0Amount : null  | CurrencyAmount <Token > = null\nDefined in  \nentities/position.ts:29\n_token1Amount \n\u2022 Private  _token1Amount : null  | CurrencyAmount <Token > = null\nDefined in  \nentities/position.ts:30\nliquidity \n\u2022 Readonly  liquidity : default\nDefined in  \nentities/position.ts:26\npool \n\u2022 Readonly  pool: Pool", "metadata": {"page_number": 636, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f790fa4a9e1e", "text": "entities/position.ts:30\nliquidity \n\u2022 Readonly  liquidity : default\nDefined in  \nentities/position.ts:26\npool \n\u2022 Readonly  pool: Pool\nDefined in", "metadata": {"page_number": 636, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a08a7947f992", "text": "entities/position.ts:23\ntickLower \n\u2022 Readonly  tickLower : number\nDefined in  \nentities/position.ts:24\ntickUpper \n\u2022 Readonly  tickUpper : number\nDefined in  \nentities/position.ts:25\nAccessors  \namount0 \n\u2022 get amount0 (): CurrencyAmount <Token >\nReturns the amount of token0 that this position's liquidity could be burned for at the current pool price\nReturns  \nCurrencyAmount <Token >\nDefined in  \nentities/position.ts:68\namount1 \n\u2022 get amount1 (): CurrencyAmount <Token >\nReturns the amount of token1 that this position's liquidity could be burned for at the current pool price\nReturns  \nCurrencyAmount <Token >\nDefined in  \nentities/position.ts:100", "metadata": {"page_number": 637, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a3d9ab1e562a", "text": "Returns the amount of token1 that this position's liquidity could be burned for at the current pool price\nReturns  \nCurrencyAmount <Token >\nDefined in  \nentities/position.ts:100\nmintAmounts", "metadata": {"page_number": 637, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "23baf254240a", "text": "\u2022 get mintAmounts (): Readonly <{ amount0 : default  ; amount1 : default  }>\nReturns the minimum amounts that must be sent in order to mint the amount of liquidity held by the position at the current\nprice for the pool\nReturns  \nReadonly <{ amount0 : default  ; amount1 : default  }>\nDefined in  \nentities/position.ts:258\ntoken0PriceLower \n\u2022 get token0PriceLower (): Price <Token , Token >\nReturns the price of token0 at the lower tick\nReturns  \nPrice <Token , Token >\nDefined in  \nentities/position.ts:54\ntoken0PriceUpper \n\u2022 get token0PriceUpper (): Price <Token , Token >\nReturns the price of token0 at the upper tick\nReturns  \nPrice <Token , Token >\nDefined in", "metadata": {"page_number": 638, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3080cc63b563", "text": "token0PriceUpper \n\u2022 get token0PriceUpper (): Price <Token , Token >\nReturns the price of token0 at the upper tick\nReturns  \nPrice <Token , Token >\nDefined in  \nentities/position.ts:61\nMethods  \nburnAmountsWithSlippage \n\u25b8 burnAmountsW ithSlippage (slippageTolerance ): Readonly <{ amount0 : default  ; amount1 : default  }>\nReturns the minimum amounts that should be requested in order to safely burn the amount of liquidity held by the position\nwith the given slippage tolerance\nParameters", "metadata": {"page_number": 638, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6ab7abe268f4", "text": "Name Type Description\nslippageTolerance Percent tolerance of unfavorable slippage from the current price\nReturns  \nReadonly <{ amount0 : default  ; amount1 : default  }>\nThe amounts, with slippage\nDefined in  \nentities/position.ts:213\nmintAmountsWithSlippage \n\u25b8 mintAmountsW ithSlippage (slippageTolerance ): Readonly <{ amount0 : default  ; amount1 : default  }>\nReturns the minimum amounts that must be sent in order to safely mint the amount of liquidity held by the position with the\ngiven slippage tolerance\nParameters  \nName Type Description\nslippageTolerance Percent Tolerance of unfavorable slippage from the current price\nReturns  \nReadonly <{ amount0 : default  ; amount1 : default  }>\nThe amounts, with slippage\nDefined in  \nentities/position.ts:157", "metadata": {"page_number": 639, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2228b9267290", "text": "Returns  \nReadonly <{ amount0 : default  ; amount1 : default  }>\nThe amounts, with slippage\nDefined in  \nentities/position.ts:157\nratiosAfterSlippage \n\u25b8 Private  ratiosAfterSlippage (slippageTolerance ): Object\nReturns the lower and upper sqrt ratios if the price 'slips' up to slippage tolerance percentage\nParameters  \nName Type Description\nslippageTolerance Percent The amount by which the price can 'slip' before the transaction will revert\nReturns  \nObject\nThe sqrt ratios after slippage", "metadata": {"page_number": 639, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "09f0c007bb06", "text": "Name Type\nsqrtRatioX96Lower default\nsqrtRatioX96Upper default\nDefined in  \nentities/position.ts:134\nfromAmount0 \n\u25b8 Static  fromAmount0 (__namedParameters ): Position\nComputes a position with the maximum amount of liquidity received for a given amount of token0, assuming an unlimited\namount of token1\nParameters  \nName Type\n__namedParameters Object\n__namedParameters.amount0 BigintIsh\n__namedParameters.pool Pool\n__namedParameters.tickLower number\n__namedParameters.tickUpper number\n__namedParameters.useFullPrecision boolean\nReturns  \nPosition\nThe position\nDefined in  \nentities/position.ts:354\nfromAmount1", "metadata": {"page_number": 640, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0dd20f108f19", "text": "__namedParameters.useFullPrecision boolean\nReturns  \nPosition\nThe position\nDefined in  \nentities/position.ts:354\nfromAmount1 \n\u25b8 Static  fromAmount1 (__namedParameters ): Position\nComputes a position with the maximum amount of liquidity received for a given amount of token1, assuming an unlimited\namount of token0\nParameters  \nName Type\n__namedParameters Object\n__namedParameters.amount1 BigintIsh\n__namedParameters.pool Pool\n__namedParameters.tickLower number\n__namedParameters.tickUpper number", "metadata": {"page_number": 640, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7eefebc487f2", "text": "Returns  \nPosition\nThe position\nDefined in  \nentities/position.ts:378\nfromAmounts \n\u25b8 Static  fromAmounts (__namedParameters ): Position\nComputes the maximum amount of liquidity received for a given amount of token0, token1, and the prices at the tick\nboundaries.\nParameters  \nName Type\n__namedParameters Object\n__namedParameters.amount0 BigintIsh\n__namedParameters.amount1 BigintIsh\n__namedParameters.pool Pool\n__namedParameters.tickLower number\n__namedParameters.tickUpper number\n__namedParameters.useFullPrecision boolean\nReturns  \nPosition\nThe amount of liquidity for the position\nDefined in  \nentities/position.ts:312\nEdit this page", "metadata": {"page_number": 641, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "88077854fd4f", "text": "__namedParameters.useFullPrecision boolean\nReturns  \nPosition\nThe amount of liquidity for the position\nDefined in  \nentities/position.ts:312\nEdit this page\nHelpful?\nPrevious\nPool\nNext\nPositionLibrary\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties", "metadata": {"page_number": 641, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f1f8eb7204b8", "text": "_mintAmounts\n_token0Amount\n_token1Amount\nliquidity\npool\ntickLower\ntickUpper\nAccessors\namount0\namount1\nmintAmounts\ntoken0PriceLower\ntoken0PriceUpper\nMethods\nburnAmountsW ithSlippage\nmintAmountsW ithSlippage\nratiosAfterSlippage\nfromAmount0\nfromAmount1\nfromAmounts\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 642, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bf37a2ec8679", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 642, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cedb47047b6c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 643, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "17072d4d01af", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 643, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ddc6ad8a35fb", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nPositionKeyHelpful?\nOn this page\nPositionKey\nFunctions  \ncompute \n  function  compute(\n  ) internal  returns (bytes32)\nCopy\nReturns the key of the position in the core library\nEdit this page\nHelpful?\nPrevious\nPoolT icksCounter\nNext\nTokenRatioSortOrder\nFunctions\ncompute\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 644, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5380f64504db", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 644, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eed4c3668946", "text": "Governance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 645, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "44a3bae56e94", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 646, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1792c9202e76", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 646, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cf1c3afb0067", "text": "classes\nPositionLibrary\nOn this page\nPositionLibrary\n@uniswap/v3-sdk  / Exports  / PositionLibrary\nClass: PositionLibrary\nTable of contents  \nConstructors \nconstructor\nMethods \ngetTokensOwed\nConstructors  \nconstructor \n\u2022 Private  new PositionLibrary ()\nCannot be constructed.\nDefined in  \nutils/position.ts:10\nMethods  \ngetTokensOwed \n\u25b8 Static  getTokensOwed (feeGrowthInside0LastX128 , feeGrowthInside1LastX128 , liquidity ,\nfeeGrowthInside0X128 , feeGrowthInside1X128 ): default []\nParameters  \nName Type\nfeeGrowthInside0LastX128 default", "metadata": {"page_number": 647, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "edee9b6ae707", "text": "feeGrowthInside0X128 , feeGrowthInside1X128 ): default []\nParameters  \nName Type\nfeeGrowthInside0LastX128 default\nfeeGrowthInside1LastX128 default\nliquidity default\nfeeGrowthInside0X128 default\nfeeGrowthInside1X128 default\nReturns", "metadata": {"page_number": 647, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0928f232c287", "text": "default []\nDefined in  \nutils/position.ts:13\nEdit this page\nHelpful?\nPrevious\nPosition\nNext\nRoute\nTable of contents\nConstructors\nMethods\nConstructors\nconstructor\nMethods\ngetTokensOwed\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 648, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c2d7a894c237", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nCurrencyAmount\nEther\nFraction\nNativeCurrency\nPercent\nPrice\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nPriceHelpful?", "metadata": {"page_number": 649, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "332063f74981", "text": "Price\nToken\nenums\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nclasses\nPriceHelpful?\nOn this page\nPrice\n@uniswap/sdk-core  / Exports  / Price\nClass: Price<TBase, TQuote >\nType parameters", "metadata": {"page_number": 649, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7dcf4d344a36", "text": "Name Type\nTBase extends Currency\nTQuote extends Currency\nHierar chy \nFraction\n\u21b3 Price\nTable of contents  \nConstructors \nconstructor\nProperties \nbaseCurrency\ndenominator\nnumerator\nquoteCurrency\nscalar\nAccessors \nadjustedForDecimals\nasFraction\nquotient\nremainder\nMethods \nadd\ndivide\nequalT o\ngreaterThan\ninvert\nlessThan\nmultiply\nquote\nsubtract\ntoFixed\ntoSignificant\nConstructors  \nconstructor \n\u2022 new Price <TBase , TQuote >(...args )", "metadata": {"page_number": 650, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3f783e15e570", "text": "quote\nsubtract\ntoFixed\ntoSignificant\nConstructors  \nconstructor \n\u2022 new Price <TBase , TQuote >(...args )\nConstruct a price, either with the base and quote currency amount, or the\nType parameters", "metadata": {"page_number": 650, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0ba961284acc", "text": "Name Type\nTBase extends Currency\nTQuote extends Currency\nParameters  \nName Type\n...args[TBase , TQuote , BigintIsh , BigintIsh ] | [{ baseAmount : CurrencyAmount <TBase > ; quoteAmount :\nCurrencyAmount <TQuote > }]\nOverrides  \nFraction .constructor\nDefined in  \nentities/fractions/price.ts:18\nProperties  \nbaseCurrency \n\u2022 Readonly  baseCurr ency : TBase\nDefined in  \nentities/fractions/price.ts:10\ndenominator \n\u2022 Readonly  denominator : default\nInherited fr om \nFraction .denominator\nDefined in  \nentities/fractions/fraction.ts:26\nnumerator \n\u2022 Readonly  numerator : default", "metadata": {"page_number": 651, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3447c593cdf8", "text": "Inherited fr om \nFraction .denominator\nDefined in  \nentities/fractions/fraction.ts:26\nnumerator \n\u2022 Readonly  numerator : default\nInherited fr om \nFraction .numerator\nDefined in", "metadata": {"page_number": 651, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6a968b20d87f", "text": "entities/fractions/fraction.ts:25\nquoteCurrency \n\u2022 Readonly  quoteCurr ency : TQuote\nDefined in  \nentities/fractions/price.ts:1 1\nscalar \n\u2022 Readonly  scalar : Fraction\nDefined in  \nentities/fractions/price.ts:12\nAccessors  \nadjustedForDecimals \n\u2022 Private  get adjustedForDecimals (): Fraction\nGet the value scaled by decimals for formatting\nReturns  \nFraction\nDefined in  \nentities/fractions/price.ts:77\nasFraction \n\u2022 get asFraction (): Fraction\nHelper method for converting any super class back to a fraction\nReturns  \nFraction\nInherited fr om \nFraction.asFraction\nDefined in  \nentities/fractions/fraction.ts:154", "metadata": {"page_number": 652, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5a8b00ec3948", "text": "quotient \n\u2022 get quotient (): default\nReturns  \ndefault\nInherited fr om \nFraction.quotient\nDefined in  \nentities/fractions/fraction.ts:42\nremainder \n\u2022 get remainder (): Fraction\nReturns  \nFraction\nInherited fr om \nFraction.remainder\nDefined in  \nentities/fractions/fraction.ts:47\nMethods  \nadd \n\u25b8 add(other ): Fraction\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nFraction\nInherited fr om \nFraction .add", "metadata": {"page_number": 653, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "969a962062d7", "text": "Defined in  \nentities/fractions/fraction.ts:55\ndivide \n\u25b8 divide (other ): Fraction\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nFraction\nInherited fr om \nFraction .divide\nDefined in  \nentities/fractions/fraction.ts:1 15\nequalTo \n\u25b8 equalT o(other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nInherited fr om \nFraction .equalT o\nDefined in  \nentities/fractions/fraction.ts:91\ngreaterThan \n\u25b8 greaterThan (other ): boolean", "metadata": {"page_number": 654, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "18b589e1e407", "text": "Parameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nInherited fr om \nFraction .greaterThan\nDefined in  \nentities/fractions/fraction.ts:99\ninvert \n\u25b8 invert (): Price <TQuote , TBase >\nFlip the price, switching the base and quote currency\nReturns  \nPrice <TQuote , TBase >\nOverrides  \nFraction .invert\nDefined in  \nentities/fractions/price.ts:49\nlessThan \n\u25b8 lessThan (other ): boolean\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nboolean\nInherited fr om \nFraction .lessThan", "metadata": {"page_number": 655, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f6da9b52ae9e", "text": "Defined in  \nentities/fractions/fraction.ts:83\nmultiply \n\u25b8 multiply <TOtherQuote >(other ): Price <TBase , TOtherQuote >\nMultiply the price by another price, returning a new price. The other price must have the same base currency as this price's\nquote currency\nType parameters  \nName Type\nTOtherQuote extends Currency\nParameters  \nName Type Description\notherPrice <TQuote , TOtherQuote >the other price\nReturns  \nPrice <TBase , TOtherQuote >\nOverrides  \nFraction .multiply\nDefined in  \nentities/fractions/price.ts:57\nquote \n\u25b8 quote (currencyAmount ): CurrencyAmount <TQuote >\nReturn the amount of quote currency corresponding to a given amount of the base currency\nParameters  \nName Type Description", "metadata": {"page_number": 656, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "03d71e43cbbd", "text": "quote \n\u25b8 quote (currencyAmount ): CurrencyAmount <TQuote >\nReturn the amount of quote currency corresponding to a given amount of the base currency\nParameters  \nName Type Description\ncurrencyAmount CurrencyAmount <TBase >the amount of base currency to quote against the price\nReturns  \nCurrencyAmount <TQuote >\nDefined in  \nentities/fractions/price.ts:67", "metadata": {"page_number": 656, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b6c7ac7bfd75", "text": "subtract \n\u25b8 subtract (other ): Fraction\nParameters  \nName Type\notherBigintIsh  | Fraction\nReturns  \nFraction\nInherited fr om \nFraction .subtract\nDefined in  \nentities/fractions/fraction.ts:69\ntoFixed \n\u25b8 toFixed (decimalPlaces? , format? , rounding? ): string\nParameters  \nName Type Default value\ndecimalPlaces number 4\nformat? object undefined\nrounding? Rounding undefined\nReturns  \nstring\nOverrides  \nFraction .toFixed\nDefined in  \nentities/fractions/price.ts:85\ntoSignificant \n\u25b8 toSignificant (significantDigits? , format? , rounding? ): string\nParameters", "metadata": {"page_number": 657, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "864dbd509d82", "text": "Name Type Default value\nsignificantDigits number 6\nformat? object undefined\nrounding? Rounding undefined\nReturns  \nstring\nOverrides  \nFraction .toSignificant\nDefined in  \nentities/fractions/price.ts:81\nEdit this page\nHelpful?\nPrevious\nPercent\nNext\nToken\nType parameters\nHierarchy\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties\nbaseCurrency\ndenominator\nnumerator\nquoteCurrency\nscalar\nAccessors\nadjustedForDecimals\nasFraction\nquotient\nremainder\nMethods\nadd", "metadata": {"page_number": 658, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c3e55b3e8e9b", "text": "numerator\nquoteCurrency\nscalar\nAccessors\nadjustedForDecimals\nasFraction\nquotient\nremainder\nMethods\nadd\ndivide\nequalT o\ngreaterThan\ninvert\nlessThan\nmultiply\nquote\nsubtract\ntoFixed", "metadata": {"page_number": 658, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e9bfec4e28fb", "text": "toSignificant\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 659, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e20dcaa4bd2d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 660, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b33ad5f46846", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nGuides\nPricingHelpful?\nOn this page\nPricing\nLooking for a quickstart ?\nLet's talk pricing. This guide will focus on the two most important Uniswap prices: the mid price  and the execution price .\nMid Price\nThe mid price, in the context of Uniswap, is the price that reflects the ratio of r eserves in one or mor e pairs . There are three ways we\ncan think about this price. Perhaps most simply , it defines the relative value of one token in terms of the other . It also represents the", "metadata": {"page_number": 660, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ace489adf158", "text": "price at which you could theoretically trade an infinitesimal amount (\u03b5) of one token for the other . Finally , it can be interpreted as the\ncurrent market-clearing or fair value price  of the assets.\nLet's consider the mid price for DAI-WETH (that is, the amount of DAI per 1 WETH).\nDirect \nThe simplest way to get the DAI-WETH mid price is to observe the pair directly:\nimport { ChainId, Token, WETH, Fetcher, Route } from '@uniswap/sdk'\nconst DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F' , 18)\n// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option", "metadata": {"page_number": 661, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9340ceb18c6e", "text": "// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option\nconst pair = await Fetcher.fetchPairData (DAI, WETH[DAI.chainId])\nconst route = new Route([pair], WETH[DAI.chainId])\nconsole.log(route.midPrice .toSignificant (6)) // 201.306\nconsole.log(route.midPrice .invert().toSignificant (6)) // 0.00496756\nCopy\nYou may be wondering why we have to construct a route to get the mid price, as opposed to simply getting it from the pair (which,\nafter all, includes all the necessary data). The reason is simple: a route forces us to be opinionated about the direction  of trading.", "metadata": {"page_number": 661, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "16e42f2b2219", "text": "You may be wondering why we have to construct a route to get the mid price, as opposed to simply getting it from the pair (which,\nafter all, includes all the necessary data). The reason is simple: a route forces us to be opinionated about the direction  of trading.\nRoutes consist of one or more pairs, and an input token (which fully defines a trading path). In this case, we passed WETH as the input\ntoken, meaning we're interested in a WETH -> DAI trade.\nNow we understand that the mid price is going to be defined in terms of DAI/WETH. Not to worry though, if we need the WETH/DAI\nprice, we can easily invert.\nFinally , you may have noticed that we're formatting the price to 6 significant digits. This is because internally , prices are stored as\nexact-precision fractions, which can be converted to other representations on demand. For a full list of options, see Price .\nIndir ect", "metadata": {"page_number": 661, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "82b50bac25ac", "text": "exact-precision fractions, which can be converted to other representations on demand. For a full list of options, see Price .\nIndir ect \nFor the sake of example, let's imagine a direct pair between DAI and WETH doesn't exist . In order to get a DAI-WETH mid price we'll\nneed to pick a valid route. Imagine both DAI and WETH have pairs with a third token, USDC. In that case, we can calculate an\nindirect mid price through the USDC pairs:\nimport { ChainId, Token, WETH, Fetcher, Route } from '@uniswap/sdk'\nconst USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48' , 6)", "metadata": {"page_number": 661, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "620c630e3cd9", "text": "const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48' , 6)\nconst DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F' , 18)\n// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option\nconst USDCWETHPair  = await Fetcher.fetchPairData (USDC, WETH[ChainId.MAINNET])\nconst DAIUSDCPair  = await Fetcher.fetchPairData (DAI, USDC)\nconst route = new Route([USDCWETHPair , DAIUSDCPair ], WETH[ChainId.MAINNET])", "metadata": {"page_number": 661, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bc72952836d1", "text": "const DAIUSDCPair  = await Fetcher.fetchPairData (DAI, USDC)\nconst route = new Route([USDCWETHPair , DAIUSDCPair ], WETH[ChainId.MAINNET])\nconsole.log(route.midPrice .toSignificant (6)) // 202.081\nconsole.log(route.midPrice .invert().toSignificant (6)) // 0.00494851\nCopy\nExecution Price\nMid prices are great representations of the current state of a route, but what about trades? It turns out that it makes sense to define\nanother price, the execution  price of a trade, as the ratio of assets sent/received.\nImagine we're interested in trading 1 WETH for DAI:\nimport { ChainId, Token, WETH, Fetcher, Trade, Route, TokenAmount , TradeType  } from '@uniswap/sdk'", "metadata": {"page_number": 661, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32d984db5a9a", "text": "const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F' , 18)\n// note that you may want/need to handle this async code differently,\n// for example if top-level await is not an option\nconst pair = await Fetcher.fetchPairData (DAI, WETH[DAI.chainId])\nconst route = new Route([pair], WETH[DAI.chainId])\nconst trade = new Trade(route, new TokenAmount (WETH[DAI.chainId], '1000000000000000000' ), TradeType .EXACT_INPUT )\nconsole.log(trade.executionPrice .toSignificant (6))\nconsole.log(trade.nextMidPrice .toSignificant (6))\nCopy", "metadata": {"page_number": 662, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0488737c8b35", "text": "console.log(trade.executionPrice .toSignificant (6))\nconsole.log(trade.nextMidPrice .toSignificant (6))\nCopy\nNotice that we're constructing a trade of 1 WETH for as much DAI as possible, given the curr ent reserves of the dir ect pair . The\nexecution price represents the average DAI/WETH price for this trade. Of course, the reserves of any pair can change every block,\nwhich would af fect the execution price.\nAlso notice that we're able to access the next mid price, if the trade were to complete successfully before the reserves changed.\nEdit this page\nHelpful?\nPrevious\nFetching Data\nNext\nTrading\nDirect\nIndirect\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 662, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "68c11acda499", "text": "Fetching Data\nNext\nTrading\nDirect\nIndirect\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 662, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d58de75bcd90", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nGovernance\nOverview\nProcess\nBeginners Guide to Voting\nGlossary\nAdversarial Circumstances\nChangelog\nResearch\nResources\nGlossary\n\u0000\nGovernance\nProcessHelpful?\nOn this page\nProcess\nThis document is a living document which represents the current process guidelines for developing and advancing Uniswap\nGovernance Proposals.\nProcess  \nSeveral governance venues are available to Uniswap governance, each serving its own particular purpose.\n1. gov.uniswap.or g", "metadata": {"page_number": 663, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "26c51dd72af2", "text": "Governance Proposals.\nProcess  \nSeveral governance venues are available to Uniswap governance, each serving its own particular purpose.\n1. gov.uniswap.or g\ngov.uniswap.or g is a Discourse-hosted forum for governance-related discussion. Community members must register for an\naccount before sharing or liking posts. New members are required to enter 4 topics and read 15 posts over the course of 10\nminutes before they are permitted to post themselves.\n2. Snapshot\nSnapshot is a simple voting interface that allows users to signal sentiment of f-chain. Votes on snapshot are weighted by the\nnumber of UNI delegated to the address used to vote.\n3. Governance Portal\nThe formal governance portal can be accessed directly through the Uniswap app interface. Votes are delegated and cast\nthrough the portal.", "metadata": {"page_number": 663, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2d26c6e7a483", "text": "Below we outline a preliminary draft for the Uniswap governance process, detailing exactly where these venues fit in. These\nprocesses are subject to change according to feedback from the Uniswap community .\nPhase 1: Temperature Check \u2014 Discourse/Snapshot \nThe purpose of the Temperature Check is to determine if there is suf ficient will to make changes to the status quo.\nTo create a Temperature Check:\n1. Ask a general, non-biased question to the community on gov .uniswap.or g about a potential change (example: \"Should\nUniswap governance add liquidity mining for XYZ token? \"). Forum posts should be labeled as follows: \"Temperature\nCheck - [Your Title Here] \". The forum post should include a link to the associated Snapshot poll.\n2. Voters use Snapshot to indicate their interest in bringing it forward to the next stage. Snapshot poll lengths should be\nset to 2 days.", "metadata": {"page_number": 664, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2b1a9835067a", "text": "Check - [Your Title Here] \". The forum post should include a link to the associated Snapshot poll.\n2. Voters use Snapshot to indicate their interest in bringing it forward to the next stage. Snapshot poll lengths should be\nset to 2 days.\nThat's it! You've just started the process of gaining support for a proposal. At the end of the 2 days, a majority vote with a\n25k UNI yes-vote threshold wins.\nIf the Temperature check does not suggest a change from the status quo, the topic will be closed on the governance site. If\nthe Temperature Check does suggest a change, proceed to Stage 2: Consensus Check.\nPhase 2: Consensus Check \u2014 Discourse/Snapshot \nThe purpose of the Consensus Check is to establish formal discussion around a potential proposal.\nTo create a Consensus Check:\n1. Use feedback from the Temperature Check post and create a new Snapshot poll which covers the options which have", "metadata": {"page_number": 664, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "64c00d8a5c83", "text": "The purpose of the Consensus Check is to establish formal discussion around a potential proposal.\nTo create a Consensus Check:\n1. Use feedback from the Temperature Check post and create a new Snapshot poll which covers the options which have\ngained support. This poll can either be binary or multiple choice but you are required to include the option \"Make no\nchange \" or its equivalent. Set the poll duration to 5 days.\n2. Create a new topic in the Proposal Discussion category on gov .uniswap.or g titled \"Consensus Check \u2014 [Your Title\nHere] \". This will alert the community that this topic has already passed Temperature Check. Any topics beginning\nwith Consensus Check that have not passed Temperature Check will immediately be removed by moderators. Make\nsure that the discussion thread links to the new Snapshot poll and the Temperature Check thread.\n3. Reach out to your network to build support for the proposal. Discuss the proposal and actively solicit delegates to vote", "metadata": {"page_number": 664, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d606147d57f", "text": "sure that the discussion thread links to the new Snapshot poll and the Temperature Check thread.\n3. Reach out to your network to build support for the proposal. Discuss the proposal and actively solicit delegates to vote\non it. Be willing to respond to questions on the Consensus Check topic. Share your view point, although try to remain\nas impartial as possible.\nAt the end of 5 days, whichever option has the majority of votes wins, and can be included in a governance proposal for\nStage 3. A 50k UNI yes-vote quorum is required for the Consensus Check to pass.\nIf the option \"Make no change \" wins, the Consensus Check topic will be closed by the moderators.\nPhase 3: Governance Proposal \u2014 Governance Portal \nPhase 3 \u2014 Governance Proposal \u2014 is the final step of the governance process. The proposal should be based on the\nwinning outcome from the Consensus Check and can consist of one or multiple actions, up to a maximum of 10 actions per\nproposal.\nTo create a Governance Proposal:", "metadata": {"page_number": 664, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3205e3191643", "text": "winning outcome from the Consensus Check and can consist of one or multiple actions, up to a maximum of 10 actions per\nproposal.\nTo create a Governance Proposal:\n1. Write the code for your proposal, which will be voted on through the Governance Portal. More resources can be found\nhere . All proposed code should be audited by a professional auditor . This auditing process may be paid or reimbursed\nby the community treasury .", "metadata": {"page_number": 664, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ab938afdc047", "text": "2. Ensure that you have at least 2.5 million UNI delegated to your address in order to submit a proposal, or find someone\nwho has enough UNI to meet the proposal threshold to propose on your behalf.\n3. Create a topic in the Proposal Discussion category on gov .uniswap.or g titled \"Governance Proposal \u2014 [Your Title\nHere] \" and link to any relevant Snapshot polls/discussion threads as well as the code audit report. Topics that begin\nwith \"Governance Proposal \" that have not successfully passed through the Temperature Check and Consensus Check\nstages will be removed by moderators.\n4. Call the propose() function of the Governor Bravo to deploy your proposal.\nOnce the propose() function has been called, a two day voting delay will start. After voting delay is finished a seven day\nvoting period begins. Ongoing discussion can take place in the gov .uniswap.or g forum. If the proposal passes successfully , a\ntwo day timelock will follow before the proposed code is executed.\nSoft governance", "metadata": {"page_number": 665, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a414acd98986", "text": "voting period begins. Ongoing discussion can take place in the gov .uniswap.or g forum. If the proposal passes successfully , a\ntwo day timelock will follow before the proposed code is executed.\nSoft governance  \nThe process described above lays out a structure for those wishing to host a formal vote around a particular issue.\nHowever , governing this system also requires a degree of \"meta governance \", discussions that inform the direction of and\nthe implementation processes behind policy but which don 't qualify as policy themselves.\nThe community may discuss new ideas and strategies for governance \u2014 including changes to the three-step process outlined\nabove \u2014 in the \"Governance-Meta \" category . On-chain voting is not necessary to make updates to of f-chain processes.\nGovernance Glossary  \nUNI:  An ERC-20 token that designates the weight of a user 's voting rights. The more UNI a user has in their wallet,\nthe more weight their delegation or vote on a proposal holds.", "metadata": {"page_number": 665, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0cc1c23259f", "text": "Governance Glossary  \nUNI:  An ERC-20 token that designates the weight of a user 's voting rights. The more UNI a user has in their wallet,\nthe more weight their delegation or vote on a proposal holds.\nDelegation:  UNI holders cannot vote or create proposals until they delegate their voting rights to an address.\nDelegation can be given to one address at a time, including the holder 's own address. Note that delegation does not\nlock tokens; it simply adds votes to the chosen delegation address.\nProposal:  A proposal is executable code that modifies the governance contract or treasury and how they work. In\norder to create a proposal, a user must have at least 0.25% (2.5M UNI) of all UNI delegated to their address.\nProposals are stored in the \"proposals \" mapping of the Governor smart contract. All proposals are subject to a 7-day\nvoting period. If the proposer does not maintain their vote weight balance throughout the voting period, the proposal\nmay be canceled by anyone.", "metadata": {"page_number": 665, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cc181c111d6b", "text": "Proposals are stored in the \"proposals \" mapping of the Governor smart contract. All proposals are subject to a 7-day\nvoting period. If the proposer does not maintain their vote weight balance throughout the voting period, the proposal\nmay be canceled by anyone.\nQuorum:  In order for a vote to pass, it must achieve quorum of 4% of all UNI (40M) voting in the af firmative. The\npurpose of the quorum is to ensure that the only measures that pass have adequate voter participation.\nVoting:  Users can vote for or against single proposals once they have voting rights delegated to their address. Votes\ncan be cast while a proposal is in the \"Active \" state. Votes can be submitted immediately using \"castV ote\" or\nsubmitted later with \"castV oteBySig \" (For more info on castV oteBySig and of fline signatures, see EIP-712). If the\nmajority of votes (and a 4% quorum of UNI) vote for a proposal, the proposal may be queued in the Timelock.", "metadata": {"page_number": 665, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "80aa1db42d3c", "text": "majority of votes (and a 4% quorum of UNI) vote for a proposal, the proposal may be queued in the Timelock.\nVoting Period:  Once a proposal has been put forward, Uniswap community members will have a seven day period\n(the Voting Period) to cast their votes.\nTimelock:  All governance and other administrative actions are required to sit in the Timelock for a minimum of 2\ndays, after which they can be implemented.\nEdit this page\nHelpful?\nPrevious\nOverview", "metadata": {"page_number": 665, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1197cec67676", "text": "Next\nBeginners Guide to Voting\nProcess\nPhase 1: Temperature Check \u2014 Discourse/Snapshot\nPhase 2: Consensus Check \u2014 Discourse/Snapshot\nPhase 3: Governance Proposal \u2014 Governance Portal\nSoft governance\nGovernance Glossary\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 666, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0ece5c51ec6b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nSmart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance", "metadata": {"page_number": 669, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b889ba13cdd2", "text": "Smart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides\nSmart Contract Integration\nProviding LiquidityHelpful?\nOn this page\nProviding Liquidity", "metadata": {"page_number": 669, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1c4131560962", "text": "Introduction  \nWhen providing liquidity from a smart contract, the most important thing to keep in mind is that tokens deposited into a pool\nat any rate other than the current reserve ratio are vulnerable to being arbitraged . As an example, if the ratio of x:y in a pair\nis 10:2 (i.e. the price is 5), and someone naively adds liquidity at 5:2 (a price of 2.5), the contract will simply accept all\ntokens (changing the price to 3.75 and opening up the market to arbitrage), but only issue pool tokens entitling the sender to\nthe amount of assets sent at the proper ratio, in this case 5:1. To avoid donating to arbitrageurs, it is imperative to add\nliquidity at the current price. Luckily , it's easy to ensure that this condition is met!\nUsing the Router  \nThe easiest way to safely add liquidity to a pool is to use the router , which provides simple methods to safely add liquidity to", "metadata": {"page_number": 670, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dfb0772367bf", "text": "liquidity at the current price. Luckily , it's easy to ensure that this condition is met!\nUsing the Router  \nThe easiest way to safely add liquidity to a pool is to use the router , which provides simple methods to safely add liquidity to\na pool. If the liquidity is to be added to an ERC-20/ERC-20 pair , use addLiquidity . If WETH is involved, use\naddLiquidityETH .\nThese methods both require the caller to commit to a belief about the curr ent price , which is encoded in the\namount*Desired  parameters. Typically , it's fairly safe to assume that the current fair market price is around what the current\nreserve ratio is for a pair (because of arbitrage). So, if a user wants to add 1 ETH to a pool, and the current DAI/WETH ratio\nof the pool is 200/1, it's reasonable to calculate that 200 DAI must be sent along with the ETH, which is an implicit", "metadata": {"page_number": 670, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a97548e90310", "text": "of the pool is 200/1, it's reasonable to calculate that 200 DAI must be sent along with the ETH, which is an implicit\ncommitment to the price of 200 DAI/1 WETH. However , it's important to note that this must be calculated befor e the\ntransaction is submitted . It is not safe  to look up the reserve ratio from within a transaction and rely on it as a price belief, as\nthis ratio can be cheaply manipulated to your detriment.\nHowever , it is still possible to submit a transaction which encodes a belief about the price which ends up being wrong\nbecause of a lar ger change in the true market price before the transaction is confirmed. For that reason, it's necessary to pass\nan additional set of parameters which encode the caller's tolerance to price changes. These amount*Min  parameters should\ntypically be set to percentages of the calculated desired price. So, at a 1% tolerance level, if our user sends a transaction with", "metadata": {"page_number": 670, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1eb07ecb50c2", "text": "an additional set of parameters which encode the caller's tolerance to price changes. These amount*Min  parameters should\ntypically be set to percentages of the calculated desired price. So, at a 1% tolerance level, if our user sends a transaction with\n1 ETH and 200 DAI, amountETHMin  should be set to e.g. .99 ETH, and amountTokenMin  should be set to 198 DAI. This\nmeans that, at worst, liquidity will be added at a rate between 198 DAI/1 ETH and 202.02 DAI/1 ETH (200 DAI/.99 ETH).\nOnce the price calculations have been made, it's important to ensure that your contract a) controls at least as many\ntokens/ETH as were passed as amount*Desired  parameters, and b) has granted approval to the router to withdraw this many\ntokens.\nEdit this page\nHelpful?\nPrevious\nImplement a Swap\nNext\nBuilding an Oracle\nIntroduction", "metadata": {"page_number": 670, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e76bba99779", "text": "tokens.\nEdit this page\nHelpful?\nPrevious\nImplement a Swap\nNext\nBuilding an Oracle\nIntroduction\nUsing the Router\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 670, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "70baa0eac2ae", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 671, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8bc7af0070d4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nAPI Overview\nEntities\nQueries\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference", "metadata": {"page_number": 672, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f89bfb8c3af3", "text": "Technical Reference\nAPI\nAPI Overview\nEntities\nQueries\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nAPI\nQueriesHelpful?\nOn this page\nQueries\nThe subgraph can be queried to retrieve important information about Uniswap, pairs, tokens, transactions, users, and more.\nThis page will provide examples for common queries.\nTo try these queries and run your own visit the subgraph sandbox .", "metadata": {"page_number": 672, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4a34e51ffe54", "text": "Global Data \nTo query global data you can pass in the Uniswap Factory address and select from available fields.\nGlobal Stats  \nAll time volume in USD, total liquidity in USD, all time transaction count.\n{\n uniswapFactory(id: \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\"){\n   totalVolumeUSD\n   totalLiquidityUSD\n   txCount\n }\n}\nCopy\nGlobal Historical lookup  \nTo get a snapshot of past state, use The Graph's block query feature and query at a previous block. See this post to get more\ninformation about fetching block numbers from timestamps . This can be used to calculate things like 24hr volume.\n{", "metadata": {"page_number": 673, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7b7c46ed1968", "text": "To get a snapshot of past state, use The Graph's block query feature and query at a previous block. See this post to get more\ninformation about fetching block numbers from timestamps . This can be used to calculate things like 24hr volume.\n{\n uniswapFactory(id: \"0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\", block: {number: 10291203}){\n   totalVolumeUSD\n   totalLiquidityUSD\n   txCount\n }\n}\nCopy\nPair Data \nPair Overview  \nFetch a snapshot of the current state of the pair with common values. This example fetches the DAI/WETH pair .\n{\n pair(id: \"0xa478c2975ab1ea89e8196811f51a7b7ade33eb11\"){", "metadata": {"page_number": 673, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "35d45413234f", "text": "{\n pair(id: \"0xa478c2975ab1ea89e8196811f51a7b7ade33eb11\"){\n     token0 {\n       id\n       symbol\n       name\n       derivedETH\n     }\n     token1 {\n       id\n       symbol\n       name\n       derivedETH\n     }\n     reserve0\n     reserve1\n     reserveUSD\n     trackedReserveETH\n     token0Price\n     token1Price\n     volumeUSD\n     txCount\n }\n}", "metadata": {"page_number": 673, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0006e5ccbf18", "text": "Copy\nAll pairs in Uniswap  \nThe Graph limits entity return amounts to 1000 per query as of now . To get all pairs on Uniswap use a loop and graphql skip\nquery to fetch multiple chunks of 1000 pairs. The query would look like this (where skip is some incrementing variable\npassed into your query).\n{\n query pairs($skip: Int!) {\n   pairs(first: 1000, skip: $skip) {\n     id\n   }\n }\n}\nCopy\nMost liquid pairs  \nOrder by liquidity to get the most liquid pairs in Uniswap.\n{\n pairs(first: 1000, orderBy: reserveUSD, orderDirection: desc) {\n   id\n }\n}\nCopy\nRecent Swaps within a Pair", "metadata": {"page_number": 674, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f4ba200791e2", "text": "{\n pairs(first: 1000, orderBy: reserveUSD, orderDirection: desc) {\n   id\n }\n}\nCopy\nRecent Swaps within a Pair  \nGet the last 100 swaps on a pair by fetching Swap events and passing in the pair address. You'll often want token\ninformation as well.\n{\nswaps(orderBy: timestamp, orderDirection: desc, where:\n { pair: \"0xa478c2975ab1ea89e8196811f51a7b7ade33eb11\" }\n) {\n     pair {\n       token0 {\n         symbol\n       }\n       token1 {\n         symbol\n       }\n     }\n     amount0In\n     amount0Out\n     amount1In\n     amount1Out\n     amountUSD\n     to", "metadata": {"page_number": 674, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b314e9ade9b6", "text": "token1 {\n         symbol\n       }\n     }\n     amount0In\n     amount0Out\n     amount1In\n     amount1Out\n     amountUSD\n     to\n }\n}\nCopy\nPair Daily Aggr egated  \nDay data is useful for building charts and historical views around entities. To get stats about a pair in daily buckets query for\nday entities bounded by timestamps. This query gets the first 100 days after the given unix timestamp on the DAI/WETH\npair.", "metadata": {"page_number": 674, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "55996fa97527", "text": "{\n pairDayDatas(first: 100, orderBy: date, orderDirection: asc,\n   where: {\n     pairAddress: \"0xa478c2975ab1ea89e8196811f51a7b7ade33eb11\",\n     date_gt: 1592505859\n   }\n ) {\n     date\n     dailyVolumeToken0\n     dailyVolumeToken1\n     dailyVolumeUSD\n     reserveUSD\n }\n}\nCopy\nToken Data \nToken data can be fetched using the token contract address as an ID. Token data is aggregated across all pairs the token is\nincluded in. Any token that is included in some pair in Uniswap can be queried.\nToken Overview", "metadata": {"page_number": 675, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6b588f2340c9", "text": "Token data can be fetched using the token contract address as an ID. Token data is aggregated across all pairs the token is\nincluded in. Any token that is included in some pair in Uniswap can be queried.\nToken Overview  \nGet a snapshot of the current stats on a token in Uniswap. This query fetches current stats on DAI. The allPairs field gets the\nfirst 200 pairs DAI is included in sorted by liquidity in derived USD.\n{\n token(id: \"0x6b175474e89094c44da98b954eedeac495271d0f\"){\n   name\n   symbol\n   decimals\n   derivedETH\n   tradeVolumeUSD\n   totalLiquidity\n }\n}\nCopy\nAll Tokens in Uniswap", "metadata": {"page_number": 675, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f487b76cd5f9", "text": "name\n   symbol\n   decimals\n   derivedETH\n   tradeVolumeUSD\n   totalLiquidity\n }\n}\nCopy\nAll Tokens in Uniswap  \nSimilar to fetching all pairs (see above), you can query all tokens in Uniswap. Because The Graph service limits return size\nto 1000 entities use graphql skip query . (Note this query will not work in the graph sandbox and more resembles the\nstructure of a query you'd pass to some graphql middleware like Apollo ).\n{\n query tokens($skip: Int!) {\n   tokens(first: 1000, skip: $skip) {\n     id\n     name\n     symbol\n   }\n }\n}\nCopy\nToken Transactions", "metadata": {"page_number": 675, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e4b121a1e41", "text": "tokens(first: 1000, skip: $skip) {\n     id\n     name\n     symbol\n   }\n }\n}\nCopy\nToken Transactions  \nTo get transactions that include a token you'll need to first fetch an array of pairs that the token is included in (this can be\ndone with the allPairs field on the Token entity .) Once you have an array of pairs the token is included in, filter on that in the\ntransaction lookup.", "metadata": {"page_number": 675, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "73152508d94f", "text": "This query fetches the latest 30 mints, swaps, and burns involving DAI. The allPairs array could look something like this\nwhere we include the DAI/WETH pair address and the DAI/USDC pair address.\nallPairs = [\n \"0xa478c2975ab1ea89e8196811f51a7b7ade33eb11\",\n \"0xae461ca67b15dc8dc81ce7615e0320da1a9ab8d5\"\n]\nCopy\nquery($allPairs: [String!]) {\n mints(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n   transaction {\n     id\n     timestamp\n   }\n   to\n   liquidity\n   amount0\n   amount1\n   amountUSD", "metadata": {"page_number": 676, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6db0c3e50bda", "text": "transaction {\n     id\n     timestamp\n   }\n   to\n   liquidity\n   amount0\n   amount1\n   amountUSD\n }\n burns(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n   transaction {\n     id\n     timestamp\n   }\n   to\n   liquidity\n   amount0\n   amount1\n   amountUSD\n }\n swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n   transaction {\n     id\n     timestamp\n   }\n   amount0In\n   amount0Out\n   amount1In\n   amount1Out\n   amountUSD\n   to", "metadata": {"page_number": 676, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "23a925619fab", "text": "transaction {\n     id\n     timestamp\n   }\n   amount0In\n   amount0Out\n   amount1In\n   amount1Out\n   amountUSD\n   to\n }\n}\nCopy\nToken Daily Aggr egated  \nLike pair and global daily lookups, tokens have daily entities that can be queries as well. This query gets daily information\nfor DAI. Note that you may want to sort in ascending order to receive your days from oldest to most recent in the return\narray .\n{\n tokenDayDatas(orderBy: date, orderDirection: asc,\n  where: {\n    token: \"0x6b175474e89094c44da98b954eedeac495271d0f\"\n  }\n ) {\n    id\n    date\n    priceUSD", "metadata": {"page_number": 676, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "54618e05e6c0", "text": "}\n ) {\n    id\n    date\n    priceUSD\n    totalLiquidityToken\n    totalLiquidityUSD\n    totalLiquidityETH", "metadata": {"page_number": 676, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a3b2aefd2db2", "text": "dailyVolumeETH\n    dailyVolumeToken\n    dailyVolumeUSD\n }\n}\nCopy\nETH Price \nYou can use the Bundle entity to query current USD price of ETH in Uniswap based on a weighted average of stablecoins.\n{\n bundle(id: \"1\" ) {\n   ethPrice\n }\n}\nCopy\nEdit this page\nHelpful?\nPrevious\nEntities\nNext\nGovernance Reference\nGlobal Data\nPair Data\nToken Data\nETH Price\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 677, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "343956730315", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 677, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aeb2adf57eab", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 679, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d8f9382c432f", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nGuides\nSDK Quick startHelpful?\nOn this page\nSDK Quick start\nThe Uniswap SDK exists to help developers build on top of Uniswap. It's designed to run in any environment that can\nexecute JavaScript (think websites, node scripts, etc.). While simple enough to use in a hackathon project, it's also robust\nenough to power production applications.", "metadata": {"page_number": 679, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "539accc6a394", "text": "Installation\nThe easiest way to consume the SDK is via npm. To install it in your project, simply run yarn add @uniswap/sdk  (or npm\ninstall @uniswap/sdk ).\nUsage\nTo run code from the SDK in your application, use an import  or require  statement, depending on which your environment\nsupports. Note that the guides following this page will use ES6 syntax.\nES6 (import)\nimport { ChainId } from '@uniswap/sdk'\nconsole.log(`The chainId of mainnet is ${ChainId.MAINNET}.`)\nCopy\nCommonJS (r equir e) \nconst UNISWAP = require('@uniswap/sdk' )\nconsole.log(`The chainId of mainnet is ${UNISWAP.ChainId.MAINNET}.`)\nCopy\nRefer ence", "metadata": {"page_number": 680, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94d7078e6aa7", "text": "console.log(`The chainId of mainnet is ${UNISWAP.ChainId.MAINNET}.`)\nCopy\nRefer ence\nComprehensive reference material for the SDK is publicly available on the Uniswap Labs Github .\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nFetching Data\nES6 (import)\nCommonJS (require)\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 680, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b3277d79eb6a", "text": "Analytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 681, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d2d94af7429", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 682, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3be67d49518e", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nQuoteOptionsHelpful?", "metadata": {"page_number": 682, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "25114881ad4e", "text": "On this page\nQuoteOptions\n@uniswap/v3-sdk  / Exports  / QuoteOptions\nInterface: QuoteOptions\nOptional ar guments to send to the quoter .\nTable of contents  \nProperties \nsqrtPriceLimitX96\nuseQuoterV2\nProperties  \nsqrtPriceLimitX96 \n\u2022 Optional  sqrtPriceLimitX96 : BigintIsh\nThe optional price limit for the trade.\nDefined in  \nquoter .ts:17\nuseQuoterV2 \n\u2022 Optional  useQuoterV2 : boolean\nThe optional quoter interface to use\nDefined in  \nquoter .ts:22\nEdit this page\nHelpful?\nPrevious\nNFTPermitOptions\nNext\nRemoveLiquidityOptions", "metadata": {"page_number": 683, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5fe3b863763e", "text": "Defined in  \nquoter .ts:22\nEdit this page\nHelpful?\nPrevious\nNFTPermitOptions\nNext\nRemoveLiquidityOptions\nTable of contents\nProperties\nProperties\nsqrtPriceLimitX96\nuseQuoterV2", "metadata": {"page_number": 683, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fbbd4029c3cc", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 684, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c02c533d0849", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nQuoter\nQuoterV2\nTickLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes", "metadata": {"page_number": 685, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a633d4d14b23", "text": "Staker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLens\nQuoterHelpful?\nOn this page\nQuoter", "metadata": {"page_number": 685, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac35ce496b49", "text": "Allows getting the expected amount out or amount in for a given swap without executing the swap\nThese functions are not gas ef ficient and should not be called on chain. Instead, optimistically execute the swap and check\nthe amounts in the callback.\nFunctions  \nconstructor \n  function  constructor (\n  ) public\nCopy\nuniswapV3SwapCallback \n  function  uniswapV3SwapCallback (\n    int256 amount0Delta ,\n    int256 amount1Delta ,\n    bytes data\n  ) external\nCopy\nCalled to msg.sender  after executing a swap via IUniswapV3Pool#swap.\nIn the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a", "metadata": {"page_number": 686, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "35b4cffb3882", "text": "Copy\nCalled to msg.sender  after executing a swap via IUniswapV3Pool#swap.\nIn the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a\nUniswapV3Pool deployed by the canonical UniswapV3Factory . amount0Delta and amount1Delta can both be 0 if no tokens\nwere swapped.\nParameters:  \nName Type Description\namount0Delta int256 The amount of token0 that was sent (negative) or must be received (positive) by the pool by\nthe end of the swap. If positive, the callback must send that amount of token0 to the pool. | amount1Delta  | int256 | The\namount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the\ncallback must send that amount of token1 to the pool. | data  | bytes | Any data passed through by the caller via the", "metadata": {"page_number": 686, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "43408e73499b", "text": "amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the\ncallback must send that amount of token1 to the pool. | data  | bytes | Any data passed through by the caller via the\nIUniswapV3PoolActions#swap call\nquoteExactInputSingle \n  function  quoteExactInputSingle (\n    address tokenIn ,\n    address tokenOut ,\n    uint24 fee,\n    uint256 amountIn ,\n    uint160 sqrtPriceLimitX96\n  ) public returns (uint256 amountOut )\nCopy\nReturns the amount out received for a given exact input but for a swap of a single pool\nParameters:  \nName Type Description\ntokenIn address The token being swapped in", "metadata": {"page_number": 686, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "200b6d1882b5", "text": "Name Type Description\ntokenOut address The token being swapped out\nfee uint24 The fee of the token pool to consider for the pair\namountIn uint256 The desired input amount\nsqrtPriceLimitX96 uint160 The price limit of the pool that cannot be exceeded by the swap\nReturn Values:  \nName Type Description\namountOut uint256 The amount of tokenOut  that would be received\nquoteExactInput \n  function  quoteExactInput (\n    bytes path,\n    uint256 amountIn\n  ) external  returns (uint256 amountOut )\nCopy\nReturns the amount out received for a given exact input swap without executing the swap\nParameters:  \nName Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee\namountIn uint256 The amount of the first token to swap\nReturn Values:", "metadata": {"page_number": 687, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5536e38d8744", "text": "Parameters:  \nName Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee\namountIn uint256 The amount of the first token to swap\nReturn Values:  \nName Type Description\namountOut uint256 The amount of the last token that would be received\nquoteExactOutputSingle \n  function  quoteExactOutputSingle (\n    address tokenIn ,\n    address tokenOut ,\n    uint24 fee,\n    uint256 amountOut ,\n    uint160 sqrtPriceLimitX96\n  ) public returns (uint256 amountIn )\nCopy\nReturns the amount in required to receive the given exact output amount but for a swap of a single pool\nParameters:  \nName Type Description\ntokenIn address The token being swapped in\ntokenOut address The token being swapped out", "metadata": {"page_number": 687, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6fcc9efa4e42", "text": "Copy\nReturns the amount in required to receive the given exact output amount but for a swap of a single pool\nParameters:  \nName Type Description\ntokenIn address The token being swapped in\ntokenOut address The token being swapped out\nfee uint24 The fee of the token pool to consider for the pair\namountOut uint256 The desired output amount", "metadata": {"page_number": 687, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dc956aa5595e", "text": "Name Type Description\nsqrtPriceLimitX96 uint160 The price limit of the pool that cannot be exceeded by the swap\nReturn Values:  \nName Type Description\namountIn uint256 The amount required as the input for the swap in order to receive amountOut\nquoteExactOutput \n  function  quoteExactOutput (\n    bytes path,\n    uint256 amountOut\n  ) external  returns (uint256 amountIn )\nCopy\nReturns the amount in required for a given exact output swap without executing the swap\nParameters:  \nName Type Description\npath bytes The path of the swap, i.e. each token pair and the pool fee\namountOut uint256 The amount of the last token to receive\nReturn Values:  \nName Type Description\namountIn uint256 The amount of first token required to be paid\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 688, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "47b673e0e25e", "text": "Return Values:  \nName Type Description\namountIn uint256 The amount of first token required to be paid\nEdit this page\nHelpful?\nPrevious\nIWETH9\nNext\nQuoterV2\nFunctions\nconstructor\nuniswapV3SwapCallback\nquoteExactInputSingle\nquoteExactInput\nquoteExactOutputSingle\nquoteExactOutput\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 688, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0c2c16801817", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 689, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8c6edacca3a7", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nQuoter\nQuoterV2\nTickLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes", "metadata": {"page_number": 690, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "59dded7a2e75", "text": "Staker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLens\nQuoterV2Helpful?\nOn this page\nQuoterV2\nAllows getting the expected amount out or amount in for a given swap without executing the swap\nThese functions are not gas ef ficient and should not be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.\nFunctions  \nconstructor \n  function  constructor (\n  ) public\nCopy\nuniswapV3SwapCallback", "metadata": {"page_number": 690, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "98569253cbe5", "text": "Functions  \nconstructor \n  function  constructor (\n  ) public\nCopy\nuniswapV3SwapCallback \n  function  uniswapV3SwapCallback (\n    int256 amount0Delta ,\n    int256 amount1Delta ,", "metadata": {"page_number": 690, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "321a3406b32f", "text": "bytes data\n  ) external  view override\nCopy\nCalled to msg.sender  after executing a swap via IUniswapV3Pool#swap.\nIn the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical\nUniswapV3Factory . amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\nParameters:  \nName Type Description\namount0Delta int256 The amount of token0 that was sent (negative) or must be received (positive) by the pool by\nthe end of the swap. If positive, the callback must send that amount of token0 to the pool. | amount1Delta  | int256 | The amount of token1 that was sent (negative) or", "metadata": {"page_number": 691, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bf5de7398373", "text": "the end of the swap. If positive, the callback must send that amount of token0 to the pool. | amount1Delta  | int256 | The amount of token1 that was sent (negative) or\nmust be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool. | data  | bytes | Any data passed\nthrough by the caller via the IUniswapV3PoolActions#swap call\nquoteExactInputSingle \n  function  quoteExactInputSingle (\n  ) public override returns (uint256 amountOut , uint160 sqrtPriceX96After , uint32 initializedTicksCrossed , uint256 gasEstimate )\nCopy\nquoteExactInput \n  function  quoteExactInput (", "metadata": {"page_number": 691, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3298cb173e47", "text": "Copy\nquoteExactInput \n  function  quoteExactInput (\n  ) public override returns (uint256 amountOut , uint160[] sqrtPriceX96AfterList , uint32[] initializedTicksCrossedList , uint256 gasEstimate )\nCopy\nquoteExactOutputSingle \n  function  quoteExactOutputSingle (\n  ) public override returns (uint256 amountIn , uint160 sqrtPriceX96After , uint32 initializedTicksCrossed , uint256 gasEstimate )\nCopy\nquoteExactOutput \n  function  quoteExactOutput (\n  ) public override returns (uint256 amountIn , uint160[] sqrtPriceX96AfterList , uint32[] initializedTicksCrossedList , uint256 gasEstimate )\nCopy\nEdit this page\nHelpful?", "metadata": {"page_number": 691, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8738b39eaedf", "text": "Copy\nEdit this page\nHelpful?\nPrevious\nQuoter\nNext\nTickLens\nFunctions\nconstructor\nuniswapV3SwapCallback\nquoteExactInputSingle\nquoteExactInput\nquoteExactOutputSingle\nquoteExactOutput\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 691, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "87dbf7a27962", "text": "App\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 692, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e7ac7e610037", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nGuides\nGetting a QuoteHelpful?\nOn this page\nGetting a Quote\nIntroduction  \nThis guide will cover how to get the current quotes for any token pair on the Uniswap protocol. It is based on the Quoting", "metadata": {"page_number": 693, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "71bc90d46e73", "text": "Getting a QuoteHelpful?\nOn this page\nGetting a Quote\nIntroduction  \nThis guide will cover how to get the current quotes for any token pair on the Uniswap protocol. It is based on the Quoting\ncode example , found in the Uniswap code examples repository . To run this example, check out the examples's README\nand follow the setup instructions.\ninfo\nIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository , please visit\nour background  page!\nIn this example we will use quoteExactInputSingle  to get a quote for the pair USDC - WETH . The inputs are the token\nin, the token out , the amount in  and the fee.\nThe fee input parameters represents the swap fee that distributed to all in range liquidity at the time of the swap. It is one of\nthe identifiers of a Pool, the others being tokenIn  and tokenOut .", "metadata": {"page_number": 693, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1a80fd0b2bc8", "text": "The fee input parameters represents the swap fee that distributed to all in range liquidity at the time of the swap. It is one of\nthe identifiers of a Pool, the others being tokenIn  and tokenOut .\nThe guide will cover :", "metadata": {"page_number": 693, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c1e6424fc26a", "text": "1. Computing the Pool's deployment address\n2. Referencing the Pool contract and fetching metadata\n3. Referencing the Quoter contract and getting a quote\nAt the end of the guide, we should be able to fetch a quote for the given input token pair and the input token amount with the\npress of a button on the web application.\nFor this guide, the following Uniswap packages are used:\n@uniswap/v3-sdk\n@uniswap/sdk-core\nThe core code of this guide can be found in quote.ts\nComputing the Pool's deployment addr ess \nTo interact with the USDC - WETH  Pool contract, we first need to compute its deployment address. The SDK provides a\nutility method for that:\nComputing the Pool's address\nloading...\nCopy\nView on Github", "metadata": {"page_number": 694, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12774457b5f4", "text": "utility method for that:\nComputing the Pool's address\nloading...\nCopy\nView on Github\nSince each Uniswap V3 Pool  is uniquely identified by 3 characteristics (token in, token out, fee), we use those in\ncombination with the address of the PoolFactory  contract to compute the address of the USDC - ETH  Pool. These\nparameters have already been defined in our configuration file:\nConfiguration Parameters\nloading...\nCopy\nView on Github\nRefer encing the Pool contract and fetching metadata  \nNow that we have the deployment address of the USDC - ETH  Pool, we can construct an instance of an ethers  Contract  to\ninteract with it:\nSetting up a reference to the Pool contract\nloading...\nCopy\nView on Github", "metadata": {"page_number": 694, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e6fdfce47472", "text": "interact with it:\nSetting up a reference to the Pool contract\nloading...\nCopy\nView on Github\nTo construct the Contract  we need to provide the address of the contract, its ABI and the provider that will carry out the\nRPC call for us. We get access to the contract's ABI through the @uniswap/v3-core  package, which holds the core smart\ncontracts of the Uniswap V3 protocol:\nUniswap V3 Pool smart contract ABI\nloading...\nCopy\nView on Github", "metadata": {"page_number": 694, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0d4f4ca0b042", "text": "Having constructed our reference to the contract, we can now access its methods through our provider . We use a batch\nPromise  call. This approach queries state data concurrently , rather than sequentially , to avoid out of sync data that may be\nreturned if sequential queries are executed over the span of two blocks:\nGetting Pool metadata from the Pool smart contract\nloading...\nCopy\nView on Github\nThe return values of these methods will become inputs to the quote fetching function.\nnote\nIn this example, the metadata we fetch is already present in our inputs. This guide fetches this information first in order to\nshow how to fetch any metadata, which will be expanded on in future guides.\nRefer encing the Quoter  contract and getting a quote  \nLike we did for the Pool contract, we need to construct an instance of an ethers  Contract  for our Quoter contract in order to\ninteract with it:\nSetting up a reference to the Quoter contract\nloading...", "metadata": {"page_number": 695, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2faf46ca59c0", "text": "Like we did for the Pool contract, we need to construct an instance of an ethers  Contract  for our Quoter contract in order to\ninteract with it:\nSetting up a reference to the Quoter contract\nloading...\nCopy\nView on Github\nWe get access to the contract's ABI through the @uniswap/v3-periphery  package, which holds the periphery smart contracts\nof the Uniswap V3 protocol:\nUniswap V3 Quoter smart contract ABI\nloading...\nCopy\nView on Github\nWe can now use our Quoter contract to obtain the quote.\nIn an ideal world, the quoter functions would be view  functions, which would make them very easy to query on-chain with\nminimal gas costs. However , the Uniswap V3 Quoter contracts rely on state-changing calls designed to be reverted to return", "metadata": {"page_number": 695, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12e47034ec3c", "text": "In an ideal world, the quoter functions would be view  functions, which would make them very easy to query on-chain with\nminimal gas costs. However , the Uniswap V3 Quoter contracts rely on state-changing calls designed to be reverted to return\nthe desired data. This means calling the quoter will be very expensive and should not be called on-chain.\nTo get around this dif ficulty , we can use the callStatic  method provided by the ethers.js  Contract  instances. This is a\nuseful method that submits a state-changing transaction to an Ethereum node, but asks the node to simulate the state change,\nrather than to execute it. Our script can then return the result of the simulated state change:\nGetting Quotes from the Quoter contract\nloading...\nCopy\nView on Github\nThe result of the call is the number of output tokens you'd receive for the quoted swap.", "metadata": {"page_number": 695, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7bcbbd8e2619", "text": "Getting Quotes from the Quoter contract\nloading...\nCopy\nView on Github\nThe result of the call is the number of output tokens you'd receive for the quoted swap.\nIt should be noted that quoteExactInputSingle  is only 1 of 4 dif ferent methods that the quoter of fers:", "metadata": {"page_number": 695, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b78fe13aea0e", "text": "1. quoteExactInputSingle  - given the amount you want to swap, produces a quote for the amount out for a swap of a\nsingle pool\n2. quoteExactInput  - given the amount you want to swap, produces a quote for the amount out for a swap over multiple\npools\n3. quoteExactOutputSingle  - given the amount you want to get out, produces a quote for the amount in for a swap over\na single pool\n4. quoteExactOutput  - given the amount you want to get out, produces a quote for the amount in for a swap over\nmultiple pools\nNext Steps  \nNow that you're able to make a quote, check out our next guide on trading  using this quote!\nEdit this page\nHelpful?\nPrevious\nBackground\nNext\nExecuting a Trade\nIntroduction\nComputing the Pool's deployment address\nReferencing the Pool contract and fetching metadata", "metadata": {"page_number": 696, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3e9073e42c3b", "text": "Edit this page\nHelpful?\nPrevious\nBackground\nNext\nExecuting a Trade\nIntroduction\nComputing the Pool's deployment address\nReferencing the Pool contract and fetching metadata\nReferencing the Quoter contract and getting a quote\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 696, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c693bfd56ae8", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nConcentrated Liquidity\nFees\nOracle\nRange Orders\nSwaps\nToken Integration Issues\nGovernance\nResearch\nResources\nGlossary\n\u0000\nProtocol Concepts\nRange OrdersHelpful?\nOn this page\nRange Orders\nCustomizable liquidity positions, along with single-sided asset provisioning, allow for a new style of swapping with\nautomated market makers: the range order .\nIn typical order book markets, anyone can easily set a limit order: to buy or sell an asset at a specific predetermined price,", "metadata": {"page_number": 697, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9eafbad94e34", "text": "automated market makers: the range order .\nIn typical order book markets, anyone can easily set a limit order: to buy or sell an asset at a specific predetermined price,\nallowing the order to be filled at an indeterminate time in the future.\nWith Uniswap V3, one can approximate a limit order by providing a single asset as liquidity within a specific range. Like\ntraditional limit orders, range orders may be set with the expectation they will execute at some point in the future, with the\ntarget asset available for withdrawal after the spot price has crossed the full range of the order .\nUnlike some markets where limit orders may incur fees, the range order maker generates fees while the order is filled. This\nis due to the range order technically being a form of liquidity provisioning rather than a typical swap.\nPossibilities of Range orders  \nThe nature of AMM design makes some styles of limit orders possible, while others cannot be replicated. The following are", "metadata": {"page_number": 697, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "607843c49414", "text": "is due to the range order technically being a form of liquidity provisioning rather than a typical swap.\nPossibilities of Range orders  \nThe nature of AMM design makes some styles of limit orders possible, while others cannot be replicated. The following are\nfour examples of range orders and their traditional counterparts; the first two are possible, the second two are not.\nOne important distinction: range orders, unlike traditional limit orders, will be unfilled  if the spot price crosses\nthe given range and then reverses to recross in the opposite direction before the tar get asset is withdrawn. While\nyou will be earning LP  fees during this time, if the goal is to exit fully in the desired destination asset, you will", "metadata": {"page_number": 697, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0a05cae61ee", "text": "need to keep an eye on the order and either manually remove your liquidity when the order has been filled or\nuse a third party position manager service to withdraw on your behalf.\nTake-Profit Orders \nThe current price of a DAI / ETH pool is 1,500 DAI / ETH. You would like to sell your ETH for DAI when the\nprice of ETH reaches 1,600 DAI / ETH. This is possible, as the price space above the spot price is denominated\nin the higher valued asset, ETH. You can provide ETH at a price of 1,600 DAI / ETH and have the order filled\nwhen the spot price crosses your position.\nRangeOrder1        \n RangeOrder1\nBuy Limit Orders \nThe Current price of a DAI / ETH pool is 1,500 DAI / ETH. You expect that ETH will rebound after it drops to\n1,000 at the next market downturn, so you would like to place a range order swapping DAI to ETH at the price", "metadata": {"page_number": 698, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "82a582c9074a", "text": "The Current price of a DAI / ETH pool is 1,500 DAI / ETH. You expect that ETH will rebound after it drops to\n1,000 at the next market downturn, so you would like to place a range order swapping DAI to ETH at the price\nof 1,000 DAI / ETH. This is possible, as the price space below the spot price is denominated in the lower -priced\nasset, DAI. You can provide DAI at the price of 1,000 DAI / ETH, which will be swapped for ETH when the\nspot price of ETH drops past 1,000 DAI / ETH.\nAs the above examples show , in Uniswap V3, the two paired assets in a given pool are separated above and below the spot\nprice, with the higher price asset available above the spot price and the lower -priced asset below .\nThe following examples show limit order styles that are unable to be replicated due to the separation of assets in price space.\nBuy Stop Orders", "metadata": {"page_number": 698, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a2a5719cceb0", "text": "price, with the higher price asset available above the spot price and the lower -priced asset below .\nThe following examples show limit order styles that are unable to be replicated due to the separation of assets in price space.\nBuy Stop Orders \nThe current price of a DAI / ETH pool is 1,500 DAI / ETH. You expect the price of ETH to rocket up to 3,000\nonce it hits 2,000 DAI/ ETH, So you would like to place a range order from DAI to ETH at a price of 2,000\nDAI/ETH. This is not possible as the price space above 1,500 DAI / ETH is denominated in ETH - and thus,\nyou cannot provide the DAI necessary at your desired price to be swapped into ETH.\nStop-Loss Orders \nThe current price of a DAI / ETH pool is 1,500 DAI / ETH. You expect once the price of ETH drops to below", "metadata": {"page_number": 698, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "87ae8a184c49", "text": "you cannot provide the DAI necessary at your desired price to be swapped into ETH.\nStop-Loss Orders \nThe current price of a DAI / ETH pool is 1,500 DAI / ETH. You expect once the price of ETH drops to below\n1,000, it will tank to 200. So you would like to place a range order from ETH to DAI at a price of 1,000. This is\nnot possible as the price space below the spot price is denominated in DAI, and so you cannot allocate the ETH\nnecessary at 1,000 to be swapped into DAI.\nFees  \nThe fees due to your liquidity position will be denominated in both tokens of the given pair . In any of the above examples,\nafter swapping ETH for DAI, or DAI for ETH, a small amount of both ETH and DAI will be due to your account as\nliquidity provisioning rewards.\nApproaches to concentration when setting range orders are up to the user . Selecting a wider range may generate more fees if", "metadata": {"page_number": 698, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c93a53b2df92", "text": "liquidity provisioning rewards.\nApproaches to concentration when setting range orders are up to the user . Selecting a wider range may generate more fees if\nthere is price churn within your range, at the cost of increasing the risk of having your order unfilled if the spot price\nreverses before completing your full range.\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 698, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5a18bc26e7a4", "text": "Oracle\nNext\nSwaps\nPossibilities of Range orders\nTake-Profit Orders\nBuy Limit Orders\nBuy Stop Orders\nStop-Loss Orders\nFees\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 699, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "136a0b6dc9cd", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 702, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0c24c19d4e26", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nRemoveLiquidityOptionsHelpful?", "metadata": {"page_number": 702, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f740cca31d9b", "text": "On this page\nRemoveLiquidityOptions\n@uniswap/v3-sdk  / Exports  / RemoveLiquidityOptions\nInterface: RemoveLiquidityOptions\nOptions for producing the calldata to exit a position.\nTable of contents  \nProperties \nburnT oken\ncollectOptions\ndeadline\nliquidityPercentage\npermit\nslippageT olerance\ntokenId\nProperties  \nburnToken \n\u2022 Optional  burnT oken : boolean\nWhether the NFT  should be burned if the entire position is being exited, by default false.\nDefined in  \nnonfungiblePositionManager .ts:162\ncollectOptions \n\u2022 collectOptions : Omit <CollectOptions , \"tokenId\" >\nParameters to be passed on to collect\nDefined in  \nnonfungiblePositionManager .ts:172", "metadata": {"page_number": 703, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f01571f3b55f", "text": "collectOptions \n\u2022 collectOptions : Omit <CollectOptions , \"tokenId\" >\nParameters to be passed on to collect\nDefined in  \nnonfungiblePositionManager .ts:172\ndeadline \n\u2022 deadline : BigintIsh\nWhen the transaction expires, in epoch seconds.\nDefined in", "metadata": {"page_number": 703, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46735d92fe5a", "text": "nonfungiblePositionManager .ts:157\nliquidityPercentage \n\u2022 liquidityPer centage : Percent\nThe percentage of position liquidity to exit.\nDefined in  \nnonfungiblePositionManager .ts:147\npermit \n\u2022 Optional  permit : NFTPermitOptions\nThe optional permit of the token ID being exited, in case the exit transaction is being sent by an account that does not own\nthe NFT\nDefined in  \nnonfungiblePositionManager .ts:167\nslippageTolerance \n\u2022 slippageT olerance : Percent\nHow much the pool price is allowed to move.\nDefined in  \nnonfungiblePositionManager .ts:152\ntokenId \n\u2022 tokenId : BigintIsh\nThe ID of the token to exit\nDefined in  \nnonfungiblePositionManager .ts:142\nEdit this page", "metadata": {"page_number": 704, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6cc3e8d553da", "text": "tokenId \n\u2022 tokenId : BigintIsh\nThe ID of the token to exit\nDefined in  \nnonfungiblePositionManager .ts:142\nEdit this page\nHelpful?\nPrevious\nQuoteOptions\nNext\nSafeT ransferOptions\nTable of contents", "metadata": {"page_number": 704, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "176a0a49bf3a", "text": "Properties\nProperties\nburnT oken\ncollectOptions\ndeadline\nliquidityPercentage\npermit\nslippageT olerance\ntokenId\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 705, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "30939f7682a6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nGovernance\nResearch\nResources\nGlossary\n\u0000\nResearchHelpful?\nResear ch\nThe automated market maker is a new concept, and as such, new research comes out frequently . We've selected some of the\nmost thoughtful here.\nUniswap's Financial Alchemy\nAuthors: Dave White, Martin Tassy, Charlie Noyes, and Dan Robinson\nAn automated market maker is a type of decentralized exchange that lets customers trade between on-chain", "metadata": {"page_number": 706, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7fdf40cc738e", "text": "Uniswap's Financial Alchemy\nAuthors: Dave White, Martin Tassy, Charlie Noyes, and Dan Robinson\nAn automated market maker is a type of decentralized exchange that lets customers trade between on-chain\nassets like USDC and ETH. Uniswap is the most popular AMM on Ethereum. Like most AMMs, Uniswap\nfacilitates trading between a particular pair of assets by holding reserves of both assets. It sets the trading price\nbetween them based on the size of its reserves in such a way that prices will stay in line with the broader\nmarket. Anybody who would like to can join the \u201cpool\u201d for a particular pair and become a liquidity provider , or\nLP, so-called because they provide liquid assets for others to trade against. LPs contribute assets to both\nreserves simultaneously , taking on some of the risk of trading in exchange for a share of the returns.\nUniswap's Financial Alchemy\nAn analysis of Uniswap markets", "metadata": {"page_number": 706, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "858d05082c66", "text": "reserves simultaneously , taking on some of the risk of trading in exchange for a share of the returns.\nUniswap's Financial Alchemy\nAn analysis of Uniswap markets\nAuthors: Guillermo Angeris, Hsien-T ang Kao, Rei Chiang, Charlie Noyes, Tarun Chitra\nUniswap---and other constant product markets---appear to work well in practice despite their simplicity . In this\npaper , we give a simple formal analysis of constant product markets and their generalizations, showing that,\nunder some common conditions, these markets must closely track the reference market price. We also show that\nUniswap satisfies many other desirable properties and numerically demonstrate, via a lar ge-scale agent-based\nsimulation, that Uniswap is stable under a wide range of market conditions.\nAn analysis of Uniswap markets", "metadata": {"page_number": 706, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a2f1e49b3df0", "text": "Impr oved Price Oracles: Constant Function Market Makers\nAuthors: Guillermo Angeris, Tarun Chitra\nAutomated market makers, first popularized by Hanson's logarithmic market scoring rule (or LMSR) for\nprediction markets, have become important building blocks, called 'primitives,' for decentralized finance. A\nparticularly useful primitive is the ability to measure the price of an asset, a problem often known as the pricing\noracle problem. In this paper , we focus on the analysis of a very lar ge class of automated market makers, called\nconstant function market makers (or CFMMs) which includes existing popular market makers such as Uniswap,\nBalancer , and Curve, whose yearly transaction volume totals to billions of dollars. We give suf ficient conditions\nsuch that, under fairly general assumptions, agents who interact with these constant function market makers are\nincentivized to correctly report the price of an asset and that they can do so in a computationally ef ficient way .", "metadata": {"page_number": 707, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f82e667be3b8", "text": "such that, under fairly general assumptions, agents who interact with these constant function market makers are\nincentivized to correctly report the price of an asset and that they can do so in a computationally ef ficient way .\nWe also derive several other useful properties that were previously not known. These include lower bounds on\nthe total value of assets held by CFMMs and lower bounds guaranteeing that no agent can, by any set of trades,\ndrain the reserves of assets held by a given CFMM.\nImproved Price Oracles: Constant Function Market Makers\nPintail r esear ch\nPublished medium  articles by Pintail.\nUnderstanding Uniswap Returns\nUniswap: A Good Deal for Liquidity Providers?\nLiquidity Pr ovider  Returns in Geometric Mean Markets\nAuthors: Alex Evans\nGeometric mean market makers (G3Ms), such as Uniswap and Balancer , comprise a popular class of automated", "metadata": {"page_number": 707, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9b536da95fb2", "text": "Liquidity Pr ovider  Returns in Geometric Mean Markets\nAuthors: Alex Evans\nGeometric mean market makers (G3Ms), such as Uniswap and Balancer , comprise a popular class of automated\nmarket makers (AMMs) defined by the following rule: the reserves of the AMM before and after each trade\nmust have the same (weighted) geometric mean. This paper extends several results known for constant-weight\nG3Ms to the general case of G3Ms with time-varying and potentially stochastic weights. These results include\nthe returns and no-arbitrage prices of liquidity pool (LP) shares that investors receive for supplying liquidity to\nG3Ms. Using these expressions, we show how to create G3Ms whose LP  shares replicate the payof fs of\nfinancial derivatives. The resulting hedges are model-independent and exact for derivative contracts whose\npayof f functions satisfy an elasticity constraint. These strategies allow LP  shares to replicate various trading", "metadata": {"page_number": 707, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "14d3ee288815", "text": "financial derivatives. The resulting hedges are model-independent and exact for derivative contracts whose\npayof f functions satisfy an elasticity constraint. These strategies allow LP  shares to replicate various trading\nstrategies and financial contracts, including standard options. G3Ms are thus shown to be capable of recreating a\nvariety of active trading strategies through passive positions in LP  shares.\nLiquidity Provider Returns in Geometric Mean Markets\nThe Replicating Portfolio of a Constant Pr oduct Market\nAuthors: Joseph Clark\nWe derive the replicating portfolio of a constant product market. This is structurally short volatility (selling\noptions) which explains why positive transaction costs are needed to induce liquidity providers to participate.\nWhere futures and options markets do not exist, this payof f can be used to create them.\nhttps://papers.ssrn.com/sol3/papers.cfm?abstract_id=3550601\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 707, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c7f468ac5bc0", "text": "Changelog\nNext\nResources\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 708, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9c88c68eb10c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nGovernance\nResearch\nResources\nGlossary\n\u0000\nResourcesHelpful?\nResour ces\nThis page will be periodically updated with helpful resources for calculations and software design as they are made\navailable.\nUniswap V2 Visualization\nUniswap V3 Visualization\nUniswap V3 (Multiple Positions) Visualization\nV2 / V3 Calculations\nEdit this page\nHelpful?\nPrevious\nResearch\nNext\nGlossary\nDevelopers\nFeedback", "metadata": {"page_number": 709, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ba32ecb9dea3", "text": "V2 / V3 Calculations\nEdit this page\nHelpful?\nPrevious\nResearch\nNext\nGlossary\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 709, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "225492b16354", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 710, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "df6052e24b9b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nUniswap V3 Staker Design\nUniswap V3 Staker Contract\nInterfaces\nLibraries\nIncentiveId\nNFTPositionInfo\nRewardMath\nTest\nNonfungiblePositionManager", "metadata": {"page_number": 711, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "91ca9f205e84", "text": "Uniswap V3 Staker Contract\nInterfaces\nLibraries\nIncentiveId\nNFTPositionInfo\nRewardMath\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nStaker\nLibrariesHelpful?", "metadata": {"page_number": 711, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "368ea69d4396", "text": "RewardMath\nOn this page\nRewardMath\nAllows computing rewards given some parameters of stakes and incentives\nFunctions  \ncomputeRewardAmount \n  function  computeRewardAmount (\n    uint256 totalRewardUnclaimed ,\n    uint160 totalSecondsClaimedX128 ,\n    uint256 startTime ,\n    uint256 endTime ,\n    uint128 liquidity ,\n    uint160 secondsPerLiquidityInsideInitialX128 ,\n    uint160 secondsPerLiquidityInsideX128 ,\n    uint256 currentTime\n  ) internal  pure returns (uint256 reward, uint160 secondsInsideX128 )\nCopy\nCompute the amount of rewards owed given parameters of the incentive and stake\nParameters:  \nName Type Description", "metadata": {"page_number": 712, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "26049fca4fc0", "text": ") internal  pure returns (uint256 reward, uint160 secondsInsideX128 )\nCopy\nCompute the amount of rewards owed given parameters of the incentive and stake\nParameters:  \nName Type Description\ntotalRewardUnclaimed uint256 The total amount of unclaimed rewards left for an incentive\ntotalSecondsClaimedX128 uint160How many full liquidity-seconds have been already claimed for the\nincentive\nstartTime uint256 When the incentive rewards began in epoch seconds\nendTime uint256 When rewards are no longer being dripped out in epoch seconds\nliquidity uint128The amount of liquidity , assumed to be constant over the period over\nwhich the snapshots are measured\nsecondsPerLiquidityInsideInitialX128 uint160The seconds per liquidity of the liquidity tick range as of the beginning\nof the period", "metadata": {"page_number": 712, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4bb682bcede0", "text": "which the snapshots are measured\nsecondsPerLiquidityInsideInitialX128 uint160The seconds per liquidity of the liquidity tick range as of the beginning\nof the period\nsecondsPerLiquidityInsideX128 uint160The seconds per liquidity of the liquidity tick range as of the current\nblock timestamp\ncurrentTime uint256The current block timestamp, which must be greater than or equal to\nthe start time\nReturn Values:  \nName Type Description\nreward uint256 The amount of rewards owed\nsecondsInsideX128 uint160 The total liquidity seconds inside the position's range for the duration of the stake\nEdit this page\nHelpful?\nPrevious\nNFTPositionInfo", "metadata": {"page_number": 712, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f125cf24626f", "text": "Next\nBase64T est\nFunctions\ncomputeRewardAmount\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 713, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1e5387285f2b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nenums\nRounding\nSupportedChainId\nTradeT ype\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nenums\nRoundingHelpful?\nOn this page\nRounding", "metadata": {"page_number": 714, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f46b27af06a4", "text": "V2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nenums\nRoundingHelpful?\nOn this page\nRounding\n@uniswap/sdk-core  / Exports  / Rounding\nEnumeration: Rounding\nTable of contents  \nEnumeration Members \nROUND _DOWN", "metadata": {"page_number": 714, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e7b127ce4d5", "text": "ROUND _HALF _UP\nROUND _UP\nEnumeration Members  \nROUND_DOWN \n\u2022 ROUND _DOWN  = 0\nDefined in  \nconstants.ts:32\nROUND_HALF_UP \n\u2022 ROUND _HALF _UP = 1\nDefined in  \nconstants.ts:33\nROUND_UP \n\u2022 ROUND _UP = 2\nDefined in  \nconstants.ts:34\nEdit this page\nHelpful?\nPrevious\nToken\nNext\nSupportedChainId\nTable of contents\nEnumeration Members\nEnumeration Members\nROUND_DOWN\nROUND_HALF_UP\nROUND_UP\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 715, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f316570cd091", "text": "ROUND_DOWN\nROUND_HALF_UP\nROUND_UP\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 715, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bd2c74a9aa94", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 716, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a1a614141ca3", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 717, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f435cd64ec11", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 717, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4549930f2d91", "text": "classes\nRoute\nOn this page\nRoute\n@uniswap/v3-sdk  / Exports  / Route\nClass: Route<TInput, TOutput >\nRepresents a list of pools through which a swap can occur\nType parameters  \nName Type Description\nTInput extends Currency The input token\nTOutput extends Currency The output token\nTable of contents  \nConstructors \nconstructor\nProperties \n_midPrice\ninput\noutput\npools\ntokenPath\nAccessors \nchainId\nmidPrice\nConstructors  \nconstructor \n\u2022 new Route <TInput , TOutput >(pools , input , output )\nCreates an instance of route.\nType parameters  \nName Type\nTInput extends Currency\nTOutput extends Currency", "metadata": {"page_number": 718, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "19ca693c5ae6", "text": "Parameters  \nName Type Description\npoolsPool []An array of Pool  objects, ordered by the route the swap will take\ninputTInput The input token\noutputTOutput The output token\nDefined in  \nentities/route.ts:25\nProperties  \n_midPrice \n\u2022 Private  _midPrice : null  | Price <TInput , TOutput > = null\nDefined in  \nentities/route.ts:17\ninput \n\u2022 Readonly  input : TInput\nDefined in  \nentities/route.ts:14\noutput \n\u2022 Readonly  output : TOutput\nDefined in  \nentities/route.ts:15\npools \n\u2022 Readonly  pools : Pool []\nDefined in  \nentities/route.ts:12\ntokenPath \n\u2022 Readonly  tokenPath : Token []", "metadata": {"page_number": 719, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f98d42c34021", "text": "Defined in  \nentities/route.ts:13\nAccessors  \nchainId \n\u2022 get chainId (): number\nReturns  \nnumber\nDefined in  \nentities/route.ts:54\nmidPrice \n\u2022 get midPrice (): Price <TInput , TOutput >\nReturns the mid price of the route\nReturns  \nPrice <TInput , TOutput >\nDefined in  \nentities/route.ts:61\nEdit this page\nHelpful?\nPrevious\nPositionLibrary\nNext\nSelfPermit\nType parameters\nTable of contents\nConstructors\nProperties\nAccessors\nConstructors\nconstructor\nProperties\n_midPrice\ninput\noutput\npools\ntokenPath", "metadata": {"page_number": 720, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "de62b530c2b1", "text": "Constructors\nProperties\nAccessors\nConstructors\nconstructor\nProperties\n_midPrice\ninput\noutput\npools\ntokenPath\nAccessors", "metadata": {"page_number": 720, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d9d2f90d97c6", "text": "chainId\nmidPrice\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 721, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6990c6f061c4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02", "metadata": {"page_number": 722, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c458f78bf6b1", "text": "Technical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02\nCommon Errors\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nSmart Contracts\nRouter01Helpful?\nOn this page\nRouter01\nUniswapV2Router01 should not be used any longer , because of the discovery of a low severity bug  and the fact that some\nmethods do not work with tokens that take fees on transfer . The current recommendation is to use UniswapV2Router02 .\nCode\nUniswapV2Router01.sol", "metadata": {"page_number": 722, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "acc8274acd3d", "text": "Addr ess\nUniswapV2Router01  is deployed at 0xf164fC0Ec4E93095b804a4795bBe1e041497b92a  on the Ethereum mainnet , and the Ropsten , Rinkeby ,\nG\u00f6rli , and Kovan  testnets. It was built from commit 2ad7da2 .\nRead-Only Functions\nfactory  \nfunction  factory() external  pure returns (address);\nCopy\nReturns factory address .\nWETH  \nfunction  WETH() external  pure returns (address);\nCopy\nReturns the canonical WETH address  on the Ethereum mainnet , or the Ropsten , Rinkeby , G\u00f6rli , or Kovan  testnets.\nState-Changing Functions\naddLiquidity  \nfunction  addLiquidity (\n  address tokenA,\n  address tokenB,\n  uint amountADesired ,", "metadata": {"page_number": 723, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e5d9bc53e426", "text": "State-Changing Functions\naddLiquidity  \nfunction  addLiquidity (\n  address tokenA,\n  address tokenB,\n  uint amountADesired ,\n  uint amountBDesired ,\n  uint amountAMin ,\n  uint amountBMin ,\n  address to,\n  uint deadline\n) external  returns (uint amountA , uint amountB , uint liquidity );\nCopy\nAdds liquidity to an ERC-20 \u21c4ERC-20 pool.\nTo cover all possible scenarios, msg.sender  should have already given the router an allowance of at least\namountADesired/amountBDesired on tokenA/tokenB.\nAlways adds assets at the ideal ratio, according to the price when the transaction is executed.\nIf a pool for the passed tokens does not exists, one is created automatically , and exactly amountADesired/amountBDesired tokens are\nadded.", "metadata": {"page_number": 723, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a261c41136e2", "text": "Always adds assets at the ideal ratio, according to the price when the transaction is executed.\nIf a pool for the passed tokens does not exists, one is created automatically , and exactly amountADesired/amountBDesired tokens are\nadded.\nName Type\ntokenA address A pool token.\ntokenB address A pool token.\namountADesired uint The amount of tokenA  to add as liquidity if the B/A  price is <= amountBDesired/amountADesired (A  depreciates).\namountBDesired uint The amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).\namountAMin uint Bounds the extent to which the B/A  price can go up before the transaction reverts. Must be <= amountADesired.\namountBMin uint Bounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.", "metadata": {"page_number": 723, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7f3b0fd94941", "text": "amountBMin uint Bounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.\nto address Recipient of the liquidity tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namountA uint The amount of tokenA  sent to the pool.\namountB uint The amount of tokenB sent to the pool.\nliquidity uint The amount of liquidity tokens minted.", "metadata": {"page_number": 723, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b38e8fd9c3d", "text": "addLiquidityETH  \nfunction  addLiquidityETH (\n  address token,\n  uint amountTokenDesired ,\n  uint amountTokenMin ,\n  uint amountETHMin ,\n  address to,\n  uint deadline\n) external  payable returns (uint amountToken , uint amountETH , uint liquidity );\nCopy\nAdds liquidity to an ERC-20 \u21c4WETH pool with ETH.\nTo cover all possible scenarios, msg.sender  should have already given the router an allowance of at least amountT okenDesired on\ntoken.\nAlways adds assets at the ideal ratio, according to the price when the transaction is executed.\nmsg.value  is treated as a amountETHDesired.\nLeftover ETH, if any , is returned to msg.sender .", "metadata": {"page_number": 724, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "af2917038377", "text": "token.\nAlways adds assets at the ideal ratio, according to the price when the transaction is executed.\nmsg.value  is treated as a amountETHDesired.\nLeftover ETH, if any , is returned to msg.sender .\nIf a pool for the passed token and WETH does not exists, one is created automatically , and exactly amountT okenDesired/ msg.value\ntokens are added.\nName Type\ntoken address A pool token.\namountT okenDesired uintThe amount of token to add as liquidity if the WETH/token price is <=\nmsg.value /amountT okenDesired (token depreciates).\nmsg.value\n(amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <=\namountT okenDesired/ msg.value  (WETH depreciates).", "metadata": {"page_number": 724, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "148c0da001a4", "text": "msg.value\n(amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <=\namountT okenDesired/ msg.value  (WETH depreciates).\namountT okenMin uintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be\n<= amountT okenDesired.\namountETHMin uintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be\n<= msg.value .\nto address Recipient of the liquidity tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namountT oken uint The amount of token sent to the pool.\namountETH uint The amount of ETH converted to WETH and sent to the pool.\nliquidity uint The amount of liquidity tokens minted.\nremoveLiquidity", "metadata": {"page_number": 724, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dc8666a9d4f3", "text": "amountETH uint The amount of ETH converted to WETH and sent to the pool.\nliquidity uint The amount of liquidity tokens minted.\nremoveLiquidity  \nfunction  removeLiquidity (\n  address tokenA,\n  address tokenB,\n  uint liquidity ,\n  uint amountAMin ,\n  uint amountBMin ,\n  address to,\n  uint deadline\n) external  returns (uint amountA , uint amountB );\nCopy\nRemoves liquidity from an ERC-20 \u21c4ERC-20 pool.\nmsg.sender  should have already given the router an allowance of at least liquidity on the pool.\nName Type\ntokenA address A pool token.\ntokenB address A pool token.\nliquidity uint The amount of liquidity tokens to remove.", "metadata": {"page_number": 724, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9eea1fad2712", "text": "Name Type\ntokenA address A pool token.\ntokenB address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountAMin uint The minimum amount of tokenA  that must be received for the transaction not to revert.\namountBMin uint The minimum amount of tokenB that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.", "metadata": {"page_number": 724, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7761dbcb3d0a", "text": "Name Type\ndeadline uint Unix timestamp after which the transaction will revert.\namountA uint The amount of tokenA  received.\namountB uint The amount of tokenB received.\nremoveLiquidityETH  \nfunction  removeLiquidityETH (\n  address token,\n  uint liquidity ,\n  uint amountTokenMin ,\n  uint amountETHMin ,\n  address to,\n  uint deadline\n) external  returns (uint amountToken , uint amountETH );\nCopy\nRemoves liquidity from an ERC-20 \u21c4WETH pool and receive ETH.\nmsg.sender  should have already given the router an allowance of at least liquidity on the pool.\nName Type\ntoken address A pool token.\nliquidity uint The amount of liquidity tokens to remove.", "metadata": {"page_number": 725, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4ac1cca48866", "text": "msg.sender  should have already given the router an allowance of at least liquidity on the pool.\nName Type\ntoken address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountT okenMin uint The minimum amount of token that must be received for the transaction not to revert.\namountETHMin uint The minimum amount of ETH that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\namountT oken uint The amount of token received.\namountETH uint The amount of ETH received.\nremoveLiquidityW ithPermit  \nfunction  removeLiquidityWithPermit (\n  address tokenA,\n  address tokenB,\n  uint liquidity ,\n  uint amountAMin ,\n  uint amountBMin ,\n  address to,", "metadata": {"page_number": 725, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e1f3e79d0c7b", "text": "function  removeLiquidityWithPermit (\n  address tokenA,\n  address tokenB,\n  uint liquidity ,\n  uint amountAMin ,\n  uint amountBMin ,\n  address to,\n  uint deadline ,\n  bool approveMax , uint8 v, bytes32 r, bytes32 s\n) external  returns (uint amountA , uint amountB );\nCopy\nRemoves liquidity from an ERC-20 \u21c4ERC-20 pool without pre-approval, thanks to permit .\nName Type\ntokenA address A pool token.\ntokenB address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountAMin uint The minimum amount of tokenA  that must be received for the transaction not to revert.\namountBMin uint The minimum amount of tokenB that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.", "metadata": {"page_number": 725, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "38d6f952a1f9", "text": "amountAMin uint The minimum amount of tokenA  that must be received for the transaction not to revert.\namountBMin uint The minimum amount of tokenB that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\napproveMax bool Whether or not the approval amount in the signature is for liquidity or uint(-1) .\nv uint8 The v component of the permit signature.\nr bytes32 The r component of the permit signature.\ns bytes32 The s component of the permit signature.\namountA uint The amount of tokenA  received.", "metadata": {"page_number": 725, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f521e7238b0e", "text": "Name Type\namountB uint The amount of tokenB received.\nremoveLiquidityETHW ithPermit  \nfunction  removeLiquidityETHWithPermit (\n  address token,\n  uint liquidity ,\n  uint amountTokenMin ,\n  uint amountETHMin ,\n  address to,\n  uint deadline ,\n  bool approveMax , uint8 v, bytes32 r, bytes32 s\n) external  returns (uint amountToken , uint amountETH );\nCopy\nRemoves liquidity from an ERC-20 \u21c4WETTH pool and receive ETH without pre-approval, thanks to permit .\nName Type\ntoken address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountT okenMin uint The minimum amount of token that must be received for the transaction not to revert.", "metadata": {"page_number": 726, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b432d488ec3a", "text": "Name Type\ntoken address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountT okenMin uint The minimum amount of token that must be received for the transaction not to revert.\namountETHMin uint The minimum amount of ETH that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\napproveMax bool Whether or not the approval amount in the signature is for liquidity or uint(-1) .\nv uint8 The v component of the permit signature.\nr bytes32 The r component of the permit signature.\ns bytes32 The s component of the permit signature.\namountT oken uint The amount of token received.\namountETH uint The amount of ETH received.\nswapExactT okensForT okens  \nfunction  swapExactTokensForTokens (", "metadata": {"page_number": 726, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2387cb5e1fff", "text": "amountT oken uint The amount of token received.\namountETH uint The amount of ETH received.\nswapExactT okensForT okens  \nfunction  swapExactTokensForTokens (\n  uint amountIn ,\n  uint amountOutMin ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external  returns (uint[] memory amounts );\nCopy\nSwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of\npath is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for\nexample, a direct pair does not exist).\nmsg.sender  should have already given the router an allowance of at least amountIn on the input token.\nName Type\namountIn uint The amount of input tokens to send.", "metadata": {"page_number": 726, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6592d0c747af", "text": "example, a direct pair does not exist).\nmsg.sender  should have already given the router an allowance of at least amountIn on the input token.\nName Type\namountIn uint The amount of input tokens to send.\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses\nmust exist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapT okensForExactT okens", "metadata": {"page_number": 726, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dab1a7665300", "text": "function  swapTokensForExactTokens (\n  uint amountOut ,\n  uint amountInMax ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external  returns (uint[] memory amounts );\nCopy\nReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of\npath is the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for\nexample, a direct pair does not exist).\nmsg.sender  should have already given the router an allowance of at least amountInMax on the input token.\nName Type\namountOut uint The amount of output tokens to receive.\namountInMax uint The maximum amount of input tokens that can be required before the transaction reverts.\npathaddress[]", "metadata": {"page_number": 727, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "411750b2d86a", "text": "Name Type\namountOut uint The amount of output tokens to receive.\namountInMax uint The maximum amount of input tokens that can be required before the transaction reverts.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses\nmust exist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapExactETHForT okens  \nfunction  swapExactETHForTokens (uint amountOutMin , address[] calldata  path, address to, uint deadline )\n  external\n  payable\n  returns (uint[] memory amounts );\nCopy", "metadata": {"page_number": 727, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "91ff077d5c9b", "text": "function  swapExactETHForTokens (uint amountOutMin , address[] calldata  path, address to, uint deadline )\n  external\n  payable\n  returns (uint[] memory amounts );\nCopy\nSwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must\nbe WETH , the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct\npair does not exist).\nName Type\nmsg.value\n(amountIn)uint The amount of ETH to send.\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of\naddresses must exist and have liquidity .", "metadata": {"page_number": 727, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1909609e1d23", "text": "pathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of\naddresses must exist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapT okensForExactETH  \nfunction  swapTokensForExactETH (uint amountOut , uint amountInMax , address[] calldata  path, address to, uint deadline )\n  external\n  returns (uint[] memory amounts );\nCopy\nReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the\ninput token, the last must be WETH , and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair\ndoes not exist).", "metadata": {"page_number": 727, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aff50c2fd7df", "text": "input token, the last must be WETH , and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair\ndoes not exist).\nmsg.sender  should have already given the router an allowance of at least amountInMax on the input token.\nIf the to address is a smart contract, it must have the ability to receive ETH.", "metadata": {"page_number": 727, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8850fd67a2f7", "text": "Name Type\namountOut uint The amount of ETH to receive.\namountInMax uint The maximum amount of input tokens that can be required before the transaction reverts.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses\nmust exist and have liquidity .\nto address Recipient of ETH.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapExactT okensForETH  \nfunction  swapExactTokensForETH (uint amountIn , uint amountOutMin , address[] calldata  path, address to, uint deadline )\n  external\n  returns (uint[] memory amounts );\nCopy", "metadata": {"page_number": 728, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b2fdb0cd9990", "text": "function  swapExactTokensForETH (uint amountIn , uint amountOutMin , address[] calldata  path, address to, uint deadline )\n  external\n  returns (uint[] memory amounts );\nCopy\nSwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input\ntoken, the last must be WETH , and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does\nnot exist).\nIf the to address is a smart contract, it must have the ability to receive ETH.\nName Type\namountIn uint The amount of input tokens to send.\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses", "metadata": {"page_number": 728, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e136e615bfe", "text": "pathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses\nmust exist and have liquidity .\nto address Recipient of the ETH.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapETHForExactT okens  \nfunction  swapETHForExactTokens (uint amountOut , address[] calldata  path, address to, uint deadline )\n  external\n  payable\n  returns (uint[] memory amounts );\nCopy\nReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be\nWETH , the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair\ndoes not exist).", "metadata": {"page_number": 728, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "36ff40201903", "text": "WETH , the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair\ndoes not exist).\nLeftover ETH, if any , is returned to msg.sender .\nName Type\namountOut uint The amount of tokens to receive.\nmsg.value\n(amountInMax)uint The maximum amount of ETH that can be required before the transaction reverts.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of\naddresses must exist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nquote  \nSee quote .", "metadata": {"page_number": 728, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5854682046aa", "text": "getAmountOut  \nSee getAmountOut .\ngetAmountIn  \nThis function contains a low severity bug, do not use.\ngetAmountsOut  \nfunction  getAmountsOut (uint amountIn , address[] memory path) public view returns (uint[] memory amounts );\nCopy\nSee getAmountsOut .\ngetAmountsIn  \nfunction  getAmountsIn (uint amountOut , address[] memory path) public view returns (uint[] memory amounts );\nCopy\nSeegetAmountsIn .\nInterface\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol' ;\nCopy\npragma solidity  >=0.6.2;\ninterface  IUniswapV2Router01  {\n  function  factory() external  pure returns (address);", "metadata": {"page_number": 729, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b73179ec128a", "text": "Copy\npragma solidity  >=0.6.2;\ninterface  IUniswapV2Router01  {\n  function  factory() external  pure returns (address);\n  function  WETH() external  pure returns (address);\n  function  addLiquidity (\n      address tokenA,\n      address tokenB,\n      uint amountADesired ,\n      uint amountBDesired ,\n      uint amountAMin ,\n      uint amountBMin ,\n      address to,\n      uint deadline\n  ) external  returns (uint amountA , uint amountB , uint liquidity );\n  function  addLiquidityETH (\n      address token,\n      uint amountTokenDesired ,\n      uint amountTokenMin ,\n      uint amountETHMin ,\n      address to,\n      uint deadline", "metadata": {"page_number": 729, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b003bf4b5e75", "text": "function  addLiquidityETH (\n      address token,\n      uint amountTokenDesired ,\n      uint amountTokenMin ,\n      uint amountETHMin ,\n      address to,\n      uint deadline\n  ) external  payable returns (uint amountToken , uint amountETH , uint liquidity );\n  function  removeLiquidity (\n      address tokenA,\n      address tokenB,\n      uint liquidity ,\n      uint amountAMin ,\n      uint amountBMin ,\n      address to,\n      uint deadline\n  ) external  returns (uint amountA , uint amountB );\n  function  removeLiquidityETH (\n      address token,\n      uint liquidity ,\n      uint amountTokenMin ,\n      uint amountETHMin ,\n      address to,\n      uint deadline", "metadata": {"page_number": 729, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e9060224275e", "text": "function  removeLiquidityETH (\n      address token,\n      uint liquidity ,\n      uint amountTokenMin ,\n      uint amountETHMin ,\n      address to,\n      uint deadline\n  ) external  returns (uint amountToken , uint amountETH );", "metadata": {"page_number": 729, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cc9c72a105d5", "text": "function  removeLiquidityWithPermit (\n      address tokenA,\n      address tokenB,\n      uint liquidity ,\n      uint amountAMin ,\n      uint amountBMin ,\n      address to,\n      uint deadline ,\n      bool approveMax , uint8 v, bytes32 r, bytes32 s\n  ) external  returns (uint amountA , uint amountB );\n  function  removeLiquidityETHWithPermit (\n      address token,\n      uint liquidity ,\n      uint amountTokenMin ,\n      uint amountETHMin ,\n      address to,\n      uint deadline ,\n      bool approveMax , uint8 v, bytes32 r, bytes32 s\n  ) external  returns (uint amountToken , uint amountETH );\n  function  swapExactTokensForTokens (\n      uint amountIn ,\n      uint amountOutMin ,", "metadata": {"page_number": 730, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d8881d198a26", "text": ") external  returns (uint amountToken , uint amountETH );\n  function  swapExactTokensForTokens (\n      uint amountIn ,\n      uint amountOutMin ,\n      address[] calldata  path,\n      address to,\n      uint deadline\n  ) external  returns (uint[] memory amounts );\n  function  swapTokensForExactTokens (\n      uint amountOut ,\n      uint amountInMax ,\n      address[] calldata  path,\n      address to,\n      uint deadline\n  ) external  returns (uint[] memory amounts );\n  function  swapExactETHForTokens (uint amountOutMin , address[] calldata  path, address to, uint deadline )\n      external\n      payable\n      returns (uint[] memory amounts );", "metadata": {"page_number": 730, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e023b729d984", "text": "function  swapExactETHForTokens (uint amountOutMin , address[] calldata  path, address to, uint deadline )\n      external\n      payable\n      returns (uint[] memory amounts );\n  function  swapTokensForExactETH (uint amountOut , uint amountInMax , address[] calldata  path, address to, uint deadline )\n      external\n      returns (uint[] memory amounts );\n  function  swapExactTokensForETH (uint amountIn , uint amountOutMin , address[] calldata  path, address to, uint deadline )\n      external\n      returns (uint[] memory amounts );\n  function  swapETHForExactTokens (uint amountOut , address[] calldata  path, address to, uint deadline )\n      external\n      payable\n      returns (uint[] memory amounts );", "metadata": {"page_number": 730, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "75b102492b4b", "text": "function  swapETHForExactTokens (uint amountOut , address[] calldata  path, address to, uint deadline )\n      external\n      payable\n      returns (uint[] memory amounts );\n  function  quote(uint amountA , uint reserveA , uint reserveB ) external  pure returns (uint amountB );\n  function  getAmountOut (uint amountIn , uint reserveIn , uint reserveOut ) external  pure returns (uint amountOut );\n  function  getAmountIn (uint amountOut , uint reserveIn , uint reserveOut ) external  pure returns (uint amountIn );\n  function  getAmountsOut (uint amountIn , address[] calldata  path) external  view returns (uint[] memory amounts );\n  function  getAmountsIn (uint amountOut , address[] calldata  path) external  view returns (uint[] memory amounts );\n}\nCopy\nABI", "metadata": {"page_number": 730, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "99f93c834459", "text": "function  getAmountsIn (uint amountOut , address[] calldata  path) external  view returns (uint[] memory amounts );\n}\nCopy\nABI\nimport IUniswapV2Router01  from '@uniswap/v2-periphery/build/IUniswapV2Router01.json'\nCopy\nhttps://unpkg.com/@uniswap/v2-periphery@1.0.0-beta.0/build/IUniswapV2Router01.json\nEdit this page\nHelpful?\nPrevious\nLibrary\nNext\nRouter02\nfactory\nWETH", "metadata": {"page_number": 730, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "91aff5a845eb", "text": "addLiquidity\naddLiquidityETH\nremoveLiquidity\nremoveLiquidityETH\nremoveLiquidityW ithPermit\nremoveLiquidityETHW ithPermit\nswapExactT okensForT okens\nswapT okensForExactT okens\nswapExactETHForT okens\nswapT okensForExactETH\nswapExactT okensForETH\nswapETHForExactT okens\nquote\ngetAmountOut\ngetAmountIn\ngetAmountsOut\ngetAmountsIn\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 731, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e77502771f3c", "text": "Whitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 731, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5dc72c5a3147", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02", "metadata": {"page_number": 732, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "63ef7adcef42", "text": "Technical Reference\nAPI\nGovernance\nSmart Contracts\nFactory\nPair\nPair (ERC-20)\nLibrary\nRouter01\nRouter02\nCommon Errors\nV1 Protocol\n\u0000\nV2 Protocol\nTechnical Reference\nSmart Contracts\nRouter02Helpful?\nOn this page\nRouter02\nBecause routers are stateless and do not hold token balances, they can be replaced safely and trustlessly , if necessary . This may happen if more\nefficient smart contract patterns are discovered, or if additional functionality is desired. For this reason, routers have release numbers , starting at\n01. This is currently recommended release, 02.\nCode\nUniswapV2Router02.sol", "metadata": {"page_number": 732, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1c0a90f2f9c4", "text": "Addr ess\nUniswapV2Router02  is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D  on the Ethereum mainnet , and the Ropsten , Rinkeby ,\nG\u00f6rli , and Kovan  testnets. It was built from commit 696171 1.\nRead-Only Functions\nfactory  \nfunction  factory() external  pure returns (address);\nCopy\nReturns factory address .\nWETH  \nfunction  WETH() external  pure returns (address);\nCopy\nReturns the canonical WETH address  on the Ethereum mainnet , or the Ropsten , Rinkeby , G\u00f6rli , or Kovan  testnets.\nquote  \nSee quote .\ngetAmountOut  \nSee getAmountOut .\ngetAmountIn  \nSee getAmountIn .", "metadata": {"page_number": 733, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46e50404c019", "text": "quote  \nSee quote .\ngetAmountOut  \nSee getAmountOut .\ngetAmountIn  \nSee getAmountIn .\ngetAmountsOut  \nfunction  getAmountsOut (uint amountIn , address[] memory path) public view returns (uint[] memory amounts );\nCopy\nSee getAmountsOut .\ngetAmountsIn  \nfunction  getAmountsIn (uint amountOut , address[] memory path) public view returns (uint[] memory amounts );\nCopy\nSee getAmountsIn .\nState-Changing Functions\naddLiquidity  \nfunction  addLiquidity (\n  address tokenA,\n  address tokenB,\n  uint amountADesired ,\n  uint amountBDesired ,\n  uint amountAMin ,\n  uint amountBMin ,\n  address to,", "metadata": {"page_number": 733, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "12ee0e2c0894", "text": "uint deadline\n) external  returns (uint amountA , uint amountB , uint liquidity );\nCopy\nAdds liquidity to an ERC-20 \u21c4ERC-20 pool.\nTo cover all possible scenarios, msg.sender  should have already given the router an allowance of at least\namountADesired/amountBDesired on tokenA/tokenB.\nAlways adds assets at the ideal ratio, according to the price when the transaction is executed.\nIf a pool for the passed tokens does not exists, one is created automatically , and exactly amountADesired/amountBDesired tokens are\nadded.\nName Type\ntokenA address A pool token.\ntokenB address A pool token.\namountADesired uint The amount of tokenA  to add as liquidity if the B/A  price is <= amountBDesired/amountADesired (A  depreciates).", "metadata": {"page_number": 734, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9006f34c1126", "text": "tokenA address A pool token.\ntokenB address A pool token.\namountADesired uint The amount of tokenA  to add as liquidity if the B/A  price is <= amountBDesired/amountADesired (A  depreciates).\namountBDesired uint The amount of tokenB to add as liquidity if the A/B price is <= amountADesired/amountBDesired (B depreciates).\namountAMin uint Bounds the extent to which the B/A  price can go up before the transaction reverts. Must be <= amountADesired.\namountBMin uint Bounds the extent to which the A/B price can go up before the transaction reverts. Must be <= amountBDesired.\nto address Recipient of the liquidity tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namountA uint The amount of tokenA  sent to the pool.\namountB uint The amount of tokenB sent to the pool.", "metadata": {"page_number": 734, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eea54d68d6ce", "text": "deadline uint Unix timestamp after which the transaction will revert.\namountA uint The amount of tokenA  sent to the pool.\namountB uint The amount of tokenB sent to the pool.\nliquidity uint The amount of liquidity tokens minted.\naddLiquidityETH  \nfunction  addLiquidityETH (\n  address token,\n  uint amountTokenDesired ,\n  uint amountTokenMin ,\n  uint amountETHMin ,\n  address to,\n  uint deadline\n) external  payable returns (uint amountToken , uint amountETH , uint liquidity );\nCopy\nAdds liquidity to an ERC-20 \u21c4WETH pool with ETH.\nTo cover all possible scenarios, msg.sender  should have already given the router an allowance of at least amountT okenDesired on token.\nAlways adds assets at the ideal ratio, according to the price when the transaction is executed.", "metadata": {"page_number": 734, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f109ffa1c7a9", "text": "To cover all possible scenarios, msg.sender  should have already given the router an allowance of at least amountT okenDesired on token.\nAlways adds assets at the ideal ratio, according to the price when the transaction is executed.\nmsg.value  is treated as a amountETHDesired.\nLeftover ETH, if any , is returned to msg.sender .\nIf a pool for the passed token and WETH does not exists, one is created automatically , and exactly amountT okenDesired/ msg.value\ntokens are added.\nName Type\ntoken address A pool token.\namountT okenDesired uintThe amount of token to add as liquidity if the WETH/token price is <=\nmsg.value /amountT okenDesired (token depreciates).\nmsg.value\n(amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <=", "metadata": {"page_number": 734, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "88ce6cfe06de", "text": "msg.value /amountT okenDesired (token depreciates).\nmsg.value\n(amountETHDesired)uintThe amount of ETH to add as liquidity if the token/WETH price is <=\namountT okenDesired/ msg.value  (WETH depreciates).\namountT okenMin uintBounds the extent to which the WETH/token price can go up before the transaction reverts. Must be <=\namountT okenDesired.\namountETHMin uintBounds the extent to which the token/WETH price can go up before the transaction reverts. Must be <=\nmsg.value .\nto address Recipient of the liquidity tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namountT oken uint The amount of token sent to the pool.\namountETH uint The amount of ETH converted to WETH and sent to the pool.", "metadata": {"page_number": 734, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "85e582e89186", "text": "deadline uint Unix timestamp after which the transaction will revert.\namountT oken uint The amount of token sent to the pool.\namountETH uint The amount of ETH converted to WETH and sent to the pool.\nliquidity uint The amount of liquidity tokens minted.", "metadata": {"page_number": 734, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "23685bea55eb", "text": "removeLiquidity  \nfunction  removeLiquidity (\n  address tokenA,\n  address tokenB,\n  uint liquidity ,\n  uint amountAMin ,\n  uint amountBMin ,\n  address to,\n  uint deadline\n) external  returns (uint amountA , uint amountB );\nCopy\nRemoves liquidity from an ERC-20 \u21c4ERC-20 pool.\nmsg.sender  should have already given the router an allowance of at least liquidity on the pool.\nName Type\ntokenA address A pool token.\ntokenB address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountAMin uint The minimum amount of tokenA  that must be received for the transaction not to revert.\namountBMin uint The minimum amount of tokenB that must be received for the transaction not to revert.", "metadata": {"page_number": 735, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1fe91d1628c3", "text": "amountAMin uint The minimum amount of tokenA  that must be received for the transaction not to revert.\namountBMin uint The minimum amount of tokenB that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\namountA uint The amount of tokenA  received.\namountB uint The amount of tokenB received.\nremoveLiquidityETH  \nfunction  removeLiquidityETH (\n  address token,\n  uint liquidity ,\n  uint amountTokenMin ,\n  uint amountETHMin ,\n  address to,\n  uint deadline\n) external  returns (uint amountToken , uint amountETH );\nCopy\nRemoves liquidity from an ERC-20 \u21c4WETH pool and receive ETH.", "metadata": {"page_number": 735, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d35b1e0b256e", "text": "address to,\n  uint deadline\n) external  returns (uint amountToken , uint amountETH );\nCopy\nRemoves liquidity from an ERC-20 \u21c4WETH pool and receive ETH.\nmsg.sender  should have already given the router an allowance of at least liquidity on the pool.\nName Type\ntoken address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountT okenMin uint The minimum amount of token that must be received for the transaction not to revert.\namountETHMin uint The minimum amount of ETH that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\namountT oken uint The amount of token received.\namountETH uint The amount of ETH received.\nremoveLiquidityW ithPermit", "metadata": {"page_number": 735, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1769107549b5", "text": "deadline uint Unix timestamp after which the transaction will revert.\namountT oken uint The amount of token received.\namountETH uint The amount of ETH received.\nremoveLiquidityW ithPermit  \nfunction  removeLiquidityWithPermit (\n  address tokenA,\n  address tokenB,\n  uint liquidity ,\n  uint amountAMin ,\n  uint amountBMin ,\n  address to,", "metadata": {"page_number": 735, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cb990a343e02", "text": "uint deadline ,\n  bool approveMax , uint8 v, bytes32 r, bytes32 s\n) external  returns (uint amountA , uint amountB );\nCopy\nRemoves liquidity from an ERC-20 \u21c4ERC-20 pool without pre-approval, thanks to permit .\nName Type\ntokenA address A pool token.\ntokenB address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountAMin uint The minimum amount of tokenA  that must be received for the transaction not to revert.\namountBMin uint The minimum amount of tokenB that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\napproveMax bool Whether or not the approval amount in the signature is for liquidity or uint(-1) .\nv uint8 The v component of the permit signature.", "metadata": {"page_number": 736, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "baedb4683c3f", "text": "deadline uint Unix timestamp after which the transaction will revert.\napproveMax bool Whether or not the approval amount in the signature is for liquidity or uint(-1) .\nv uint8 The v component of the permit signature.\nr bytes32 The r component of the permit signature.\ns bytes32 The s component of the permit signature.\namountA uint The amount of tokenA  received.\namountB uint The amount of tokenB received.\nremoveLiquidityETHW ithPermit  \nfunction  removeLiquidityETHWithPermit (\n  address token,\n  uint liquidity ,\n  uint amountTokenMin ,\n  uint amountETHMin ,\n  address to,\n  uint deadline ,\n  bool approveMax , uint8 v, bytes32 r, bytes32 s\n) external  returns (uint amountToken , uint amountETH );\nCopy", "metadata": {"page_number": 736, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4193fb089235", "text": "address to,\n  uint deadline ,\n  bool approveMax , uint8 v, bytes32 r, bytes32 s\n) external  returns (uint amountToken , uint amountETH );\nCopy\nRemoves liquidity from an ERC-20 \u21c4WETTH pool and receive ETH without pre-approval, thanks to permit .\nName Type\ntoken address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountT okenMin uint The minimum amount of token that must be received for the transaction not to revert.\namountETHMin uint The minimum amount of ETH that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\napproveMax bool Whether or not the approval amount in the signature is for liquidity or uint(-1) .\nv uint8 The v component of the permit signature.", "metadata": {"page_number": 736, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ebe399aa256", "text": "deadline uint Unix timestamp after which the transaction will revert.\napproveMax bool Whether or not the approval amount in the signature is for liquidity or uint(-1) .\nv uint8 The v component of the permit signature.\nr bytes32 The r component of the permit signature.\ns bytes32 The s component of the permit signature.\namountT oken uint The amount of token received.\namountETH uint The amount of ETH received.\nremoveLiquidityETHSupportingFeeOnT ransferT okens  \nfunction  removeLiquidityETHSupportingFeeOnTransferTokens (\n  address token,\n  uint liquidity ,\n  uint amountTokenMin ,\n  uint amountETHMin ,\n  address to,\n  uint deadline\n) external  returns (uint amountETH );", "metadata": {"page_number": 736, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b3af3e28c66c", "text": "Copy\nIdentical to removeLiquidityETH , but succeeds for tokens that take a fee on transfer .\nmsg.sender  should have already given the router an allowance of at least liquidity on the pool.\nName Type\ntoken address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountT okenMin uint The minimum amount of token that must be received for the transaction not to revert.\namountETHMin uint The minimum amount of ETH that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\namountETH uint The amount of ETH received.\nremoveLiquidityETHW ithPermitSupportingFeeOnT ransferT okens  \nfunction  removeLiquidityETHWithPermitSupportingFeeOnTransferTokens (\n  address token,\n  uint liquidity ,", "metadata": {"page_number": 737, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33637a31acf1", "text": "function  removeLiquidityETHWithPermitSupportingFeeOnTransferTokens (\n  address token,\n  uint liquidity ,\n  uint amountTokenMin ,\n  uint amountETHMin ,\n  address to,\n  uint deadline ,\n  bool approveMax , uint8 v, bytes32 r, bytes32 s\n) external  returns (uint amountETH );\nCopy\nIdentical to removeLiquidityETHW ithPermit , but succeeds for tokens that take a fee on transfer .\nName Type\ntoken address A pool token.\nliquidity uint The amount of liquidity tokens to remove.\namountT okenMin uint The minimum amount of token that must be received for the transaction not to revert.\namountETHMin uint The minimum amount of ETH that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.", "metadata": {"page_number": 737, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1ddcf5282690", "text": "amountETHMin uint The minimum amount of ETH that must be received for the transaction not to revert.\nto address Recipient of the underlying assets.\ndeadline uint Unix timestamp after which the transaction will revert.\napproveMax bool Whether or not the approval amount in the signature is for liquidity or uint(-1) .\nv uint8 The v component of the permit signature.\nr bytes32 The r component of the permit signature.\ns bytes32 The s component of the permit signature.\namountETH uint The amount of ETH received.\nswapExactT okensForT okens  \nfunction  swapExactTokensForTokens (\n  uint amountIn ,\n  uint amountOutMin ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external  returns (uint[] memory amounts );\nCopy", "metadata": {"page_number": 737, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a3e36f50ff0a", "text": "uint amountIn ,\n  uint amountOutMin ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external  returns (uint[] memory amounts );\nCopy\nSwaps an exact amount of input tokens for as many output tokens as possible, along the route determined by the path. The first element of path\nis the input token, the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a\ndirect pair does not exist).\nmsg.sender  should have already given the router an allowance of at least amountIn on the input token.\nName Type\namountIn uint The amount of input tokens to send.", "metadata": {"page_number": 737, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "18b96df6d620", "text": "Name Type\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses must\nexist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapT okensForExactT okens  \nfunction  swapTokensForExactTokens (\n  uint amountOut ,\n  uint amountInMax ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external  returns (uint[] memory amounts );\nCopy", "metadata": {"page_number": 738, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "55cb8fddd77e", "text": "uint amountOut ,\n  uint amountInMax ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external  returns (uint[] memory amounts );\nCopy\nReceive an exact amount of output tokens for as few input tokens as possible, along the route determined by the path. The first element of path\nis the input token, the last is the output token, and any intermediate elements represent intermediate tokens to trade through (if, for example, a\ndirect pair does not exist).\nmsg.sender  should have already given the router an allowance of at least amountInMax on the input token.\nName Type\namountOut uint The amount of output tokens to receive.\namountInMax uint The maximum amount of input tokens that can be required before the transaction reverts.\npathaddress[]", "metadata": {"page_number": 738, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c4d133ef1938", "text": "Name Type\namountOut uint The amount of output tokens to receive.\namountInMax uint The maximum amount of input tokens that can be required before the transaction reverts.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses must\nexist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapExactETHForT okens  \nfunction  swapExactETHForTokens (uint amountOutMin , address[] calldata  path, address to, uint deadline )\n  external\n  payable\n  returns (uint[] memory amounts );\nCopy", "metadata": {"page_number": 738, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "54152b25fccc", "text": "function  swapExactETHForTokens (uint amountOutMin , address[] calldata  path, address to, uint deadline )\n  external\n  payable\n  returns (uint[] memory amounts );\nCopy\nSwaps an exact amount of ETH for as many output tokens as possible, along the route determined by the path. The first element of path must be\nWETH , the last is the output token, and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair\ndoes not exist).\nName Type\nmsg.value\n(amountIn)uint The amount of ETH to send.\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses\nmust exist and have liquidity .", "metadata": {"page_number": 738, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3fed6307006a", "text": "pathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses\nmust exist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapT okensForExactETH  \nfunction  swapTokensForExactETH (uint amountOut , uint amountInMax , address[] calldata  path, address to, uint deadline )\n  external\n  returns (uint[] memory amounts );", "metadata": {"page_number": 738, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9fbe083788a8", "text": "Copy\nReceive an exact amount of ETH for as few input tokens as possible, along the route determined by the path. The first element of path is the\ninput token, the last must be WETH , and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair\ndoes not exist).\nmsg.sender  should have already given the router an allowance of at least amountInMax on the input token.\nIf the to address is a smart contract, it must have the ability to receive ETH.\nName Type\namountOut uint The amount of ETH to receive.\namountInMax uint The maximum amount of input tokens that can be required before the transaction reverts.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses must\nexist and have liquidity .\nto address Recipient of ETH.", "metadata": {"page_number": 739, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dbfe11543399", "text": "pathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses must\nexist and have liquidity .\nto address Recipient of ETH.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapExactT okensForETH  \nfunction  swapExactTokensForETH (uint amountIn , uint amountOutMin , address[] calldata  path, address to, uint deadline )\n  external\n  returns (uint[] memory amounts );\nCopy\nSwaps an exact amount of tokens for as much ETH as possible, along the route determined by the path. The first element of path is the input\ntoken, the last must be WETH , and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does\nnot exist).", "metadata": {"page_number": 739, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6f89ecba7750", "text": "token, the last must be WETH , and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair does\nnot exist).\nIf the to address is a smart contract, it must have the ability to receive ETH.\nName Type\namountIn uint The amount of input tokens to send.\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses must\nexist and have liquidity .\nto address Recipient of the ETH.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapETHForExactT okens", "metadata": {"page_number": 739, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e6714a1c2c1f", "text": "to address Recipient of the ETH.\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapETHForExactT okens  \nfunction  swapETHForExactTokens (uint amountOut , address[] calldata  path, address to, uint deadline )\n  external\n  payable\n  returns (uint[] memory amounts );\nCopy\nReceive an exact amount of tokens for as little ETH as possible, along the route determined by the path. The first element of path must be\nWETH , the last is the output token and any intermediate elements represent intermediate pairs to trade through (if, for example, a direct pair\ndoes not exist).\nLeftover ETH, if any , is returned to msg.sender .\nName Type\namountOut uint The amount of tokens to receive.\nmsg.value", "metadata": {"page_number": 739, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "65db17d28e0b", "text": "does not exist).\nLeftover ETH, if any , is returned to msg.sender .\nName Type\namountOut uint The amount of tokens to receive.\nmsg.value\n(amountInMax)uint The maximum amount of ETH that can be required before the transaction reverts.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of\naddresses must exist and have liquidity .\nto address Recipient of the output tokens.", "metadata": {"page_number": 739, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e8f9e4925ced", "text": "Name Type\ndeadline uint Unix timestamp after which the transaction will revert.\namounts uint[] memory The input token amount and all subsequent output token amounts.\nswapExactT okensForT okensSupportingFeeOnT ransferT okens  \nfunction  swapExactTokensForTokensSupportingFeeOnTransferTokens (\n  uint amountIn ,\n  uint amountOutMin ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external ;\nCopy\nIdentical to swapExactT okensForT okens , but succeeds for tokens that take a fee on transfer .\nmsg.sender  should have already given the router an allowance of at least amountIn on the input token.\nName Type\namountIn uint The amount of input tokens to send.", "metadata": {"page_number": 740, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ed8a5285a1c2", "text": "msg.sender  should have already given the router an allowance of at least amountIn on the input token.\nName Type\namountIn uint The amount of input tokens to send.\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses must\nexist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\nswapExactETHForT okensSupportingFeeOnT ransferT okens  \nfunction  swapExactETHForTokensSupportingFeeOnTransferTokens (\n  uint amountOutMin ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external  payable;\nCopy", "metadata": {"page_number": 740, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "957d7159d484", "text": "uint amountOutMin ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external  payable;\nCopy\nIdentical to swapExactETHForT okens , but succeeds for tokens that take a fee on transfer .\nName Type\nmsg.value\n(amountIn)uint The amount of ETH to send.\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses\nmust exist and have liquidity .\nto address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\nswapExactT okensForETHSupportingFeeOnT ransferT okens", "metadata": {"page_number": 740, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1105cf4948a7", "text": "to address Recipient of the output tokens.\ndeadline uint Unix timestamp after which the transaction will revert.\nswapExactT okensForETHSupportingFeeOnT ransferT okens  \nfunction  swapExactTokensForETHSupportingFeeOnTransferTokens (\n  uint amountIn ,\n  uint amountOutMin ,\n  address[] calldata  path,\n  address to,\n  uint deadline\n) external ;\nCopy\nIdentical to swapExactT okensForETH , but succeeds for tokens that take a fee on transfer .\nIf the to address is a smart contract, it must have the ability to receive ETH.", "metadata": {"page_number": 740, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "19795722814a", "text": "Name Type\namountIn uint The amount of input tokens to send.\namountOutMin uint The minimum amount of output tokens that must be received for the transaction not to revert.\npathaddress[]\ncalldataAn array of token addresses. path.length  must be >= 2. Pools for each consecutive pair of addresses must\nexist and have liquidity .\nto address Recipient of the ETH.\ndeadline uint Unix timestamp after which the transaction will revert.\nInterface\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol' ;\nCopy\npragma solidity  >=0.6.2;\ninterface  IUniswapV2Router01  {\n    function  factory() external  pure returns (address);\n    function  WETH() external  pure returns (address);\n    function  addLiquidity (\n        address tokenA,", "metadata": {"page_number": 741, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cc29693d7f9e", "text": "interface  IUniswapV2Router01  {\n    function  factory() external  pure returns (address);\n    function  WETH() external  pure returns (address);\n    function  addLiquidity (\n        address tokenA,\n        address tokenB,\n        uint amountADesired ,\n        uint amountBDesired ,\n        uint amountAMin ,\n        uint amountBMin ,\n        address to,\n        uint deadline\n    ) external  returns (uint amountA , uint amountB , uint liquidity );\n    function  addLiquidityETH (\n        address token,\n        uint amountTokenDesired ,\n        uint amountTokenMin ,\n        uint amountETHMin ,\n        address to,\n        uint deadline\n    ) external  payable returns (uint amountToken , uint amountETH , uint liquidity );\n    function  removeLiquidity (", "metadata": {"page_number": 741, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4963c91aa9b7", "text": "uint amountETHMin ,\n        address to,\n        uint deadline\n    ) external  payable returns (uint amountToken , uint amountETH , uint liquidity );\n    function  removeLiquidity (\n        address tokenA,\n        address tokenB,\n        uint liquidity ,\n        uint amountAMin ,\n        uint amountBMin ,\n        address to,\n        uint deadline\n    ) external  returns (uint amountA , uint amountB );\n    function  removeLiquidityETH (\n        address token,\n        uint liquidity ,\n        uint amountTokenMin ,\n        uint amountETHMin ,\n        address to,\n        uint deadline\n    ) external  returns (uint amountToken , uint amountETH );\n    function  removeLiquidityWithPermit (\n        address tokenA,\n        address tokenB,", "metadata": {"page_number": 741, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b4d2a72e5cfd", "text": "address to,\n        uint deadline\n    ) external  returns (uint amountToken , uint amountETH );\n    function  removeLiquidityWithPermit (\n        address tokenA,\n        address tokenB,\n        uint liquidity ,\n        uint amountAMin ,\n        uint amountBMin ,\n        address to,\n        uint deadline ,\n        bool approveMax , uint8 v, bytes32 r, bytes32 s\n    ) external  returns (uint amountA , uint amountB );\n    function  removeLiquidityETHWithPermit (\n        address token,\n        uint liquidity ,\n        uint amountTokenMin ,\n        uint amountETHMin ,\n        address to,\n        uint deadline ,\n        bool approveMax , uint8 v, bytes32 r, bytes32 s\n    ) external  returns (uint amountToken , uint amountETH );", "metadata": {"page_number": 741, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8feb15b5b216", "text": "uint amountETHMin ,\n        address to,\n        uint deadline ,\n        bool approveMax , uint8 v, bytes32 r, bytes32 s\n    ) external  returns (uint amountToken , uint amountETH );\n    function  swapExactTokensForTokens (\n        uint amountIn ,", "metadata": {"page_number": 741, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3176d2aa689c", "text": "uint amountOutMin ,\n        address[] calldata  path,\n        address to,\n        uint deadline\n    ) external  returns (uint[] memory amounts );\n    function  swapTokensForExactTokens (\n        uint amountOut ,\n        uint amountInMax ,\n        address[] calldata  path,\n        address to,\n        uint deadline\n    ) external  returns (uint[] memory amounts );\n    function  swapExactETHForTokens (uint amountOutMin , address[] calldata  path, address to, uint deadline )\n        external\n        payable\n        returns (uint[] memory amounts );\n    function  swapTokensForExactETH (uint amountOut , uint amountInMax , address[] calldata  path, address to, uint deadline )\n        external\n        returns (uint[] memory amounts );", "metadata": {"page_number": 742, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "880985c8a8fc", "text": "function  swapTokensForExactETH (uint amountOut , uint amountInMax , address[] calldata  path, address to, uint deadline )\n        external\n        returns (uint[] memory amounts );\n    function  swapExactTokensForETH (uint amountIn , uint amountOutMin , address[] calldata  path, address to, uint deadline )\n        external\n        returns (uint[] memory amounts );\n    function  swapETHForExactTokens (uint amountOut , address[] calldata  path, address to, uint deadline )\n        external\n        payable\n        returns (uint[] memory amounts );\n    function  quote(uint amountA , uint reserveA , uint reserveB ) external  pure returns (uint amountB );\n    function  getAmountOut (uint amountIn , uint reserveIn , uint reserveOut ) external  pure returns (uint amountOut );", "metadata": {"page_number": 742, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d6203a085b56", "text": "function  getAmountOut (uint amountIn , uint reserveIn , uint reserveOut ) external  pure returns (uint amountOut );\n    function  getAmountIn (uint amountOut , uint reserveIn , uint reserveOut ) external  pure returns (uint amountIn );\n    function  getAmountsOut (uint amountIn , address[] calldata  path) external  view returns (uint[] memory amounts );\n    function  getAmountsIn (uint amountOut , address[] calldata  path) external  view returns (uint[] memory amounts );\n}\ninterface  IUniswapV2Router02  is IUniswapV2Router01 {\n    function  removeLiquidityETHSupportingFeeOnTransferTokens (\n        address token,\n        uint liquidity ,\n        uint amountTokenMin ,\n        uint amountETHMin ,\n        address to,\n        uint deadline", "metadata": {"page_number": 742, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f7d90abd50de", "text": "address token,\n        uint liquidity ,\n        uint amountTokenMin ,\n        uint amountETHMin ,\n        address to,\n        uint deadline\n    ) external  returns (uint amountETH );\n    function  removeLiquidityETHWithPermitSupportingFeeOnTransferTokens (\n        address token,\n        uint liquidity ,\n        uint amountTokenMin ,\n        uint amountETHMin ,\n        address to,\n        uint deadline ,\n        bool approveMax , uint8 v, bytes32 r, bytes32 s\n    ) external  returns (uint amountETH );\n    function  swapExactTokensForTokensSupportingFeeOnTransferTokens (\n        uint amountIn ,\n        uint amountOutMin ,\n        address[] calldata  path,\n        address to,\n        uint deadline\n    ) external ;", "metadata": {"page_number": 742, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2145006bf334", "text": "uint amountIn ,\n        uint amountOutMin ,\n        address[] calldata  path,\n        address to,\n        uint deadline\n    ) external ;\n    function  swapExactETHForTokensSupportingFeeOnTransferTokens (\n        uint amountOutMin ,\n        address[] calldata  path,\n        address to,\n        uint deadline\n    ) external  payable;\n    function  swapExactTokensForETHSupportingFeeOnTransferTokens (\n        uint amountIn ,\n        uint amountOutMin ,\n        address[] calldata  path,\n        address to,\n        uint deadline\n    ) external ;\n}\nCopy\nABI", "metadata": {"page_number": 742, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "20ebb67f94a0", "text": "import IUniswapV2Router02  from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nCopy\nhttps://unpkg.com/@uniswap/v2-periphery@1.1.0-beta.0/build/IUniswapV2Router02.json\nEdit this page\nHelpful?\nPrevious\nRouter01\nNext\nCommon Errors\nfactory\nWETH\nquote\ngetAmountOut\ngetAmountIn\ngetAmountsOut\ngetAmountsIn\naddLiquidity\naddLiquidityETH\nremoveLiquidity\nremoveLiquidityETH\nremoveLiquidityW ithPermit\nremoveLiquidityETHW ithPermit", "metadata": {"page_number": 743, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2bc5db7f0f82", "text": "addLiquidity\naddLiquidityETH\nremoveLiquidity\nremoveLiquidityETH\nremoveLiquidityW ithPermit\nremoveLiquidityETHW ithPermit\nremoveLiquidityETHSupportingFeeOnT ransferT okens\nremoveLiquidityETHW ithPermitSupportingFeeOnT ransferT okens\nswapExactT okensForT okens\nswapT okensForExactT okens\nswapExactETHForT okens\nswapT okensForExactETH\nswapExactT okensForETH\nswapETHForExactT okens\nswapExactT okensForT okensSupportingFeeOnT ransferT okens\nswapExactETHForT okensSupportingFeeOnT ransferT okens\nswapExactT okensForETHSupportingFeeOnT ransferT okens", "metadata": {"page_number": 743, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "43067c5ae5d4", "text": "swapExactETHForT okensSupportingFeeOnT ransferT okens\nswapExactT okensForETHSupportingFeeOnT ransferT okens\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 743, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "89ed3b9f23bc", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nGuides\nRouting a SwapHelpful?\nOn this page\nRouting a Swap\nIntroduction  \nThis guide will cover how to use Uniswap's smart order router to compute optimal routes and execute swaps. Rather than", "metadata": {"page_number": 744, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5f7d2051bcdc", "text": "Routing a SwapHelpful?\nOn this page\nRouting a Swap\nIntroduction  \nThis guide will cover how to use Uniswap's smart order router to compute optimal routes and execute swaps. Rather than\ntrading between a single pool, smart routing may use multiple hops (as many as needed) to ensure that the end result of the\nswap is the optimal price. It is based on the routing code example , found in the Uniswap code examples repository . To run\nthis example, check out the guide's README  and follow the setup instructions.\ninfo\nIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository , please visit\nour background  page!\nIn this example we will trade between WETH and USDC , but you can configure your example to us any two currencies\nand amount of input currency .\nThe guide will cover :\n1. Creating a router instance", "metadata": {"page_number": 744, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4c5e22c2701a", "text": "In this example we will trade between WETH and USDC , but you can configure your example to us any two currencies\nand amount of input currency .\nThe guide will cover :\n1. Creating a router instance\n2. Creating a route", "metadata": {"page_number": 744, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c08735d89cf8", "text": "3. Swapping using a route\nAt the end of the guide, we should be able to create a route and and execute a swap between any two currencies tokens using\nthe example's included UI.\nFor this guide, the following Uniswap packages are used:\n@uniswap/v3-sdk\n@uniswap/sdk-core\n@uniswap/smart-order-router\nThe core code of this guide can be found in routing.ts\nCreating a r outer  instance  \nTo compute our route, we will use the @uniswap/smart-order-router  package, specifically the AlphaRouter  class which\nrequires a chainId  and a provider . Note that routing is not supported for local forks, so we will use a mainnet provider\neven when swapping on a local fork:\nInstantiating an AlphaRouter\nloading...\nCopy\nView on Github", "metadata": {"page_number": 745, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "69495af6784c", "text": "even when swapping on a local fork:\nInstantiating an AlphaRouter\nloading...\nCopy\nView on Github\nCreating a r oute \nNext, we will create our options conforming to the SwapOptionsSwapRouter02  interface, defining the wallet to use, slippage\ntolerance, and deadline for the transaction:\nRouting Options\nloading...\nCopy\nView on Github\nUsing these options, we can now create a trade ( TradeType.EXACT_INPUT  or TradeType.EXACT_OUTPUT ) with the currency\nand the input amount to use to get a quote. For this example, we'll use an EXACT_INPUT  trade to get a quote outputted in the\nquote currency .\nCreating a route\nloading...\nCopy\nView on Github\nSwapping using a r oute", "metadata": {"page_number": 745, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e8223af18796", "text": "quote currency .\nCreating a route\nloading...\nCopy\nView on Github\nSwapping using a r oute \nFirst, we need to give approval to the SwapRouter  smart contract to spend our tokens for us:\nApproving SwapRouter to spend our tokens\nloading...\nCopy\nView on Github", "metadata": {"page_number": 745, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bd2b84c40615", "text": "Once the approval has been granted and using the route, we can now execute the trade using the route's computed calldata,\nvalues, and gas values:\nUsing a route\nloading...\nCopy\nView on Github\nAfter swapping, you should see the currency balances update in the UI shortly after the block is confirmed.\nNext Steps  \nNow that you're familiar with trading, consider checking out our next guides on pooling liquidity  to Uniswap!\nEdit this page\nHelpful?\nPrevious\nExecuting a Trade\nNext\nMinting a Position\nIntroduction\nCreating a router instance\nCreating a route\nSwapping using a route\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 746, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "34d18feddeab", "text": "Swapping using a route\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 746, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e308009fe814", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nBitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside", "metadata": {"page_number": 747, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b7c0ef4441fc", "text": "FixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside\nSqrtPriceMath\nSwapMath\nTick\nTickBitmap\nTickMath\nTransferHelper\nUnsafeMath\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000", "metadata": {"page_number": 747, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f55a3d8c6a0e", "text": "V3 Protocol\nTechnical Reference\nCore\nLibraries\nSafeCastHelpful?\nOn this page\nSafeCast\nContains methods for safely casting between types\nFunctions  \ntoUint160 \n  function  toUint160 (\n    uint256 y\n  ) internal  pure returns (uint160 z)\nCopy\nCast a uint256 to a uint160, revert on overflow\nParameters:  \nName Type Description\ny uint256 The uint256 to be downcasted\nReturn Values:  \nName Type Description\nz uint160 The downcasted integer , now type uint160\ntoInt128 \n  function  toInt128 (\n    int256 y\n  ) internal  pure returns (int128 z)\nCopy", "metadata": {"page_number": 748, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "196d5e2dd6b2", "text": "z uint160 The downcasted integer , now type uint160\ntoInt128 \n  function  toInt128 (\n    int256 y\n  ) internal  pure returns (int128 z)\nCopy\nCast a int256 to a int128, revert on overflow or underflow\nParameters:  \nName Type Description\ny int256 The int256 to be downcasted\nReturn Values:  \nName Type Description\nz int128 The downcasted integer , now type int128", "metadata": {"page_number": 748, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c820a3397741", "text": "toInt256 \n  function  toInt256 (\n    uint256 y\n  ) internal  pure returns (int256 z)\nCopy\nCast a uint256 to a int256, revert on overflow\nParameters:  \nName Type Description\ny uint256 The uint256 to be casted\nReturn Values:  \nName Type Description\nz int256 The casted integer , now type int256\nEdit this page\nHelpful?\nPrevious\nPosition\nNext\nSecondsOutside\nFunctions\ntoUint160\ntoInt128\ntoInt256\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 749, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "548dfa4c7590", "text": "toInt128\ntoInt256\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 749, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d590c097b7ac", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 750, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e9f535f33d2c", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 751, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "06980d4a4bdb", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nSafeT ransferOptionsHelpful?", "metadata": {"page_number": 751, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f59787079cde", "text": "On this page\nSafeT ransferOptions\n@uniswap/v3-sdk  / Exports  / SafeT ransferOptions\nInterface: SafeT ransferOptions\nTable of contents  \nProperties \ndata\nrecipient\nsender\ntokenId\nProperties  \ndata \n\u2022 Optional  data : string\nThe optional parameter that passes data to the onERC721Received  call for the staker\nDefined in  \nnonfungiblePositionManager .ts:97\nrecipient \n\u2022 recipient : string\nThe account that should receive the NFT .\nDefined in  \nnonfungiblePositionManager .ts:88\nsender\n\u2022 sender : string\nThe account sending the NFT .\nDefined in  \nnonfungiblePositionManager .ts:83\ntokenId", "metadata": {"page_number": 752, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "feb474116fb6", "text": "\u2022 tokenId : BigintIsh\nThe id of the token being sent.\nDefined in  \nnonfungiblePositionManager .ts:93\nEdit this page\nHelpful?\nPrevious\nRemoveLiquidityOptions\nNext\nStandardPermitAr guments\nTable of contents\nProperties\nProperties\ndata\nrecipient\nsender\ntokenId\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord", "metadata": {"page_number": 753, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33e34ab9ac3f", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 753, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "14fd1d23e4a5", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nBitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside", "metadata": {"page_number": 754, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7620cdc31c77", "text": "FixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside\nSqrtPriceMath\nSwapMath\nTick\nTickBitmap\nTickMath\nTransferHelper\nUnsafeMath\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000", "metadata": {"page_number": 754, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c709bd258733", "text": "V3 Protocol\nTechnical Reference\nCore\nLibraries\nSecondsOutsideHelpful?\nOn this page\nSecondsOutside\nContains methods for working with a mapping from tick to 32 bit timestamp values, specifically seconds spent outside the\ntick.\nThe mapping uses int24 for keys since ticks are represented as int24 and there are 8 (2^3) values per word. Note \"seconds\noutside\" is always a relative measurement, only consistent for as long as a the lower tick and upper tick have gross liquidity\ngreater than 0.\nFunctions  \ninitialize \n  function  initialize (\n    mapping(int24 => uint256) self,\n    int24 tick,\n    int24 tickCurrent ,\n    int24 tickSpacing ,\n    uint32 time\n  ) internal\nCopy", "metadata": {"page_number": 755, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e75f9f4a6a5", "text": "mapping(int24 => uint256) self,\n    int24 tick,\n    int24 tickCurrent ,\n    int24 tickSpacing ,\n    uint32 time\n  ) internal\nCopy\nCalled the first time a tick is used to set the seconds outside value. Assumes the tick is not initialized.\nParameters:  \nName Type Description\nself mapping(int24 => uint256) the packed mapping of tick to seconds outside\ntick int24 the tick to be initialized\ntickCurrent int24 the current tick\ntickSpacing int24 the spacing between usable ticks\ntime uint32 the current timestamp\nclear \n  function  clear(\n    mapping(int24 => uint256) self,\n    int24 tick,\n    int24 tickSpacing\n  ) internal\nCopy", "metadata": {"page_number": 755, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f8d31564b4cc", "text": "clear \n  function  clear(\n    mapping(int24 => uint256) self,\n    int24 tick,\n    int24 tickSpacing\n  ) internal\nCopy\nCalled when a tick is no longer used, to clear the seconds outside value of the tick\nParameters:", "metadata": {"page_number": 755, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ba68c4e0dbdb", "text": "Name Type Description\nself mapping(int24 => uint256) the packed mapping of tick to seconds outside\ntick int24 the tick to be cleared\ntickSpacing int24 the spacing between usable ticks\ncross \n  function  cross(\n    mapping(int24 => uint256) self,\n    int24 tick,\n    int24 tickSpacing ,\n    uint32 time\n  ) internal\nCopy\nCalled when an initialized tick is crossed to update the seconds outside for that tick. Must be called every time an initialized\ntick is crossed\nParameters:  \nName Type Description\nself mapping(int24 => uint256) the packed mapping of tick to seconds outside\ntick int24 the tick to be crossed\ntickSpacing int24 the spacing between usable ticks\ntime uint32 the current block timestamp truncated to 32 bits\nget \n  function  get(", "metadata": {"page_number": 756, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c05c9791d403", "text": "tick int24 the tick to be crossed\ntickSpacing int24 the spacing between usable ticks\ntime uint32 the current block timestamp truncated to 32 bits\nget \n  function  get(\n    mapping(int24 => uint256) self,\n    int24 tick,\n    int24 tickSpacing\n  ) internal  view returns (uint32)\nCopy\nGet the seconds outside for an initialized tick. Should be called only on initialized ticks.\nParameters:  \nName Type Description\nself mapping(int24 => uint256) the packed mapping of tick to seconds outside\ntick int24 the tick to get the seconds outside value for\ntickSpacing int24 the spacing between usable ticks\nReturn Values:  \nType Description\nuint32 seconds outside value for that tick\nsecondsInside \n  function  secondsInside (", "metadata": {"page_number": 756, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "79085bd29202", "text": "tickSpacing int24 the spacing between usable ticks\nReturn Values:  \nType Description\nuint32 seconds outside value for that tick\nsecondsInside \n  function  secondsInside (\n    mapping(int24 => uint256) self,", "metadata": {"page_number": 756, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a3046fd221d7", "text": "int24 tickLower ,\n    int24 tickUpper ,\n    int24 tickCurrent ,\n    int24 tickSpacing\n  ) internal  view returns (uint32)\nCopy\nGet the seconds inside a tick range, assuming both tickLower and tickUpper are initialized\nParameters:  \nName Type Description\nself mapping(int24 => uint256) the packed mapping of tick to seconds outside\ntickLower int24 the lower tick for which to get seconds inside\ntickUpper int24 the upper tick for which to get seconds inside\ntickCurrent int24 the current tick\ntickSpacing int24 the spacing between usable ticks\nReturn Values:  \nName Type Description\na uint32 relative seconds inside value that can be snapshotted and compared to a later snapshot to compute\ntime spent between tickLower and tickUpper , i.e. time that a position's liquidity was in use.", "metadata": {"page_number": 757, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5612b148c81f", "text": "Name Type Description\na uint32 relative seconds inside value that can be snapshotted and compared to a later snapshot to compute\ntime spent between tickLower and tickUpper , i.e. time that a position's liquidity was in use.\nEdit this page\nHelpful?\nPrevious\nSafeCast\nNext\nSqrtPriceMath\nFunctions\ninitialize\nclear\ncross\nget\nsecondsInside\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 757, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "47ea27098b60", "text": "App\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 758, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1dd5d1ab043d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nFees\nPricing\nUnderstanding Returns\nSecurity\nMath\nResearch\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol", "metadata": {"page_number": 759, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eaa5da18ba9e", "text": "Security\nMath\nResearch\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nAdvanced Topics\nSecurityHelpful?\nAudit & Formal Verification\nBetween January 8 and April 30, a team of six engineers reviewed and formally verified crucial components of the smart\ncontracts for Uniswap V2.", "metadata": {"page_number": 759, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1536fcaafbb0", "text": "Their past work includes smart contract development on and formal verification of multi-collateral DAI.\nThe scope of work includes:\nFormal verification of the core smart contracts\nCode review of core smart contracts\nNumerical error analysis\nCode review of periphery smart contracts (during ongoing development)\nThe report also has a \"Design Comments\" section that we highly recommend for gaining a deep technical understanding of\nsome of the choices made in Uniswap V2.\nRead the report\nBug Bounty\nUniswap has an open and ongoing bug bounty program .\nConsiderations when building on Uniswap\nWhen integrating Uniswap V2 into another on-chain system, particular care must be taken to avoid security vulnerabilities,\navenues for manipulations, and the potential loss of funds.\nAs a preliminary note: smart contract integrations can happen at two levels: directly with Pair contracts, or through the", "metadata": {"page_number": 760, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b68f5f35a912", "text": "avenues for manipulations, and the potential loss of funds.\nAs a preliminary note: smart contract integrations can happen at two levels: directly with Pair contracts, or through the\nRouter . Direct interactions of fer maximal flexibility but require the most work to get right. Mediated interactions of fer more\nlimited capabilities but stronger safety guarantees.\nThere are two primary categories of risk associated with Uniswap V2. The first involves so-called \"static\" errors. These can\ninclude sending too many tokens to a pair during a swap (or requesting too few tokens back) or allowing transactions to\nlinger in the mempool long enough for the sender's expectations about prices to no longer be accurate.\nOne may address these errors with fairly straightforward logic checks. Executing these logic checks is the primary purpose\nof routers. Those who interact directly with pairs must perform these checks themselves (with the help of the Library ).\n\"Dynamic\" risk, the second category , involves runtime pricing. Because Ethereum transactions occur in an adversarial", "metadata": {"page_number": 760, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d6be5c433ca", "text": "of routers. Those who interact directly with pairs must perform these checks themselves (with the help of the Library ).\n\"Dynamic\" risk, the second category , involves runtime pricing. Because Ethereum transactions occur in an adversarial\nenvironment, naively written smart contracts can, and will, be exploited for profit. For example, suppose a smart contract\nchecks the asset ratio in a Uniswap pool at runtime and trades against it, assuming that the ratio represents the \"fair\" or\n\"market\" price of these assets. In that case, it is highly vulnerable to manipulation. A malicious actor could, e.g., trivially\ninsert transactions before and after the naive transaction (a so-called \"sandwich\" attack), causing the smart contract to trade\nat a radically worse price, profit from this at the trader's expense, and then return the contracts to their original state, all at a\nlow cost. (One important caveat is that these types of attacks are mitigated by trading in highly liquid pools, or at low\nvalues.)", "metadata": {"page_number": 760, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e9eb118f3cb1", "text": "low cost. (One important caveat is that these types of attacks are mitigated by trading in highly liquid pools, or at low\nvalues.)\nThe best way to protect against these attacks is to introduce a price oracle. An oracle is any device that returns desired\ninformation, in this case, a pair's spot price. The best \"oracle\" is simply a traders' of f-chain observation of the prevailing\nprice, which can be passed into the trade as a safety check. This strategy is best suited to retail trading venues where users\ninitiate transactions on their own behalf. However , it is often the case that a trusted price observation is not available (e.g., in\nmulti-step, programmatic interactions involving Uniswap). Without a price oracle, these interactions will be forced to trade\nat whatever the (potentially manipulated) rate on Uniswap is. For details on the Uniswap V2 approach to oracles, see\nOracles .\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 760, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9f760d54737a", "text": "at whatever the (potentially manipulated) rate on Uniswap is. For details on the Uniswap V2 approach to oracles, see\nOracles .\nEdit this page\nHelpful?\nPrevious\nUnderstanding Returns\nNext\nMath", "metadata": {"page_number": 760, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e2aa45ca216d", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 761, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "16f871aadca6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 762, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "601c7570f345", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 762, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "af2c248c4402", "text": "classes\nSelfPermit\nOn this page\nSelfPermit\n@uniswap/v3-sdk  / Exports  / SelfPermit\nClass: SelfPermit\nTable of contents  \nConstructors \nconstructor\nProperties \nINTERF ACE\nMethods \nencodePermit\nConstructors  \nconstructor \n\u2022 Private  new SelfPermit ()\nCannot be constructed.\nDefined in  \nselfPermit.ts:34\nProperties  \nINTERFACE \n\u25aa Static  INTERF ACE : Interface\nDefined in  \nselfPermit.ts:29\nMethods  \nencodePermit \n\u25b8 Static  encodePermit (token , options ): string", "metadata": {"page_number": 763, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "95b6723cdc51", "text": "Parameters  \nName Type\ntoken Token\noptions PermitOptions\nReturns  \nstring\nDefined in  \nselfPermit.ts:36\nEdit this page\nHelpful?\nPrevious\nRoute\nNext\nSqrtPriceMath\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nINTERF ACE\nMethods\nencodePermit\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 764, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6afeb57c9130", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 764, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8b84edb4736f", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 765, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "75b617948e7d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 766, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1a0570f55741", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 766, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c8baebef16a3", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nSelfPermitT estHelpful?\nSelfPermitT est\nSame as SelfPermit but not abstract\nEdit this page\nHelpful?\nPrevious\nPoolAddressT est\nNext\nTestCallbackV alidation\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter", "metadata": {"page_number": 767, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e760855c9add", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 767, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8707a1b82599", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nSet Up Your Contract\nMint a New Position\nCollecting Fees\nDecrease Liquidity\nIncrease Liquidity\nThe Full Contract\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nSet Up Your ContractHelpful?\nOn this page\nSet Up Your Contract\nSetting up the Contract", "metadata": {"page_number": 768, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e507daf957c8", "text": "V1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nSet Up Your ContractHelpful?\nOn this page\nSet Up Your Contract\nSetting up the Contract  \nThis guide is an example of a custodial contract Uniswap V3 positions, which allows interaction with the Uniswap V3\nPeriphery by minting a position, adding liquidity to a position, decreasing liquidity , and collecting fees.\nFirst, declare the solidity version used to compile the contract and abicoder v2  to allow arbitrary nested arrays and structs to\nbe encoded and decoded in calldata, a feature we use when transacting with a pool.\n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nCopy", "metadata": {"page_number": 768, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f005d4ab6f1c", "text": "Import the contracts needed from the npm package installation.\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol' ;\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol' ;\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol' ;\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;\nimport '@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nimport '@uniswap/v3-periphery/contracts/base/LiquidityManagement.sol' ;\nCopy", "metadata": {"page_number": 769, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fdc706817174", "text": "import '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nimport '@uniswap/v3-periphery/contracts/base/LiquidityManagement.sol' ;\nCopy\nCreate a contract called LiquidityExamples  and inherit both IERC721Receiver  and LiquidityManagement .\nWe've chosen to hardcode the token contract addresses and pool fee tiers for our example. In production, you would likely use\nan input parameter for this, allowing you to change the pools and tokens you are interacting with on a per transaction basis.\ncontract  LiquidityExamples  is IERC721Receiver {\n    address public constant  DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;\n    address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;", "metadata": {"page_number": 769, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "94e1e200e858", "text": "address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;\n    uint24 public constant  poolFee = 3000;\nCopy\nDeclare an immutable public variable nonfungiblePositionManager  of type INonfungiblePositionManager .\n    INonfungiblePositionManager public immutable nonfungiblePositionManager ;\nCopy\nAllowing ERC721 Interactions  \nEvery NFT is identified by a unique uint256 ID inside the ERC-721 smart contract, declared as the tokenId\nTo allow deposits of ERC721 expressions of liquidity , create a struct called Deposit , a mapping of uint256  to the Deposit\nstruct, then declare that mapping as a public variable deposits .\n    struct Deposit {\n        address owner;\n        uint128 liquidity ;\n        address token0;", "metadata": {"page_number": 769, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9945f0e79dc3", "text": "struct, then declare that mapping as a public variable deposits .\n    struct Deposit {\n        address owner;\n        uint128 liquidity ;\n        address token0;\n        address token1;\n    }\n    mapping(uint256 => Deposit ) public deposits ;\nCopy\nThe Constructor  \nDeclare the constructor here, which is executed once when the contract is deployed. Our constructor hard codes the address of\nthe nonfungible position manager interface, V3 router , and the periphery immutable state constructor , which requires the\nfactory and the address of weth9 (the ERC-20 wrapper  for ether).\n    constructor (\n        INonfungiblePositionManager _nonfungiblePositionManager ,\n        address _factory ,\n        address _WETH9\n    ) PeripheryImmutableState (_factory , _WETH9) {", "metadata": {"page_number": 769, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32e168844045", "text": "constructor (\n        INonfungiblePositionManager _nonfungiblePositionManager ,\n        address _factory ,\n        address _WETH9\n    ) PeripheryImmutableState (_factory , _WETH9) {\n        nonfungiblePositionManager = _nonfungiblePositionManager ;\n    }", "metadata": {"page_number": 769, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1f0ff92e1a4a", "text": "Copy\nAllowing custody of ERC721 tokens  \nTo allow the contract to custody ERC721 tokens, implement the onERC721Received  function within the inherited\nIERC721Receiver.sol  contract .\nThe from  identifier may be omitted because it is not used.\n    function  onERC721Received (\n        address operator ,\n        address,\n        uint256 tokenId ,\n        bytes calldata\n    ) external  override returns (bytes4) {\n        // get position information\n        _createDeposit (operator , tokenId );\n        return this.onERC721Received .selector ;\n    }\nCopy\nCreating a Deposit  \nTo add a Deposit  instance to the deposits  mapping, create an internal function called _createDeposit  that destructures the", "metadata": {"page_number": 770, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "294a166d824c", "text": "return this.onERC721Received .selector ;\n    }\nCopy\nCreating a Deposit  \nTo add a Deposit  instance to the deposits  mapping, create an internal function called _createDeposit  that destructures the\npositions  struct returned by positions  in nonfungiblePositionManager.sol . Pass the relevant variables token0  token1\nand liquidity  to the deposits  mapping.\n    function  _createDeposit (address owner, uint256 tokenId ) internal  {\n        (, , address token0, address token1, , , , uint128 liquidity , , , , ) =\n            nonfungiblePositionManager .positions (tokenId);\n        // set the owner and data for position\n        // operator is msg.sender\n        deposits [tokenId] = Deposit({owner: owner, liquidity : liquidity , token0: token0, token1: token1});\n    }\nCopy\nThe Full Contract Setup", "metadata": {"page_number": 770, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8b6c6911a583", "text": "deposits [tokenId] = Deposit({owner: owner, liquidity : liquidity , token0: token0, token1: token1});\n    }\nCopy\nThe Full Contract Setup  \n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol' ;\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol' ;\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol' ;\nimport '../libraries/TransferHelper.sol' ;\nimport '../interfaces/INonfungiblePositionManager.sol' ;", "metadata": {"page_number": 770, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "70f408703f5d", "text": "import '../libraries/TransferHelper.sol' ;\nimport '../interfaces/INonfungiblePositionManager.sol' ;\nimport '../base/LiquidityManagement.sol' ;\ncontract  LiquidityExamples  is IERC721Receiver {\n    address public constant  DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;\n    address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;\n    uint24 public constant  poolFee = 3000;\n    INonfungiblePositionManager public immutable nonfungiblePositionManager ;\n    /// @notice Represents the deposit of an NFT\n    struct Deposit {\n        address owner;\n        uint128 liquidity ;", "metadata": {"page_number": 770, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e08a36370d0d", "text": "address token0;\n        address token1;\n    }\n    /// @dev deposits[tokenId] => Deposit\n    mapping(uint256 => Deposit ) public deposits ;\n    constructor (\n        INonfungiblePositionManager _nonfungiblePositionManager\n    ) {\n        nonfungiblePositionManager = _nonfungiblePositionManager ;\n    }\n    // Implementing `onERC721Received` so this contract can receive custody of erc721 tokens\n    function  onERC721Received (\n        address operator ,\n        address,\n        uint256 tokenId ,\n        bytes calldata\n    ) external  override returns (bytes4) {\n        // get position information\n        _createDeposit (operator , tokenId );\n        return this.onERC721Received .selector ;\n    }", "metadata": {"page_number": 771, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "00f74b5e5118", "text": ") external  override returns (bytes4) {\n        // get position information\n        _createDeposit (operator , tokenId );\n        return this.onERC721Received .selector ;\n    }\n    function  _createDeposit (address owner, uint256 tokenId ) internal  {\n        (, , address token0, address token1, , , , uint128 liquidity , , , , ) =\n            nonfungiblePositionManager .positions (tokenId);\n        // set the owner and data for position\n        // operator is msg.sender\n        deposits [tokenId] = Deposit({owner: owner, liquidity : liquidity , token0: token0, token1: token1});\n    }\n}\nCopy\nEdit this page\nHelpful?\nPrevious\nMultihop Swaps\nNext\nMint a New Position\nSetting up the Contract", "metadata": {"page_number": 771, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f2021a9e2cb8", "text": "}\n}\nCopy\nEdit this page\nHelpful?\nPrevious\nMultihop Swaps\nNext\nMint a New Position\nSetting up the Contract\nAllowing ERC721 Interactions\nThe Constructor\nAllowing custody of ERC721 tokens\nCreating a Deposit\nThe Full Contract Setup\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 771, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e89156d751c", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 772, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "28d00614df8a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nOverview\nTechnical Reference\nSignatureT ransfer\nAllowanceT ransfer\nV2 Protocol\nV1 Protocol\n\u0000\nPermit2\nTechnical Reference\nSignatureT ransferHelpful?\nOn this page\nSignatur eTransfer\nSour ce Code\nOverview  \nThe main entry points on this contract are:", "metadata": {"page_number": 773, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e04d1f641527", "text": "Technical Reference\nSignatureT ransferHelpful?\nOn this page\nSignatur eTransfer\nSour ce Code\nOverview  \nThe main entry points on this contract are:\npermitTransferFrom\nUse permitT ransferFrom when you want to transfer a token from an owner through signature validation.\npermitWitnessTransferFrom\nUse permitW itnessT ransferFrom when you want to transfer a token from an owner through signature validation, but you would also like to validate other data. Any other data\nyou wish to be validated can be passed through with the witness  param.\nEach of these functions is overloaded with a batched version that allows users to transfer multiple tokens with 1 transaction.\nFunctions  \nSingle permitTransferFrom \nUse the permitTransferFrom  to transfer just one token.\nFunction signatur e\nfunction  permitTransferFrom (", "metadata": {"page_number": 773, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8b288c4069cb", "text": "Functions  \nSingle permitTransferFrom \nUse the permitTransferFrom  to transfer just one token.\nFunction signatur e\nfunction  permitTransferFrom (\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata  transferDetails ,\n        address owner,\n        bytes calldata  signature\n    ) external\nCopy\nParameters\npermit - Construct PermitTransferFrom  struct with the following:\nstruct PermitTransferFrom  {\n        TokenPermissions permitted ;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline ;\n    }\nstruct TokenPermissions  {\n        // ERC20 token address\n        address token;", "metadata": {"page_number": 773, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "740e87cc5186", "text": "// deadline on the permit signature\n        uint256 deadline ;\n    }\nstruct TokenPermissions  {\n        // ERC20 token address\n        address token;\n        // the maximum amount that can be spent", "metadata": {"page_number": 773, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1af451c6f35d", "text": "uint256 amount;\n    }\nCopy\ntransferDetails - information about recipient and amount\nstruct SignatureTransferDetails  {\n        // recipient address\n        address to;\n        // spender requested amount\n        uint256 requestedAmount ;\n    }\nCopy\nowner - the signer of the permit message and owner of the tokens\nsignature - the signature over the permit data. Supports EOA  signatures, compact signatures defined by EIP-2098 , and contract signatures defined by EIP-1271\nBatched permitTransferFrom \nUse permitTransferFrom  with the batched parameters when you want to transfer multiple tokens from an owner .\nFunction Signatur e\nfunction  permitTransferFrom (\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails [] calldata  transferDetails ,\n        address owner,", "metadata": {"page_number": 774, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4c0d0178f7db", "text": "Function Signatur e\nfunction  permitTransferFrom (\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails [] calldata  transferDetails ,\n        address owner,\n        bytes calldata  signature\n    ) external\nCopy\nParameters\npermit - Construct PermitBatchTransferFrom  with the following:\nstruct PermitBatchTransferFrom  {\n        // the tokens and corresponding amounts permitted for a transfer\n        TokenPermissions [] permitted ;\n        // a unique value for every token owner's signature to prevent signature replays\n        uint256 nonce;\n        // deadline on the permit signature\n        uint256 deadline ;\n    }\nstruct TokenPermissions  {\n        // ERC20 token address\n        address token;\n        // the maximum amount that can be spent", "metadata": {"page_number": 774, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d1156947bb68", "text": "uint256 deadline ;\n    }\nstruct TokenPermissions  {\n        // ERC20 token address\n        address token;\n        // the maximum amount that can be spent\n        uint256 amount;\n    }\nCopy\ntransferDetails - parameterized by the spender with information about the token transfer .\nThe length of the SignatureTransferDetails  array must equal the length of the TokenPermissions  array passed in with PermitBatchTransferFrom  struct. The token to be\ntransferred specified in the TokenPermissions  array should match the index of the SignatureTransferDetails  array .\nNote that if a spender is permitted to a token but does not need to transfer that token, they can specify that the requestedAmount  is 0 so that the transfer is skipped.\nowner - the signer of the permit message and owner of the tokens\nstruct SignatureTransferDetails  {\n        // recipient address", "metadata": {"page_number": 774, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7aae9255e432", "text": "owner - the signer of the permit message and owner of the tokens\nstruct SignatureTransferDetails  {\n        // recipient address\n        address to;\n        // spender requested amount\n        uint256 requestedAmount ;\n    }\nCopy\nsignature - the signature over the permit data. Supports EOA  signatures, compact signatures defined by EIP-2098 , and contract signatures defined by EIP-1271\nSingle permitWitnessTransferFrom \nFunction Signatur e\nfunction  permitWitnessTransferFrom (\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata  transferDetails ,\n        address owner,\n        bytes32 witness ,\n        string calldata  witnessTypeString ,\n        bytes calldata  signature\n    ) external\nCopy\nParameters", "metadata": {"page_number": 774, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f1b8c9e777f7", "text": "address owner,\n        bytes32 witness ,\n        string calldata  witnessTypeString ,\n        bytes calldata  signature\n    ) external\nCopy\nParameters\npermit - constructed with the same type as defined above in the single permitT ransferFrom case\ntransferDetails constructed with same type as defined above in the single permitT ransferFrom case\nowner - the signer of the permit message and owner of the tokens\nwitness - arbitrary data passed through that was signed by the user . Is used to reconstruct the signature. Pass through this data if you want the permit signature recovery also to\nvalidate other data.", "metadata": {"page_number": 774, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "81d6b1c66ded", "text": "witnessT ypeString - a string that defines the typed data that the witness was hashed from. It must also include the TokenPermissions  struct and comply with EIP-712  struct ordering.\nSee an example below .\nsignature - the signature over the permit data. Supports EOA  signatures, compact signatures defined by EIP-2098 , and contract signatures defined by EIP-1271\nBatch permitWitnessTransferFrom \nFunction Signatur e\nfunction  permitWitnessTransferFrom (\n        PermitBatchTransferFrom memory permit,\n        SignatureTransferDetails [] calldata  transferDetails ,\n        address owner,\n        bytes32 witness ,\n        string calldata  witnessTypeString ,\n        bytes calldata  signature\n    ) external\nCopy\nParameters\npermit - constructed with the same type in the batched case of permitTransferFrom", "metadata": {"page_number": 775, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "23ff183ffee0", "text": "string calldata  witnessTypeString ,\n        bytes calldata  signature\n    ) external\nCopy\nParameters\npermit - constructed with the same type in the batched case of permitTransferFrom\ntransferDetails - constructed with the same type in the batched case of permitTransferFrom\nowner - the signer of the permit message and owner of the tokens\nwitness - arbitrary data passed through that was signed by the user . Is used to reconstruct the signature. Pass through this data if you want the permit signature recovery to also\nvalidate other data.\nwitnessT ypeString - a string that defines the typed data that the witness was hashed from. It must also include the TokenPermissions  struct and comply with EIP-712  struct ordering.\nSee an example below .\nsignature - the signature over the permit data. Supports EOA  signatures, compact signatures defined by EIP-2098 , and contract signatures defined by EIP-1271", "metadata": {"page_number": 775, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "223c0f31251d", "text": "See an example below .\nsignature - the signature over the permit data. Supports EOA  signatures, compact signatures defined by EIP-2098 , and contract signatures defined by EIP-1271\nExample permitWitnessTransferFrom  parameters\nIf an integrating contract would also like the signer to verify information about a trade, an integrating contract may ask the signer to also sign an ExampleTrade  object that we define below:\nstruct ExampleTrade  {\n    address exampleTokenAddress ;\n    uint256 exampleMinimumAmountOut ;\n}\nCopy\nFollowing EIP-721, the typehash for the data would be defined by:\nbytes32 _EXAMPLE_TRADE_TYPEHASH = keccak256 ('ExampleTrade(address exampleTokenAddress,uint256 exampleMinimumAmountOut)' );\nCopy\nThe witness  that should be passed along with the permit message should be:\n bytes32 witness = keccak256 (", "metadata": {"page_number": 775, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dcd958316593", "text": "Copy\nThe witness  that should be passed along with the permit message should be:\n bytes32 witness = keccak256 (\n            abi .encode(_EXAMPLE_TRADE_TYPEHASH , exampleTrade .exampleTokenAddress , exampleTrade .exampleMinimumAmountOut ));\nCopy\nAnd the witnessTypeString  to be passed in should be:\nstring constant  witnessTypeString = \"ExampleTrade witness)ExampleTrade(address exampleTokenAddress,uint256 exampleMinimumAmountOut)TokenPermissions(address \nCopy\nIt\u2019s important to note that when hashing multiple typed structs, the ordering of the structs in the type string matters. Referencing EIP-721:\nIf the struct type references other struct types (and these in turn reference even more struct types), then the set of referenced struct types is collected, sorted by name and", "metadata": {"page_number": 775, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "257239183e99", "text": "If the struct type references other struct types (and these in turn reference even more struct types), then the set of referenced struct types is collected, sorted by name and\nappended to the encoding. An example encoding is Transaction(Person from,Person to,Asset tx)Asset(address token,uint256 amount)Person(address\nwallet,string name)\nNonce Schema  \nInstead of using incrementing nonces, we introduce non-monotonic, or unordered nonces with a nonceBitmap .\nThe nonceBitmap  maps an owner's address to a uint248 value, which we will call wordPos  which is the index of the desired bitmap. There are 2 248 possible indices and this 2 248 possible\nbitmaps where each bitmap holds 256 bits. A bit must be flipped on to prevent replays of users\u2019  signatures. Bits that are dirtied may not be used again.", "metadata": {"page_number": 775, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e4f2f4f12c8e", "text": "bitmaps where each bitmap holds 256 bits. A bit must be flipped on to prevent replays of users\u2019  signatures. Bits that are dirtied may not be used again.\n// nonceBitmap[ownerAddress][wordPosition] retrieves a uint256 bitmap\nmapping(address => mapping(uint248 => uint256)) public nonceBitmap ;\nCopy\nUsers will sign a uint256 nonce  value where the first 248 bits correspond to the word position of the bitmap to dirty and the last 8 bits correspond to the actual bit position being flipped\non.\nuint248 wordPos = uint248(nonce >> 8);\nuint8 bitPos = uint8(nonce);\nCopy\nuint256 bitmap = nonceBitmap [wordPos][bitPos]\nCopy\nSecurity Considerations", "metadata": {"page_number": 775, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cef63aee4e57", "text": "An integrating contract must check that tokens are released by a triggering call from the signer , or that the signer meant for their signature to be released by someone else.\n\u0000 Consider this scenario:\nA signer called Bob signs a permit to transfer 100 USDC with a router contract as the permissioned spender . The router contract never checks who the caller is but spends any permit\nmessages on the Permit2 contract. An attacker Eve can steal Bob\u2019 s signature, pass it through to the router with herself as the recipient, and transfer Bob\u2019 s tokens to herself.\nUniversal Router protects against this by checking that the msg.sender  from inside the routing contract is the supposed spender by passing msg.sender  in as the owner  param in any permit\ncalls and by passing in msg.sender  as the from  param in any transfer calls.\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nAllowanceT ransfer\nOverview\nFunctions", "metadata": {"page_number": 776, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "989005baabe7", "text": "Edit this page\nHelpful?\nPrevious\nOverview\nNext\nAllowanceT ransfer\nOverview\nFunctions\nSingle permitTransferFrom\nBatched permitTransferFrom\nSingle permitWitnessTransferFrom\nBatch permitWitnessTransferFrom\nNonce Schema\nSecurity Considerations\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 776, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c5b1a91375f4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nSingle Swaps\nMultihop Swaps\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nImplement A Swap\nSingle SwapsHelpful?\nOn this page\nSingle Swaps\nSwaps are the most common interaction with the Uniswap protocol. The following example shows you how to implement a single-path swap contract that uses two functions that you", "metadata": {"page_number": 777, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32ac3349fb34", "text": "Single SwapsHelpful?\nOn this page\nSingle Swaps\nSwaps are the most common interaction with the Uniswap protocol. The following example shows you how to implement a single-path swap contract that uses two functions that you\ncreate:\nswapExactInputSingle\nswapExactOutputSingle\nThe swapExactInputSingle  function is for performing exact input  swaps, which swap a fixed amount of one token for a maximum possible amount of another token. This function uses\nthe ExactInputSingleParams  struct and the exactInputSingle  function from the ISwapRouter  interface.\nThe swapExactOutputSingle  function is for performing exact output  swaps, which swap a minimum possible amount of one token for a fixed amount of another token. This function uses\nthe ExactOutputSingleParams  struct and the exactOutputSingle  function from the ISwapRouter  interface.", "metadata": {"page_number": 777, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e5cc99a61402", "text": "the ExactOutputSingleParams  struct and the exactOutputSingle  function from the ISwapRouter  interface.\nFor simplification, the example hardcodes the token contract addresses, but as explained further below the contract could be modified to change pools and tokens on a per transaction basis.\nWhen trading from a smart contract, the most important thing to keep in mind is that access to an external price source is required. Without this, trades can be frontrun for considerable loss.\nNote:  The swap examples are not production ready code, and are implemented in a simplistic manner for the purpose of learning.\nSet Up the Contract  \nDeclare the solidity version used to compile the contract, and abicoder v2  to allow arbitrary nested arrays and structs to be encoded and decoded in calldata, a feature used when executing\na swap.\n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;", "metadata": {"page_number": 777, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "facdf08f2a1c", "text": "a swap.\n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nCopy\nImport the two relevant contracts from the npm package installation\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nCopy\nCreate a contract called SwapExamples , and declare an immutable public variable swapRouter  of type ISwapRouter . This allows us to call functions in the ISwapRouter  interface.\ncontract  SwapExamples  {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.", "metadata": {"page_number": 777, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "65e215849833", "text": "// For the scope of these swap examples,\n    // we will detail the design considerations when using `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n    // It should be noted that for the sake of these examples we pass in the swap router as a constructor argument instead of inheriting it.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n    ISwapRouter public immutable swapRouter ;\nCopy", "metadata": {"page_number": 777, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fbfad4f06c61", "text": "Hardcode the token contract addresses and pool fee tiers for the example. In production, you would likely use an input parameter for this and pass the input into a memory variable,\nallowing the contract to change the pools and tokens it interacts with on a per transaction basis, but for conceptual simplicity , we are hardcoding them here.\n    address public constant  DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;\n    address public constant  WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 ;\n    address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant  poolFee = 3000;", "metadata": {"page_number": 778, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8a0ce8f83e0c", "text": "// For this example, we will set the pool fee to 0.3%.\n    uint24 public constant  poolFee = 3000;\n    constructor (ISwapRouter _swapRouter ) {\n        swapRouter = _swapRouter ;\n    }\nCopy\nExact Input Swaps  \nThe caller must approve  the contract to withdraw the tokens from the calling address's account to execute a swap. Remember that because our contract is a contract itself and not an\nextension of the caller (us); we must also approve the Uniswap protocol router contract to use the tokens that our contract will be in possession of after they have been withdrawn from the\ncalling address (us).\nThen, transfer the amount  of Dai from the calling address into our contract, and use amount  as the value passed to the second approve .\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9", "metadata": {"page_number": 778, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "29ffa9dd1290", "text": "Then, transfer the amount  of Dai from the calling address into our contract, and use amount  as the value passed to the second approve .\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function  swapExactInputSingle (uint256 amountIn ) external  returns (uint256 amountOut ) {\n        // msg.sender must approve this contract\n        // Transfer the specified amount of DAI to this contract.", "metadata": {"page_number": 778, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "986b393b1c51", "text": "function  swapExactInputSingle (uint256 amountIn ) external  returns (uint256 amountOut ) {\n        // msg.sender must approve this contract\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountIn );\n        // Approve the router to spend DAI.\n        TransferHelper .safeApprove (DAI, address(swapRouter ), amountIn );\nCopy\nSwap Input Parameters \nTo execute the swap function, we need to populate the ExactInputSingleParams  with the necessary swap data. These parameters are found in the smart contract interfaces, which can be\nbrowsed here.\nA brief overview of the parameters:\ntokenIn  The contract address of the inbound token\ntokenOut  The contract address of the outbound token", "metadata": {"page_number": 778, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "913cab9abdcc", "text": "browsed here.\nA brief overview of the parameters:\ntokenIn  The contract address of the inbound token\ntokenOut  The contract address of the outbound token\nfee The fee tier of the pool, used to determine the correct pool contract in which to execute the swap\nrecipient  the destination address of the outbound token\ndeadline : the unix time after which a swap will fail, to protect against long-pending transactions and wild swings in prices\namountOutMinimum : we are setting to zero, but this is a significant risk in production. For a real deployment, this value should be calculated using our SDK or an onchain price oracle\n- this helps protect against getting an unusually bad price for a trade due to a front running sandwich or another type of price manipulation\nsqrtPriceLimitX96 : We set this to zero - which makes this parameter inactive. In production, this value can be used to set the limit for the price the swap will push the pool to,", "metadata": {"page_number": 778, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "339c0a37a9f8", "text": "sqrtPriceLimitX96 : We set this to zero - which makes this parameter inactive. In production, this value can be used to set the limit for the price the swap will push the pool to,\nwhich can help protect against price impact or for setting up logic in a variety of price-relevant mechanisms.\nCall the function \n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter .ExactInputSingleParams memory params =\n            ISwapRouter .ExactInputSingleParams ({\n                tokenIn : DAI,\n                tokenOut : WETH9,\n                fee : poolFee ,\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountIn : amountIn ,", "metadata": {"page_number": 778, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "59be226fa117", "text": "tokenIn : DAI,\n                tokenOut : WETH9,\n                fee : poolFee ,\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountIn : amountIn ,\n                amountOutMinimum : 0,\n                sqrtPriceLimitX96 : 0\n            });\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter .exactInputSingle (params);\n    }\nCopy\nExact Output Swaps  \nExact Output swaps a minimum possible amount of the input token for a fixed amount of the outbound token. This is the less common swap style - but useful in a variety of circumstances.\nBecause this example transfers in the inbound asset in anticipation of the swap - its possible that some of the inbound token will be left over after the swap is executed, which is why we", "metadata": {"page_number": 778, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "76c0da7bb364", "text": "Because this example transfers in the inbound asset in anticipation of the swap - its possible that some of the inbound token will be left over after the swap is executed, which is why we\npay it back to the calling address at the end of the swap.\nCall the function \n/// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n/// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n/// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n/// @param amountOut The exact amount of WETH9 to receive from the swap.\n/// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.", "metadata": {"page_number": 778, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9b601a656c74", "text": "/// @return amountIn The amount of DAI actually spent in the swap.\nfunction  swapExactOutputSingle (uint256 amountOut , uint256 amountInMaximum ) external  returns (uint256 amountIn ) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountInMaximum );\n        // Approve the router to spend the specified `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to achieve a better swap.\n        TransferHelper .safeApprove (DAI, address(swapRouter ), amountInMaximum );\n        ISwapRouter .ExactOutputSingleParams memory params =\n            ISwapRouter .ExactOutputSingleParams ({\n                tokenIn : DAI,\n                tokenOut : WETH9,", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a013ff4f2592", "text": "ISwapRouter .ExactOutputSingleParams memory params =\n            ISwapRouter .ExactOutputSingleParams ({\n                tokenIn : DAI,\n                tokenOut : WETH9,\n                fee : poolFee ,\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountOut : amountOut ,\n                amountInMaximum : amountInMaximum ,\n                sqrtPriceLimitX96 : 0\n            });\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter .exactOutputSingle (params);\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spen", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a16e0b76ed94", "text": "// For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spen\n        if (amountIn < amountInMaximum ) {\n            TransferHelper .safeApprove (DAI, address(swapRouter ), 0);\n            TransferHelper .safeTransfer (DAI, msg.sender, amountInMaximum - amountIn );\n        }\n    }\nCopy\nA Complete Single Swap Contract  \n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "51f6171b2145", "text": "pragma solidity  =0.7.6;\npragma abicoder v2 ;\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol' ;\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol' ;\ncontract  SwapExamples  {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n    ISwapRouter public immutable swapRouter ;", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e7daa9d87d06", "text": "// More advanced example contracts will detail how to inherit the swap router safely.\n    ISwapRouter public immutable swapRouter ;\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n    address public constant  DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;\n    address public constant  WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 ;\n    address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant  poolFee = 3000;\n    constructor (ISwapRouter _swapRouter ) {", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a694c667c7fa", "text": "// For this example, we will set the pool fee to 0.3%.\n    uint24 public constant  poolFee = 3000;\n    constructor (ISwapRouter _swapRouter ) {\n        swapRouter = _swapRouter ;\n    }\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function  swapExactInputSingle (uint256 amountIn ) external  returns (uint256 amountOut ) {", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bf5f58371c23", "text": "/// @return amountOut The amount of WETH9 received.\n    function  swapExactInputSingle (uint256 amountIn ) external  returns (uint256 amountOut ) {\n        // msg.sender must approve this contract\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountIn );\n        // Approve the router to spend DAI.\n        TransferHelper .safeApprove (DAI, address(swapRouter ), amountIn );\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter .ExactInputSingleParams memory params =\n            ISwapRouter .ExactInputSingleParams ({", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "abd1ff0d5b3a", "text": "ISwapRouter .ExactInputSingleParams memory params =\n            ISwapRouter .ExactInputSingleParams ({\n                tokenIn : DAI,\n                tokenOut : WETH9,\n                fee : poolFee ,\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountIn : amountIn ,\n                amountOutMinimum : 0,\n                sqrtPriceLimitX96 : 0\n            });\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter .exactInputSingle (params);\n    }\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8221f374a863", "text": "/// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.", "metadata": {"page_number": 779, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3d34e20a08e7", "text": "/// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n    /// @return amountIn The amount of DAI actually spent in the swap.\n    function  swapExactOutputSingle (uint256 amountOut , uint256 amountInMaximum ) external  returns (uint256 amountIn ) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amountInMaximum );\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper .safeApprove (DAI, address(swapRouter ), amountInMaximum );\n        ISwapRouter .ExactOutputSingleParams memory params =", "metadata": {"page_number": 780, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "594a443942c8", "text": "TransferHelper .safeApprove (DAI, address(swapRouter ), amountInMaximum );\n        ISwapRouter .ExactOutputSingleParams memory params =\n            ISwapRouter .ExactOutputSingleParams ({\n                tokenIn : DAI,\n                tokenOut : WETH9,\n                fee : poolFee ,\n                recipient : msg.sender,\n                deadline : block.timestamp ,\n                amountOut : amountOut ,\n                amountInMaximum : amountInMaximum ,\n                sqrtPriceLimitX96 : 0\n            });\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter .exactOutputSingle (params);\n        // For exact output swaps, the amountInMaximum may not have all been spent.", "metadata": {"page_number": 780, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "df116492df89", "text": "amountIn = swapRouter .exactOutputSingle (params);\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spen\n        if (amountIn < amountInMaximum ) {\n            TransferHelper .safeApprove (DAI, address(swapRouter ), 0);\n            TransferHelper .safeTransfer (DAI, msg.sender, amountInMaximum - amountIn );\n        }\n    }\n}\nCopy\nEdit this page\nHelpful?\nPrevious\nSet Up Your Local Environment\nNext\nMultihop Swaps\nSet Up the Contract\nExact Input Swaps\nSwap Input Parameters\nCall the function\nExact Output Swaps", "metadata": {"page_number": 780, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1ef576e83bd6", "text": "Previous\nSet Up Your Local Environment\nNext\nMultihop Swaps\nSet Up the Contract\nExact Input Swaps\nSwap Input Parameters\nCall the function\nExact Output Swaps\nCall the function\nA Complete Single Swap Contract\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 780, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e1b6faf955f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nHow Uniswap works\nEcosystem Participants\nSmart contracts\nGlossary\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000", "metadata": {"page_number": 781, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "500812573a8e", "text": "Core Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nProtocol Overview\nSmart contractsHelpful?\nOn this page\nSmart contracts\nUniswap V2 is a binary smart contract system. Core  contracts provide fundamental safety guarantees for all parties\ninteracting with Uniswap. Periphery  contracts interact with one or more core contracts but are not themselves part of the\ncore.", "metadata": {"page_number": 781, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "02ba2d3ca0b7", "text": "Core\nSource code\nThe core consists of a singleton factory  and many pairs , which the factory is responsible for creating and indexing. These\ncontracts are quite minimal, even brutalist. The simple rationale for this is that contracts with a smaller surface area are\neasier to reason about, less bug-prone, and more functionally elegant. Perhaps the biggest upside of this design is that many\ndesired properties of the system can be asserted directly in the code, leaving little room for error . One downside, however , is\nthat core contracts are somewhat user -unfriendly . In fact, interacting directly with these contracts is not recommended for\nmost use cases. Instead, a periphery contract should be used.\nFactory  \nReference documentation\nThe factory holds the generic bytecode responsible for powering pairs. Its primary job is to create one and only one smart\ncontract per unique token pair . It also contains logic to turn on the protocol char ge.\nPairs  \nReference documentation\nReference documentation (ERC-20)", "metadata": {"page_number": 782, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "03302c76e7fa", "text": "contract per unique token pair . It also contains logic to turn on the protocol char ge.\nPairs  \nReference documentation\nReference documentation (ERC-20)\nPairs have two primary purposes: serving as automated market makers and keeping track of pool token balances. They also\nexpose data which can be used to build decentralized price oracles.\nPeriphery\nSource code\nThe periphery is a constellation of smart contracts designed to support domain-specific interactions with the core. Because\nof Uniswap's permissionless nature, the contracts described below have no special privileges, and are in fact only a small\nsubset of the universe of possible periphery-like contracts. However , they are useful examples of how to safely and\nefficiently interact with Uniswap V2.\nLibrary  \nReference documentation\nThe library provides a variety of convenience functions for fetching data and pricing.\nRouter  \nReference documentation", "metadata": {"page_number": 782, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2bba6fbf2c22", "text": "efficiently interact with Uniswap V2.\nLibrary  \nReference documentation\nThe library provides a variety of convenience functions for fetching data and pricing.\nRouter  \nReference documentation\nThe router , which uses the library , fully supports all the basic requirements of a front-end of fering trading and liquidity\nmanagement functionality . Notably , it natively supports multi-pair trades (e.g. x to y to z), treats ETH as a first-class citizen,\nand of fers meta-transactions for removing liquidity .\nDesign Decisions\nThe following sections describe some of the notable design decisions made in Uniswap V2. These are safe to skip unless\nyou're interested in gaining a deep technical understanding of how V2 works under the hood, or writing smart contract", "metadata": {"page_number": 782, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f0730933d89f", "text": "integrations!\nSending Tokens  \nTypically , smart contracts which need tokens to perform some functionality require would-be interactors to first make an\napproval on the token contract, then call a function that in turn calls transferFrom on the token contract. This is not how V2\npairs accept tokens. Instead, pairs check their token balances at the end of every interaction. Then, at the beginning of the\nnext interaction, current balances are dif ferenced against the stored values to determine the amount of tokens that were sent\nby the current interactor . See the whitepaper  for a justification of why this is the case, but the takeaway is that tokens must\nbe transferr ed to the pair  befor e calling any token-r equiring method  (the one exception to this rule is Flash Swaps .\nWETH  \nUnlike Uniswap V1 pools, V2 pairs do not support ETH directly , so ETH \u21c4ERC-20 pairs must be emulated with WETH.", "metadata": {"page_number": 783, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e762b3fc82d", "text": "WETH  \nUnlike Uniswap V1 pools, V2 pairs do not support ETH directly , so ETH \u21c4ERC-20 pairs must be emulated with WETH.\nThe motivation behind this choice was to remove ETH-specific code in the core, resulting in a leaner codebase. End users\ncan be kept fully ignorant of this implementation detail, however , by simply wrapping/unwrapping ETH in the periphery .\nThe router fully supports interacting with any WETH pair via ETH.\nMinimum Liquidity  \nTo ameliorate rounding errors and increase the theoretical minimum tick size for liquidity provision, pairs burn the first\nMINIMUM_LIQUIDITY  pool tokens. For the vast majority of pairs, this will represent a trivial value. The burning happens\nautomatically during the first liquidity provision, after which point the totalSupply  is forevermore bounded.\nEdit this page\nHelpful?\nPrevious\nEcosystem Participants\nNext\nGlossary\nFactory\nPairs", "metadata": {"page_number": 783, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6f1e00952190", "text": "Edit this page\nHelpful?\nPrevious\nEcosystem Participants\nNext\nGlossary\nFactory\nPairs\nLibrary\nRouter\nSending Tokens\nWETH\nMinimum Liquidity\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 783, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1f11aa739f86", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 784, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4aa14f5370e7", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 785, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c27b8d54bb2a", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 785, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "576fa25873db", "text": "classes\nSqrtPriceMath\nOn this page\nSqrtPriceMath\n@uniswap/v3-sdk  / Exports  / SqrtPriceMath\nClass: SqrtPriceMath\nTable of contents  \nConstructors \nconstructor\nMethods \ngetAmount0Delta\ngetAmount1Delta\ngetNextSqrtPriceFromAmount0RoundingUp\ngetNextSqrtPriceFromAmount1RoundingDown\ngetNextSqrtPriceFromInput\ngetNextSqrtPriceFromOutput\nConstructors  \nconstructor \n\u2022 Private  new SqrtPriceMath ()\nCannot be constructed.\nDefined in  \nutils/sqrtPriceMath.ts:23\nMethods  \ngetAmount0Delta", "metadata": {"page_number": 786, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4ff7d35d6bcf", "text": "\u2022 Private  new SqrtPriceMath ()\nCannot be constructed.\nDefined in  \nutils/sqrtPriceMath.ts:23\nMethods  \ngetAmount0Delta \n\u25b8 Static  getAmount0Delta (sqrtRatioAX96 , sqrtRatioBX96 , liquidity , roundUp ): default\nParameters  \nName Type\nsqrtRatioAX96 default\nsqrtRatioBX96 default\nliquidity default\nroundUp boolean", "metadata": {"page_number": 786, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6844fde5c639", "text": "Returns  \ndefault\nDefined in  \nutils/sqrtPriceMath.ts:25\ngetAmount1Delta \n\u25b8 Static  getAmount1Delta (sqrtRatioAX96 , sqrtRatioBX96 , liquidity , roundUp ): default\nParameters  \nName Type\nsqrtRatioAX96 default\nsqrtRatioBX96 default\nliquidity default\nroundUp boolean\nReturns  \ndefault\nDefined in  \nutils/sqrtPriceMath.ts:38\ngetNextSqrtPriceFromAmount0RoundingUp \n\u25b8 Static  Private  getNextSqrtPriceFr omAmount0RoundingUp (sqrtPX96 , liquidity , amount , add): default\nParameters  \nName Type\nsqrtPX96 default\nliquidity default", "metadata": {"page_number": 787, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c3df17e2e80c", "text": "Parameters  \nName Type\nsqrtPX96 default\nliquidity default\namount default\nadd boolean\nReturns  \ndefault\nDefined in  \nutils/sqrtPriceMath.ts:71\ngetNextSqrtPriceFromAmount1RoundingDown", "metadata": {"page_number": 787, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d660726f8d6d", "text": "\u25b8 Static  Private  getNextSqrtPriceFr omAmount1RoundingDown (sqrtPX96 , liquidity , amount , add): default\nParameters  \nName Type\nsqrtPX96 default\nliquidity default\namount default\nadd boolean\nReturns  \ndefault\nDefined in  \nutils/sqrtPriceMath.ts:100\ngetNextSqrtPriceFromInput \n\u25b8 Static  getNextSqrtPriceFr omInput (sqrtPX96 , liquidity , amountIn , zeroForOne ): default\nParameters  \nName Type\nsqrtPX96 default\nliquidity default\namountIn default\nzeroForOne boolean\nReturns  \ndefault\nDefined in  \nutils/sqrtPriceMath.ts:48", "metadata": {"page_number": 788, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9d52e5daa5cb", "text": "liquidity default\namountIn default\nzeroForOne boolean\nReturns  \ndefault\nDefined in  \nutils/sqrtPriceMath.ts:48\ngetNextSqrtPriceFromOutput \n\u25b8 Static  getNextSqrtPriceFr omOutput (sqrtPX96 , liquidity , amountOut , zeroForOne ): default\nParameters  \nName Type\nsqrtPX96 default\nliquidity default\namountOut default\nzeroForOne boolean", "metadata": {"page_number": 788, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6de0f869ef73", "text": "Returns  \ndefault\nDefined in  \nutils/sqrtPriceMath.ts:57\nEdit this page\nHelpful?\nPrevious\nSelfPermit\nNext\nStaker\nTable of contents\nConstructors\nMethods\nConstructors\nconstructor\nMethods\ngetAmount0Delta\ngetAmount1Delta\ngetNextSqrtPriceFromAmount0RoundingUp\ngetNextSqrtPriceFromAmount1RoundingDown\ngetNextSqrtPriceFromInput\ngetNextSqrtPriceFromOutput\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 789, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b57e3f10581d", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 789, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d97a2f699fd", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 790, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c4308b680b97", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 790, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1426145bc7fb", "text": "classes\nStaker\nOn this page\nStaker\n@uniswap/v3-sdk  / Exports  / Staker\nClass: Staker\nTable of contents  \nConstructors \nconstructor\nProperties \nINCENTIVE _KEY _ABI\nINTERF ACE\nMethods \n_encodeIncentiveKey\ncollectRewards\nencodeClaim\nencodeDeposit\nwithdrawT oken\nConstructors  \nconstructor \n\u2022 Protected  new Staker ()\nDefined in  \nstaker .ts:72\nProperties  \nINCENTIVE_KEY_ABI \n\u25aa Static  Private  INCENTIVE _KEY _ABI: string  = 'tuple(address rewardToken, address pool, uint256\nstartTime, uint256 endTime, address refundee)'\nDefined in", "metadata": {"page_number": 791, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3dafd0dcadfe", "text": "\u25aa Static  Private  INCENTIVE _KEY _ABI: string  = 'tuple(address rewardToken, address pool, uint256\nstartTime, uint256 endTime, address refundee)'\nDefined in  \nstaker .ts:73", "metadata": {"page_number": 791, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "29994cdbe3d3", "text": "INTERFACE \n\u25aa Static  INTERF ACE : Interface\nDefined in  \nstaker .ts:70\nMethods  \n_encodeIncentiveKey \n\u25b8 Static  Private  _encodeIncentiveKey (incentiveKey ): Object\nParameters  \nName Type Description\nincentiveKey IncentiveKey An IncentiveKey  which represents a unique staking program.\nReturns  \nObject\nAn encoded IncentiveKey to be read by ethers\nDefined in  \nstaker .ts:194\ncollectRewards \n\u25b8 Static  collectRewards (incentiveKeys , options ): MethodParameters\nNote: A tokenId  can be staked in many programs but to claim rewards and continue the program you must unstake, claim,\nand then restake.\nParameters  \nName Type Description\nincentiveKeysIncentiveKey  |", "metadata": {"page_number": 792, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0a607a5ba241", "text": "Note: A tokenId  can be staked in many programs but to claim rewards and continue the program you must unstake, claim,\nand then restake.\nParameters  \nName Type Description\nincentiveKeysIncentiveKey  |\nIncentiveKey []An IncentiveKey or array of IncentiveKeys that tokenId  is staked in. Input an array\nof IncentiveKeys to claim rewards for each program.\noptions ClaimOptionsClaimOptions to specify tokenId, recipient, and amount wanting to collect. Note that\nyou can only specify one amount and one recipient across the various programs if\nyou are collecting from multiple programs at once.\nReturns  \nMethodParameters\nDefined in  \nstaker .ts:107", "metadata": {"page_number": 792, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6b6c0876444b", "text": "encodeClaim \n\u25b8 Static  Private  encodeClaim (incentiveKey , options ): string []\nTo claim rewards, must unstake and then claim.\nParameters  \nName Type Description\nincentiveKey IncentiveKey The unique identifier of a staking program.\noptions ClaimOptions Options for producing the calldata to claim. Can't claim unless you unstake.\nReturns  \nstring []\nThe calldatas for 'unstakeT oken' and 'claimReward'.\nDefined in  \nstaker .ts:82\nencodeDeposit \n\u25b8 Static  encodeDeposit (incentiveKeys ): string\nParameters  \nName Type Description\nincentiveKeysIncentiveKey  |\nIncentiveKey []A single IncentiveKey or array of IncentiveKeys to be encoded and used in the\ndata parameter in safeTransferFrom\nReturns  \nstring", "metadata": {"page_number": 793, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3690335d623d", "text": "Name Type Description\nincentiveKeysIncentiveKey  |\nIncentiveKey []A single IncentiveKey or array of IncentiveKeys to be encoded and used in the\ndata parameter in safeTransferFrom\nReturns  \nstring\nAn IncentiveKey as a string\nDefined in  \nstaker .ts:173\nwithdrawToken \n\u25b8 Static  withdrawT oken (incentiveKeys , withdrawOptions ): MethodParameters\nParameters", "metadata": {"page_number": 793, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "85fc3f5f1ec5", "text": "Name Type Description\nincentiveKeysIncentiveKey  |\nIncentiveKey []A list of incentiveKeys to unstake from. Should include all incentiveKeys\n(unique staking programs) that options.tokenId  is staked in.\nwithdrawOptions FullWithdrawOptionsOptions for producing claim calldata and withdraw calldata. Can't withdraw\nwithout unstaking all programs for tokenId .\nReturns  \nMethodParameters\nCalldata for unstaking, claiming, and withdrawing.\nDefined in  \nstaker .ts:136\nEdit this page\nHelpful?\nPrevious\nSqrtPriceMath\nNext\nSwapMath\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nINCENTIVE_KEY_ABI\nINTERF ACE\nMethods", "metadata": {"page_number": 794, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "44004d4708a3", "text": "Table of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nINCENTIVE_KEY_ABI\nINTERF ACE\nMethods\n_encodeIncentiveKey\ncollectRewards\nencodeClaim\nencodeDeposit\nwithdrawT oken\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 794, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "efbda0ecf807", "text": "Analytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 795, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ffd2a0155a36", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 796, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b7a71c47f77d", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nStandardPermitAr gumentsHelpful?", "metadata": {"page_number": 796, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a7ea0b7fa9f5", "text": "On this page\nStandardPermitArguments\n@uniswap/v3-sdk  / Exports  / StandardPermitAr guments\nInterface: StandardPermitArguments\nTable of contents  \nProperties \namount\ndeadline\nr\ns\nv\nProperties  \namount \n\u2022 amount : BigintIsh\nDefined in  \nselfPermit.ts:10\ndeadline \n\u2022 deadline : BigintIsh\nDefined in  \nselfPermit.ts:1 1\nr \n\u2022 r: string\nDefined in  \nselfPermit.ts:8\ns \n\u2022 s: string\nDefined in", "metadata": {"page_number": 797, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "082a455b23f9", "text": "selfPermit.ts:9\nv \n\u2022 v: 0 | 1 | 27 | 28\nDefined in  \nselfPermit.ts:7\nEdit this page\nHelpful?\nPrevious\nSafeT ransferOptions\nNext\nSwapOptions\nTable of contents\nProperties\nProperties\namount\ndeadline\nr\ns\nv\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 798, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae38ce30eeee", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 798, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2e860923fb59", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nenums\nRounding\nSupportedChainId\nTradeT ype\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nenums\nSupportedChainIdHelpful?\nOn this page\nSupportedChainId", "metadata": {"page_number": 800, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7e3689d84414", "text": "V2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nenums\nSupportedChainIdHelpful?\nOn this page\nSupportedChainId\n@uniswap/sdk-core  / Exports  / SupportedChainId\nEnumeration: SupportedChainId\nTable of contents  \nEnumeration Members \nARBITRUM _ONE", "metadata": {"page_number": 800, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1b7464a4845a", "text": "ARBITRUM _RINKEBY\nCELO\nCELO _ALFAJORES\nGOERLI\nKOV AN\nMAINNET\nOPTIMISM\nOPTIMISM _GOERLI\nPOLYGON\nPOLYGON _MUMBAI\nRINKEBY\nROPSTEN\nEnumeration Members  \nARBITRUM_ONE \n\u2022 ARBITRUM _ONE  = 42161\nDefined in  \nconstants.ts:10\nARBITRUM_RINKEBY \n\u2022 ARBITRUM _RINKEBY  = 421611\nDefined in  \nconstants.ts:1 1\nCELO \n\u2022 CELO  = 42220\nDefined in  \nconstants.ts:19\nCELO_ALFAJORES \n\u2022 CELO _ALF AJORES  = 44787\nDefined in  \nconstants.ts:20", "metadata": {"page_number": 801, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d4f59ba53356", "text": "Defined in  \nconstants.ts:19\nCELO_ALFAJORES \n\u2022 CELO _ALF AJORES  = 44787\nDefined in  \nconstants.ts:20\nGOERLI \n\u2022 GOERLI  = 5", "metadata": {"page_number": 801, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "df5cd5d35c9f", "text": "Defined in  \nconstants.ts:7\nKOVAN \n\u2022 KOV AN = 42\nDefined in  \nconstants.ts:8\nMAINNET \n\u2022 MAINNET  = 1\nDefined in  \nconstants.ts:4\nOPTIMISM \n\u2022 OPTIMISM  = 10\nDefined in  \nconstants.ts:13\nOPTIMISM_GOERLI \n\u2022 OPTIMISM _GOERLI  = 420\nDefined in  \nconstants.ts:14\nPOLYGON \n\u2022 POL YGON  = 137\nDefined in  \nconstants.ts:16\nPOLYGON_MUMBAI \n\u2022 POL YGON _MUMBAI  = 80001", "metadata": {"page_number": 802, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "28c92bba0fea", "text": "Defined in  \nconstants.ts:17\nRINKEBY \n\u2022 RINKEBY  = 4\nDefined in  \nconstants.ts:6\nROPSTEN \n\u2022 ROPSTEN  = 3\nDefined in  \nconstants.ts:5\nEdit this page\nHelpful?\nPrevious\nRounding\nNext\nTradeT ype\nTable of contents\nEnumeration Members\nEnumeration Members\nARBITRUM_ONE\nARBITRUM_RINKEBY\nCELO\nCELO_ALF AJORES\nGOERLI\nKOV AN\nMAINNET\nOPTIMISM\nOPTIMISM_GOERLI\nPOLYGON\nPOLYGON_MUMBAI\nRINKEBY\nROPSTEN\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 803, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d554ed08392e", "text": "MAINNET\nOPTIMISM\nOPTIMISM_GOERLI\nPOLYGON\nPOLYGON_MUMBAI\nRINKEBY\nROPSTEN\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 803, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2ac10fa28ef4", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 804, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a8ea5a99389b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nSmart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance", "metadata": {"page_number": 805, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "675eee04a770", "text": "Smart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides\nSmart Contract Integration\nSupporting meta transactionsHelpful?\nOn this page\nSupporting meta transactions", "metadata": {"page_number": 805, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dffaca7a4770", "text": "All Uniswap V2 pool tokens support meta-transaction approvals via the permit  function. This obviates the need for a\nblocking approve transaction before programmatic interactions with pool tokens can occur .\nERC-712\nIn vanilla ERC-20 token contracts, owners may only register approvals by directly calling a function which uses\nmsg.sender  to permission itself. With meta-approvals, ownership and permissioning are derived from a signature passed\ninto the function by the caller (sometimes referred to as the relayer). Because signing data with Ethereum private keys can\nbe a tricky endeavor , Uniswap V2 relies on ERC-712 , a signature standard with widespread community support, to ensure\nuser safety and wallet compatibility .\nDomain Separator  \nkeccak256 (\n  abi.encode(\n    keccak256 ('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)' ),", "metadata": {"page_number": 806, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bb2711944440", "text": "keccak256 (\n  abi.encode(\n    keccak256 ('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)' ),\n    keccak256 (bytes(name)),\n    keccak256 (bytes('1')),\n    chainId ,\n    address(this)\n  )\n);\nCopy\nname  is always Uniswap V2 , see name .\nchainId  is determined from the ERC-1344  chainid  opcode.\naddress(this)  is the address of the pair , see Pair Addresses .\nPermit Typehash  \nkeccak256 ('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)' );`\nCopy\nEdit this page\nHelpful?\nPrevious", "metadata": {"page_number": 806, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "39c5314f0015", "text": "keccak256 ('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)' );`\nCopy\nEdit this page\nHelpful?\nPrevious\nPair Addresses\nNext\nAPI Overview\nDomain Separator\nPermit Typehash\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 806, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bc303aba35b2", "text": "Ecosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 807, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "72209a7a9e92", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nMinting a Position\nAdding & Removing Liquidity\nCollecting Fees\nSwapping and Adding Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nGuides\nPooling Liquidity\nSwapping and Adding LiquidityHelpful?\nOn this page\nSwapping and Adding Liquidity\nIntroduction", "metadata": {"page_number": 808, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "935f21a17798", "text": "\u0000\nV3 SDK\nGuides\nPooling Liquidity\nSwapping and Adding LiquidityHelpful?\nOn this page\nSwapping and Adding Liquidity\nIntroduction  \nThis guide will cover how to execute a swap-and-add operation in a single atomic transaction. It is based on the swap-and-\nadd example , found in the Uniswap code examples repository . To run this example, check out the examples's README  and\nfollow the setup instructions.\ninfo\nIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository , please visit\nour background  page!\nWhen adding liquidity to a Uniswap v3 pool, you must provide two assets in a particular ratio. In many cases, your contract\nor the user's wallet hold a dif ferent ratio of those two assets. In order to deposit 100% of your assets, you must first swap", "metadata": {"page_number": 808, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c105d2c8fe69", "text": "or the user's wallet hold a dif ferent ratio of those two assets. In order to deposit 100% of your assets, you must first swap\nyour assets to the optimal ratio and then add liquidity .", "metadata": {"page_number": 808, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46c8ff101663", "text": "However , the swap may shift the balance of the pool and thus change the optimal ratio. To avoid that, we can execute this\nswap-and-add liquidity operation in an atomic fashion, using a router . The inputs to our guide are the two tokens  that we are\npooling for , the amount  of each token we are pooling for , the amount  of each token to swap-and-add, and the Pool fee.\nThe guide will cover :\n1. Setup a router instance\n2. Configuring our ratio calculation\n3. Calculating our currency ratio\n4. Constructing and executing our swap-and-add transaction\nAt the end of the guide, given the inputs above, we should be able swap-and-add liquidity using 100% of the input assets\nwith the press of a button and see the change reflected in our position and the balance of our tokens.\nFor this guide, the following Uniswap packages are used:\n@uniswap/v3-sdk", "metadata": {"page_number": 809, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ec16be4e8c78", "text": "with the press of a button and see the change reflected in our position and the balance of our tokens.\nFor this guide, the following Uniswap packages are used:\n@uniswap/v3-sdk\n@uniswap/sdk-core\n@uniswap/smart-order-router\nThe core code of this guide can be found in swapAndAddLiquidity() .\nnote\nThis guide assumes you are familiar with our Minting a Position  guide. A minted position is required to add or remove\nliquidity from, so the buttons will be disabled until a position is minted.\nAlso note that we do not need to give approval to the NonfungiblePositionManager  to transfer our tokens as we will have\nalready done that when minting our position.\nSetup a r outer  instance  \nThe first step is to approve the SwapRouter  smart contract to spend our tokens for us in order for us to add liquidity to our", "metadata": {"page_number": 809, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eb0eb6506c0d", "text": "already done that when minting our position.\nSetup a r outer  instance  \nThe first step is to approve the SwapRouter  smart contract to spend our tokens for us in order for us to add liquidity to our\nposition:\nApprove SwapRouter to spend our tokens\nloading...\nCopy\nView on Github\nThe we can setup our router , the AlphaRouter , which is part of the smart-order -router package . The router requires a\nchainId  and a provider  to be initialized. Note that routing is not supported for local forks, so we will use a mainnet\nprovider even when swapping on a local fork:\nCreating a router instance\nloading...\nCopy\nView on Github\nFor a more detailed example, check out our routing guide .\nConfiguring our  ratio calculation", "metadata": {"page_number": 809, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1fd590bff86c", "text": "Creating a router instance\nloading...\nCopy\nView on Github\nFor a more detailed example, check out our routing guide .\nConfiguring our  ratio calculation  \nHaving created the router , we now need to construct the parameters required to make a call to its routeToRatio  function,\nwhich will ensure the ratio of currency used matches the pool's required ratio to add our total liquidity . This will require the", "metadata": {"page_number": 809, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6474aa99ad55", "text": "following parameters:\nThe first two parameters are the currency amounts we use as input to the routeToRatio  algorithm:\nConstructing the two CurrencyAmounts\nloading...\nCopy\nView on Github\nNext, we will create a placeholder position with a liquidity of 1 since liquidity is still unknown and will be set inside the call\nto routeToRatio :\nConstructing the position object\nloading...\nCopy\nView on Github\nWe then need to create an instance of SwapAndAddConfig  which will set additional configuration parameters for the\nrouteToRatio  algorithm:\nratioErrorTolerance  determines the mar gin of error the resulting ratio can have from the optimal ratio.\nmaxIterations  determines the maximum times the algorithm will iterate to find a ratio within error tolerance. If max\niterations is exceeded, an error is returned. The benefit of running the algorithm more times is that we have more", "metadata": {"page_number": 810, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "58dd9b76bbae", "text": "maxIterations  determines the maximum times the algorithm will iterate to find a ratio within error tolerance. If max\niterations is exceeded, an error is returned. The benefit of running the algorithm more times is that we have more\nchances to find a route, but more iterations will longer to execute. We've used a default of 6 in our example.\nConstructing SwapAndAddConfig\nloading...\nCopy\nView on Github\nFinally , we will create an instance of SwapAndAddOptions  to configure which position we are adding liquidity to and our\ndefined swapping parameters in two dif ferent objects:\nswapConfig  configures the recipient  of leftover dust from swap, slippageTolerance  and a deadline  for the swap.\naddLiquidityOptions  must contain a tokenId  to add to an existing position\nConstructing SwapAndAddOptions\nloading...\nCopy\nView on Github", "metadata": {"page_number": 810, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3890161efa21", "text": "addLiquidityOptions  must contain a tokenId  to add to an existing position\nConstructing SwapAndAddOptions\nloading...\nCopy\nView on Github\nCalculating our  curr ency ratio  \nHaving constructed all the parameters we need to call routeToRatio , we can now make the call to the function:\nMaking the call to routeT oRatio\nloading...\nCopy\nView on Github\nThe return type of the function call is SwapT oRatioResponse . If a route was found successfully , this object will have two\nfields: the status (success) and the SwapToRatioRoute  object. We check to make sure that both of those conditions hold true", "metadata": {"page_number": 810, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9224016eea9b", "text": "before we construct and submit the transaction:\nChecking that a route was found\nloading...\nCopy\nView on Github\nIn case a route was not found, we return from the function a Failed  state for the transaction.\nConstructing and executing our  swap-and-add transaction  \nAfter making sure that a route was successfully found, we can now construct and send the transaction. The response\n(SwapToRatioRoute ) will have the properties we need to construct our transaction object:\nConstructing and sending the transaction\nloading...\nCopy\nView on Github\nIf the transaction was successful, our swap-and-add will be completed! We should see our input token balances decrease and\nour position balance should be increased accordingly .\nEdit this page\nHelpful?\nPrevious\nCollecting Fees\nNext\nOverview\nIntroduction\nSetup a router instance", "metadata": {"page_number": 811, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "213021dcdc32", "text": "our position balance should be increased accordingly .\nEdit this page\nHelpful?\nPrevious\nCollecting Fees\nNext\nOverview\nIntroduction\nSetup a router instance\nConfiguring our ratio calculation\nCalculating our currency ratio\nConstructing and executing our swap-and-add transaction\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists", "metadata": {"page_number": 811, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "312a2b5d9d8e", "text": "Brand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 812, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a223f6b6f0e6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 825, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1b35c0f5a67c", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 825, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "61437f6b8527", "text": "classes\nSwapMath\nOn this page\nSwapMath\n@uniswap/v3-sdk  / Exports  / SwapMath\nClass: SwapMath\nTable of contents  \nConstructors \nconstructor\nMethods \ncomputeSwapStep\nConstructors  \nconstructor \n\u2022 Private  new SwapMath ()\nCannot be constructed.\nDefined in  \nutils/swapMath.ts:13\nMethods  \ncomputeSwapStep \n\u25b8 Static  computeSwapStep (sqrtRatioCurrentX96 , sqrtRatioTargetX96 , liquidity , amountRemaining , feePips ):\n[default , default , default , default ]\nParameters  \nName Type\nsqrtRatioCurrentX96 default\nsqrtRatioTargetX96 default", "metadata": {"page_number": 826, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0f459150ac12", "text": "[default , default , default , default ]\nParameters  \nName Type\nsqrtRatioCurrentX96 default\nsqrtRatioTargetX96 default\nliquidity default\namountRemaining default\nfeePips FeeAmount\nReturns", "metadata": {"page_number": 826, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0ff0dfa2a069", "text": "[default , default , default , default ]\nDefined in  \nutils/swapMath.ts:15\nEdit this page\nHelpful?\nPrevious\nStaker\nNext\nSwapQuoter\nTable of contents\nConstructors\nMethods\nConstructors\nconstructor\nMethods\ncomputeSwapStep\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 827, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6d65a4898299", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 827, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c64cdcef4092", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 828, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0720af9fad91", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nSwapOptionsHelpful?", "metadata": {"page_number": 828, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3db0d920dd73", "text": "On this page\nSwapOptions\n@uniswap/v3-sdk  / Exports  / SwapOptions\nInterface: SwapOptions\nOptions for producing the ar guments to send calls to the router .\nTable of contents  \nProperties \ndeadline\nfee\ninputT okenPermit\nrecipient\nslippageT olerance\nsqrtPriceLimitX96\nProperties  \ndeadline \n\u2022 deadline : BigintIsh\nWhen the transaction expires, in epoch seconds.\nDefined in  \nswapRouter .ts:30\nfee \n\u2022 Optional  fee: FeeOptions\nOptional information for taking a fee on output.\nDefined in  \nswapRouter .ts:45\ninputTokenPermit \n\u2022 Optional  inputT okenPermit : PermitOptions\nThe optional permit parameters for spending the input.", "metadata": {"page_number": 829, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "47d3df5aefdb", "text": "Defined in  \nswapRouter .ts:45\ninputTokenPermit \n\u2022 Optional  inputT okenPermit : PermitOptions\nThe optional permit parameters for spending the input.\nDefined in", "metadata": {"page_number": 829, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0f93d58dade", "text": "swapRouter .ts:35\nrecipient \n\u2022 recipient : string\nThe account that should receive the output.\nDefined in  \nswapRouter .ts:25\nslippageTolerance \n\u2022 slippageT olerance : Percent\nHow much the execution price is allowed to move unfavorably from the trade execution price.\nDefined in  \nswapRouter .ts:20\nsqrtPriceLimitX96 \n\u2022 Optional  sqrtPriceLimitX96 : BigintIsh\nThe optional price limit for the trade.\nDefined in  \nswapRouter .ts:40\nEdit this page\nHelpful?\nPrevious\nStandardPermitAr guments\nNext\nTickConstructorAr gs\nTable of contents\nProperties\nProperties\ndeadline\nfee\ninputT okenPermit", "metadata": {"page_number": 830, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "67d964621671", "text": "StandardPermitAr guments\nNext\nTickConstructorAr gs\nTable of contents\nProperties\nProperties\ndeadline\nfee\ninputT okenPermit\nrecipient\nslippageT olerance\nsqrtPriceLimitX96\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 830, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "38d2b74410c1", "text": "Whitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 831, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1875337a3357", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 832, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3ed4a103ba5a", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 832, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8a3a356fcf41", "text": "classes\nSwapQuoter\nOn this page\nSwapQuoter\n@uniswap/v3-sdk  / Exports  / SwapQuoter\nClass: SwapQuoter\nRepresents the Uniswap V3 QuoterV1 contract with a method for returning the formatted calldata needed to call the quoter\ncontract.\nTable of contents  \nConstructors \nconstructor\nProperties \nV1INTERF ACE\nV2INTERF ACE\nMethods \nquoteCallParameters\nConstructors  \nconstructor \n\u2022 new SwapQuoter ()\nProperties  \nV1INTERFACE \n\u25aa Static  V1INTERF ACE : Interface\nDefined in  \nquoter .ts:37\nV2INTERFACE \n\u25aa Static  V2INTERF ACE : Interface\nDefined in", "metadata": {"page_number": 833, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "21a0348fcb8a", "text": "quoter .ts:38\nMethods  \nquoteCallParameters \n\u25b8 Static  quoteCallParameters <TInput , TOutput >(route , amount , tradeType , options? ): MethodParameters\nProduces the on-chain method name of the appropriate function within QuoterV2, and the relevant hex encoded parameters.\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20\nTOutput extends Currency The output token, either Ether or an ERC-20\nParameters  \nName Type Description\nroute Route <TInput , TOutput > The swap route, a list of pools through which a swap can occur\namount CurrencyAmount <TInput  | TOutput >The amount of the quote, either an amount in, or an amount out\ntradeType TradeType The trade type, either exact input or exact output\noptions QuoteOptions The optional params including price limit and Quoter contract switch\nReturns", "metadata": {"page_number": 834, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "46ea4a502f7e", "text": "tradeType TradeType The trade type, either exact input or exact output\noptions QuoteOptions The optional params including price limit and Quoter contract switch\nReturns  \nMethodParameters\nThe formatted calldata\nDefined in  \nquoter .ts:51\nEdit this page\nHelpful?\nPrevious\nSwapMath\nNext\nSwapRouter\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nV1INTERF ACE\nV2INTERF ACE\nMethods\nquoteCallParameters\nDevelopers", "metadata": {"page_number": 834, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "955ea1d44789", "text": "Feedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 835, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e939be3a23bc", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 836, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e970f6604832", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 836, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "469ab8bc8d13", "text": "classes\nSwapRouter\nOn this page\nSwapRouter\n@uniswap/v3-sdk  / Exports  / SwapRouter\nClass: SwapRouter\nRepresents the Uniswap V3 SwapRouter , and has static methods for helping execute trades.\nTable of contents  \nConstructors \nconstructor\nProperties \nINTERF ACE\nMethods \nswapCallParameters\nConstructors  \nconstructor \n\u2022 Private  new SwapRouter ()\nCannot be constructed.\nDefined in  \nswapRouter .ts:57\nProperties  \nINTERFACE \n\u25aa Static  INTERF ACE : Interface\nDefined in  \nswapRouter .ts:52\nMethods  \nswapCallParameters", "metadata": {"page_number": 837, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0855518937e1", "text": "\u25b8 Static  swapCallParameters (trades , options ): MethodParameters\nProduces the on-chain method name to call and the hex encoded parameters to pass as ar guments for a given trade.\nParameters  \nName Type Description\ntradesTrade <Currency , Currency , TradeType > | Trade <Currency , Currency ,\nTradeType >[]-\noptions SwapOptionsoptions for the call\nparameters\nReturns  \nMethodParameters\nDefined in  \nswapRouter .ts:64\nEdit this page\nHelpful?\nPrevious\nSwapQuoter\nNext\nTick\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nINTERF ACE\nMethods\nswapCallParameters\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 838, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c97e40887c92", "text": "Properties\nMethods\nConstructors\nconstructor\nProperties\nINTERF ACE\nMethods\nswapCallParameters\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 838, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "215db3724169", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 839, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0bd0b9cad983", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nConcentrated Liquidity\nFees\nOracle\nRange Orders\nSwaps\nToken Integration Issues\nGovernance\nResearch\nResources\nGlossary\n\u0000\nProtocol Concepts\nSwapsHelpful?\nOn this page\nSwaps\nIntroduction  \nSwaps are the most common way of interacting with the Uniswap protocol. For end-users, swapping is straightforward: a\nuser selects an ERC-20 token that they own and a token they would like to trade it for . Executing a swap sells the currently", "metadata": {"page_number": 840, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "521d4731e419", "text": "Swaps are the most common way of interacting with the Uniswap protocol. For end-users, swapping is straightforward: a\nuser selects an ERC-20 token that they own and a token they would like to trade it for . Executing a swap sells the currently\nowned tokens for the proportional1 amount of the tokens desired, minus the swap fee, which is awarded to liquidity\nproviders2. Swapping with the Uniswap protocol is a permissionless process.\nnote: Using web interfaces (websites) to swap via the Uniswap protocol can introduce additional permission\nstructures, and may result in dif ferent execution behavior compared to using the Uniswap protocol directly . To\nlearn more about the dif ferences between the protocol and a web interface, see What is Uniswap.\nSwaps using the Uniswap protocol are dif ferent from traditional order book trades in that they are not executed against", "metadata": {"page_number": 840, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d854c57ca9c9", "text": "learn more about the dif ferences between the protocol and a web interface, see What is Uniswap.\nSwaps using the Uniswap protocol are dif ferent from traditional order book trades in that they are not executed against\ndiscrete orders on a first-in-first-out basis \u2014 rather , swaps execute against a passive pool of liquidity , with liquidity\nproviders earning fees proportional to their capital committed\nPrice Impact  \nIn a traditional order -book market, a sizeable market-buy order may deplete the available liquidity of a prior limit-sell and\ncontinue to execute against a subsequent limit-sell order at a higher price. The result is the final execution price of the order\nis somewhere in between the two limit-sell prices against which the order was filled.", "metadata": {"page_number": 840, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "737177bbe4d6", "text": "Price impact af fects the execution price of a swap similarly but is a result of a dif ferent dynamic. When using an automated\nmarket maker , the relative value of one asset in terms of the other continuously shifts during the execution of a swap,\nleaving the final execution price somewhere between where the relative price started - and ended.\nThis dynamic af fects every swap using the Uniswap protocol, as it is an inextricable part of AMM design.\nAs the amount of liquidity available at dif ferent price points can vary , the price impact for a given swap size will change\nrelative to the amount of liquidity available at any given point in price space. The greater the liquidity available at a given\nprice, the lower the price impact for a given swap size. The lesser the liquidity available, the higher the price impact.\nApproximate3 price impact is anticipated in real-time via the Uniswap interface, and warnings appear if unusually high price\nimpact will occur during a swap. Anyone executing a swap will have the ability to assess the circumstances of price impact", "metadata": {"page_number": 841, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7ca2e25f6cd1", "text": "Approximate3 price impact is anticipated in real-time via the Uniswap interface, and warnings appear if unusually high price\nimpact will occur during a swap. Anyone executing a swap will have the ability to assess the circumstances of price impact\nwhen needed.\nSlippage  \nThe other relevant detail to consider when approaching swaps with the Uniswap protocol is slippage. Slippage is the term\nwe use to describe alterations to a given price that could occur while a submitted transaction is pending.\nWhen transactions are submitted to Ethereum, their order of execution is established by the amount of \"gas\" of fered as a fee\nfor executing each transaction. The higher the fee of fered, the faster the transaction is executed. The transactions with a\nlower gas fee will remain pending for an indeterminate amount of time. During this time, the price environment in which the\ntransaction will eventually be executed will change, as other swaps will be taking place.\nSlippage tolerances establish a mar gin of change acceptable to the user beyond price impact. As long as the execution price", "metadata": {"page_number": 841, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ead5fd0d96d9", "text": "transaction will eventually be executed will change, as other swaps will be taking place.\nSlippage tolerances establish a mar gin of change acceptable to the user beyond price impact. As long as the execution price\nis within the slippage range, e.g., %1, the transaction will be executed. If the execution price ends up outside of the accepted\nslippage range, the transaction will fail, and the swap will not occur .\nA comparable situation in a traditional market would be a market-buy order executed after a delay . One can know the\nexpected price of a market-buy order when submitted, but much can change in the time between submission and execution.\nSafety Checks  \nPrice impact and slippage can both change while a transaction is pending, which is why we have built numerous safety\nchecks into the Uniswap protocol to protect end-users from drastic changes in the execution environment of their swap.\nSome of the most commonly encountered safety checks:", "metadata": {"page_number": 841, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2bd7057c577f", "text": "checks into the Uniswap protocol to protect end-users from drastic changes in the execution environment of their swap.\nSome of the most commonly encountered safety checks:\nExpir ed : A transaction error that occurs if a swap is pending longer than a predetermined deadline. The deadline is a\npoint in time after which the swap will be canceled to protect against unusually long pending periods and the changes\nin price that typically accompany the passage of time.\nINSUFFICIENT_OUTPUT_AMOUNT  : When a user submits a swap, the Uniswap interface will send an estimate\nof how much of the purchased token the user should expect to receive. If the anticipated output amount of a swap does\nnot match the estimate within a certain mar gin of error (the slippage tolerance), the swap will be canceled. This\nattempts to protect the user from any drastic and unfavorable price changes while their transaction is pending.\n1. Proportional in this instance takes into account many factors, including the relative price of one token in terms of the", "metadata": {"page_number": 841, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2b43d0e8e818", "text": "attempts to protect the user from any drastic and unfavorable price changes while their transaction is pending.\n1. Proportional in this instance takes into account many factors, including the relative price of one token in terms of the\nother , slippage, price impact, and other factors related to the open and adversarial nature of Ethereum. \u21a9\n2. For information about liquidity provision, see the liquidity user guide \u21a9\n3. The Uniswap interface informs the user about the circumstances of their swap, but it is not guaranteed. \u21a9\nEdit this page\nHelpful?\nPrevious\nRange Orders", "metadata": {"page_number": 841, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "188a200da1ae", "text": "Next\nToken Integration Issues\nIntroduction\nPrice Impact\nSlippage\nSafety Checks\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 842, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "65c0afca931f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nOverview\nGuides\nConnecting to Wallets\nSupported Connectors\nSwitching Chains\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nweb3-react\nGuides\nSwitching ChainsHelpful?\nOn this page\nSwitching Chains\nIntroduction", "metadata": {"page_number": 843, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "366656176117", "text": "V2 SDK\nV1 SDK\n\u0000\nweb3-react\nGuides\nSwitching ChainsHelpful?\nOn this page\nSwitching Chains\nIntroduction  \nThis guide will cover how to prompt a wallet that has connected to our dApp to switch chains using web3-react . It is based\non the web3-react  example , found in the Uniswap code examples repository . To run this example, check out the examples's\nREADME  and follow the setup instructions.\ninfo\nFor help on setting up web3-react  and interacting with a MetaMask wallet, please visit our connecting to wallets  page!\nThe input parameters to this guide are the chains that we want our dApp to be able to connect to and their RPC URLs.\nAt the end of the guide, we should be able to switch chains on the connected wallet.", "metadata": {"page_number": 843, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8c6d3c0ba644", "text": "For this guide, the following web3-react  packages are used:\n@web3-react/core\ninfo\nThis guide uses web3-react  version 8, which is a beta version.\nThe core code of this guide can be found in connections .\nSwitching Chains  \nHaving setup our application  to use web3-react  and having built out the ability to connect and disconnect wallets , we can\nnow move on to switching chains.\nSwitching chains requires two parameters, the chainId  we want to switch to, and the current connectionType :\nDefining the function\nloading...\nCopy\nView on Github\nGiven the ConnectionType , we can retrieve the actual connector:\nRetrieving the connector\nloading...\nCopy\nView on Github\nThen, depending on the ConnectionType , we determine how to switch chains. For the Network  or WalletConnect  cases, we", "metadata": {"page_number": 844, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "477dcb4876f8", "text": "Retrieving the connector\nloading...\nCopy\nView on Github\nThen, depending on the ConnectionType , we determine how to switch chains. For the Network  or WalletConnect  cases, we\ncall web3-react 's activate  function with the supplied chainId :\nSwitching chains for Network and WalletConnect\nloading...\nCopy\nView on Github\nThe rest of the connectors require us to build an AddEthereumChainParameter  object and pass it to the web3-react 's\nactivate  function:\nSwitching chains the other Connectors\nloading...\nCopy\nView on Github\nThe metadata required to build AddEthereumChainParameter  are defined in our constants file:\nDefining the chain parameters\nloading...\nCopy\nView on Github", "metadata": {"page_number": 844, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "55ded96a39bb", "text": "Next steps  \nKnow you know how to support web3-react 's most common use cases! Stay tuned for follow up guides.\nEdit this page\nHelpful?\nPrevious\nSupported Connectors\nNext\nOverview\nIntroduction\nSwitching Chains\nNext steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 845, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6d5d8b03aece", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nOverview\nTechnical Reference\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nUniversal Router\nTechnical ReferenceHelpful?\nOn this page\nTechnical Refer ence\nFunctions  \nTransactions to the UniversalRouter  all go through the UniversalRouter.execute  functions:\nexecute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)", "metadata": {"page_number": 846, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7a26609a8177", "text": "Technical Refer ence\nFunctions  \nTransactions to the UniversalRouter  all go through the UniversalRouter.execute  functions:\nexecute(bytes calldata commands, bytes[] calldata inputs, uint256 deadline)\nexecute(bytes calldata commands, bytes[] calldata inputs)\nThe first of these functions adds the functionality to allow transactions to have a transaction deadline. If the\nblock.timestamp  is after the deadline  provided the transaction will revert. After that check, the 2 functions otherwise\nexecute identically .\nThe execute  functions work like a simplified VM - they take in a list of commands, and a list of inputs for the commands\nand execute them in the order specified.\nCommand Structur e \nThe first parameter for the function ( bytes calldata commands ) is a list of commands for the contract to execute, in the\norder they should be executed. Each command is encoded in 1 byte, containing the following split of 8 bits:", "metadata": {"page_number": 846, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "53d16451b817", "text": "01 23 4 5 6 7\nfrcommand\nf \nA single bit flag, that signals whether or not the command should be allowed to revert without the whole transaction failing.\nIf f is 0 aka false  and the command reverts, then the entire transaction will revert and none of the commands will be\nexecuted.\nIf f is 1 aka true  and the command reverts, then the transaction will continue, allowing us to achieve partial fills. If\nusing this flag, be careful to include further commands that will remove any funds that could be left unused in the\nUniversalRouter  contract.\nr \n2 unused bytes, reserved for future use. Leaving these 2 bits as 0 will save gas, but any value passed into the contract will be\nignored. Later versions of the UniversalRouter  will likely expand the 5 bits used for command  to use at least 1 of these bits.\ncommand \nA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within", "metadata": {"page_number": 847, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "90b8e41109e7", "text": "ignored. Later versions of the UniversalRouter  will likely expand the 5 bits used for command  to use at least 1 of these bits.\ncommand \nA 5 bit unique identifier for the command that should be carried out. The values of these commands can be found within\nCommands.sol , or can be viewed in the table below .\nThe command types that are not defined do not have an assigned command at this moment in time. Providing one of these\nidentifiers will cause the transaction to revert with InvalidCommandType .\nA complete list of commands can be found in the table below:\nCommand Value\n0x00 V3_SWAP_EXACT_IN\n0x01 V3_SWAP_EXACT_OUT\n0x02 PERMIT2_TRANSFER_FROM\n0x03 PERMIT2_PERMIT_BATCH\n0x04 SWEEP\n0x05 TRANSFER\n0x06 PAY_PORTION\n0x07", "metadata": {"page_number": 847, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e8b4ff01799", "text": "0x02 PERMIT2_TRANSFER_FROM\n0x03 PERMIT2_PERMIT_BATCH\n0x04 SWEEP\n0x05 TRANSFER\n0x06 PAY_PORTION\n0x07\n0x08 V2_SWAP_EXACT_IN\n0x09 V2_SWAP_EXACT_OUT\n0x0a PERMIT2_PERMIT\n0x0b WRAP_ETH\n0x0c UNWRAP_WETH\n0x0d PERMIT2_TRANSFER_FROM_BATCH\n0x0e\n0x0f\n0x10 SEAPORT\n0x11 LOOKS_RARE_721\n0x12 NFTX\n0x13 CRYPTOPUNKS\n0x14 LOOKS_RARE_1155\n0x15 OWNER_CHECK_721\n0x16 OWNER_CHECK_1155", "metadata": {"page_number": 847, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ad06772a6878", "text": "Command Value\n0x17 SWEEP_ERC721\n0x18 X2Y2_721\n0x19 SUDOSWAP\n0x1a NFT20\n0x1b X2Y2_1155\n0x1c FOUNDATION\n0x1d SWEEP_ERC1155\n0x1e\n0x1f\nCommand Inputs  \nThe second parameter for the function is an array of bytes strings. Each element in the array is the abi-encoded input that\nwill be used for the respective command.\ncommands[i]  is the command that will use inputs[i]  as its encoded input parameters.\nThe router uses the command type to know how to decode the encoded input parameters - depending on the command\nchosen, the required inputs is dif ferent.\nThe input parameters required for each command are outlined below:\nV3_SWAP_EXACT_IN", "metadata": {"page_number": 848, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8ac0a9765523", "text": "chosen, the required inputs is dif ferent.\nThe input parameters required for each command are outlined below:\nV3_SWAP_EXACT_IN \naddress  The recipient of the output of the trade\nuint256  The amount of input tokens for the trade\nuint256  The minimum amount of output tokens the user wants\nbytes  The UniswapV3 encoded path to trade along\nbool  A flag for whether the input tokens should come from the msg.sender  (through Permit2) or whether the funds\nare already in the UniversalRouter\nV3_SWAP_EXACT_OUT \naddress  The recipient of the output of the trade\nuint256  The amount of output tokens to receive\nuint256  The maximum number of input tokens that should be spent\nbytes  The UniswapV3 encoded path to trade along", "metadata": {"page_number": 848, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d5df59d8e04b", "text": "address  The recipient of the output of the trade\nuint256  The amount of output tokens to receive\nuint256  The maximum number of input tokens that should be spent\nbytes  The UniswapV3 encoded path to trade along\nbool  A flag for whether the input tokens should come from the msg.sender  (through Permit2) or whether the funds\nare already in the UniversalRouter\nPERMIT2_TRANSFER_FROM \naddress  The token to fetch from Permit2\naddress  The recipient of the tokens fetched\nuint256  The amount of token to fetch\nThe individual that the tokens are fetched from is always the msg.sender  of the transaction\nPERMIT2_PERMIT_BATCH \nIAllowanceTransfer.PermitBatch  A PermitBatch  struct outlining all of the Permit2 permits to execute.\nbytes  The signature to provide to Permit2\nThe individual that signed the permits must be the msg.sender  of the transaction", "metadata": {"page_number": 848, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "48c9561d183d", "text": "SWEEP \naddress  The ERC20 token to sweep (or Constants.ETH for ETH)\naddress  The recipient of the sweep\nuint256  The minimum required tokens to receive from the sweep\nTRANSFER \naddress  The ERC20 token to transfer (or Constants.ETH for ETH)\naddress  The recipient of the transfer\nuint256  The amount to transfer\nPAY_PORTION \naddress  The ERC20 token to transfer (or Constants.ETH for ETH)\naddress  The recipient of the transfer\nuint256  In basis points, the percentage of the contract\u2019 s balance to transfer\nV2_SWAP_EXACT_IN \naddress  The recipient of the output of the trade\nuint256  The amount of input tokens for the trade\nuint256  The minimum amount of output tokens the user wants\naddress[]  The UniswapV2 token path to trade along", "metadata": {"page_number": 849, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b578e2120ff6", "text": "uint256  The amount of input tokens for the trade\nuint256  The minimum amount of output tokens the user wants\naddress[]  The UniswapV2 token path to trade along\nbool  A flag for whether the input tokens should come from the msg.sender  (through Permit2) or whether the funds\nare already in the UniversalRouter\nV2_SWAP_EXACT_OUT \naddress  The recipient of the output of the trade\nuint256  The amount of output tokens to receive\nuint256  The maximum number of input tokens that should be spent\naddress[]  The UniswapV2 token path to trade along\nbool  A flag for whether the input tokens should come from the msg.sender  (through Permit2) or whether the funds\nare already in the UniversalRouter\nPERMIT2_PERMIT \nIAllowanceTransfer.PermitSingle  A PermitSingle  struct outlining the Permit2 permit to execute", "metadata": {"page_number": 849, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5185c312b3ee", "text": "are already in the UniversalRouter\nPERMIT2_PERMIT \nIAllowanceTransfer.PermitSingle  A PermitSingle  struct outlining the Permit2 permit to execute\nbytes  The signature to provide to Permit2\nThe individual that signed the permit must be the msg.sender  of the transaction\nWRAP_ETH \naddress  The recipient of the WETH\nuint256  The amount of ETH to wrap\nUNWRAP_ETH \naddress  The recipient of the ETH\nuint256  The minimum required ETH to receive from the unwrapping\nPERMIT2_TRANSFER_FROM_BATCH", "metadata": {"page_number": 849, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aa84f58f79af", "text": "IAllowanceTransfer.AllowanceTransferDetails[]  An array of AllowanceTransferDetails  structs that each\ndescribe a Permit2 transfer to perform\nSEAPORT \nuint256  The ETH value to forward to the Seaport contract\nbytes  The calldata to use to call the Seaport contract\nLOOKS_RARE_721 \nuint256  The ETH value to forward to the LooksRare contract\nbytes  The calldata to use to call the LooksRare contract\naddress  The recipient of the ERC721\naddress  The ERC721 token address\nuint256  The ID of the ERC721\nNFTX \nuint256  The ETH value to forward to the NFTX contract\nbytes  The calldata to use to call the NFTX contract\nCRYPTOPUNKS \nuint256  The PunkID to purchase\naddress  The recipient for the cryptopunk", "metadata": {"page_number": 850, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b822257eb11", "text": "bytes  The calldata to use to call the NFTX contract\nCRYPTOPUNKS \nuint256  The PunkID to purchase\naddress  The recipient for the cryptopunk\nuint256  The ETH value to forward to the Cryptopunks contract\nLOOKS_RARE_1155 \nuint256  The ETH value to forward to the LooksRare contract\nbytes  The calldata to use to call the LooksRare contract\naddress  The recipient of the ERC1 155\naddress  The ERC1 155 token address\nuint256  The ID of the ERC1 155\nuint256  The amount of the ERC1 155 to transfer\nOWNER_CHECK_721 \naddress  The required owner of the ERC721\naddress  The ERC721 token address\nuint256  The ID of the ERC721\nOWNER_CHECK_1155 \naddress  The required owner of the ERC1 155", "metadata": {"page_number": 850, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "55cdda9e2ffa", "text": "address  The required owner of the ERC721\naddress  The ERC721 token address\nuint256  The ID of the ERC721\nOWNER_CHECK_1155 \naddress  The required owner of the ERC1 155\naddress  The ERC721 token address\nuint256  The ID of the ERC1 155\nuint256  The minimum required amount of the ERC1 155\nSWEEP_ERC721 \naddress  The ERC721 token address to transfer\naddress  The recipient of the transfer\nuint256  The token ID to transfer", "metadata": {"page_number": 850, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1a11ce197183", "text": "X2Y2_721 \nuint256  The ETH value to forward to the X2Y2 contract\nbytes  The calldata to use to call the X2Y2 contract\naddress  The recipient of the ERC721\naddress  The ERC721 token address\nuint256  The ID of the ERC721\nSUDOSWAP \nuint256  The ETH value to forward to the Sudoswap contract\nbytes  The calldata to use to call the Sudoswap contract\nNFT20 \nuint256  The ETH value to forward to the NFT20 contract\nbytes  The calldata to use to call the NFT20 contract\nX2Y2_1155 \nuint256  The ETH value to forward to the X2Y2 contract\nbytes  The calldata to use to call the X2Y2 contract\naddress  The recipient of the ERC1 155", "metadata": {"page_number": 851, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "610a994a9313", "text": "X2Y2_1155 \nuint256  The ETH value to forward to the X2Y2 contract\nbytes  The calldata to use to call the X2Y2 contract\naddress  The recipient of the ERC1 155\naddress  The ERC1 155 token address\nuint256  The ID of the ERC1 155\nuint256  The amount of the ERC1 155 to transfer\nFOUNDATION \nuint256  The ETH value to forward to the Foundation contract\nbytes  The calldata to use to call the Foundation contract\naddress  The recipient of the ERC721\naddress  The ERC721 token address\nuint256  The ID of the ERC721\nSWEEP_ERC1155 \naddress  The ERC1 155 token address to sweep\naddress  The recipient of the sweep\nuint256  The token ID to sweep\nuint256  The minimum required tokens to receive from the sweep", "metadata": {"page_number": 851, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "274da8e748f9", "text": "SWEEP_ERC1155 \naddress  The ERC1 155 token address to sweep\naddress  The recipient of the sweep\nuint256  The token ID to sweep\nuint256  The minimum required tokens to receive from the sweep\nExample: Reverting Commands  \nFor a Sudoswap command, that should be allowed to r evert , the following 8 bit command should be provided:\ncommand = 0x80 (10000000) && 0x19 (00011001) = 0x99 (10011001)\nCopy\nTake care when working with reverting commands - ensure you have appended commands to deal with funds that could\nremain in the contract after either outcomes. For example, if the Sudoswap command reverts, a following SWEEP  can be\nadded to ensure that any ETH that was not spent does not get left in the router .\nEdit this page", "metadata": {"page_number": 851, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aa898fe04a8d", "text": "Helpful?\nPrevious\nOverview\nNext\nOverview\nFunctions\nCommand Structure\nf\nr\ncommand\nCommand Inputs\nV3_SWAP_EXACT_IN\nV3_SWAP_EXACT_OUT\nPERMIT2_TRANSFER_FROM\nPERMIT2_PERMIT_BATCH\nSWEEP\nTRANSFER\nPAY_PORTION\nV2_SWAP_EXACT_IN\nV2_SWAP_EXACT_OUT\nPERMIT2_PERMIT\nWRAP_ETH\nUNWRAP_ETH\nPERMIT2_TRANSFER_FROM_BATCH\nSEAPORT\nLOOKS_RARE_721\nNFTX\nCRYPTOPUNKS\nLOOKS_RARE_1155\nOWNER_CHECK_721\nOWNER_CHECK_1155\nSWEEP_ERC721", "metadata": {"page_number": 852, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "822f4f092c3a", "text": "LOOKS_RARE_721\nNFTX\nCRYPTOPUNKS\nLOOKS_RARE_1155\nOWNER_CHECK_721\nOWNER_CHECK_1155\nSWEEP_ERC721\nX2Y2_721\nSUDOSWAP\nNFT20\nX2Y2_1155\nFOUNDATION\nSWEEP_ERC1155\nExample: Reverting Commands\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 852, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6b3fe0be1b3b", "text": "Analytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 853, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7cfa51be7672", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 854, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7536d869f05d", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 854, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e0110663ca04", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nTestCallbackV alidationHelpful?\nOn this page\nTestCallbackV alidation\nFunctions  \nverifyCallback \n  function  verifyCallback (\n  ) external  returns (contract  IUniswapV3Pool  pool)\nCopy\nEdit this page\nHelpful?\nPrevious\nSelfPermitT est\nNext\nTestERC20\nFunctions\nverifyCallback\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses", "metadata": {"page_number": 855, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ae31778d7170", "text": "Whitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 855, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8eafb432dfeb", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 856, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a9964ee5068d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 857, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "255150976cad", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 857, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f75026558078", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nTestERC20Helpful?\nOn this page\nTestERC20\nFunctions  \nconstructor \n  function  constructor (\n  ) public\nCopy\nEdit this page\nHelpful?\nPrevious\nTestCallbackV alidation\nNext\nTestERC20Metadata\nFunctions\nconstructor\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 858, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b0fcb74024ec", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 858, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4bc053eb5aa7", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 859, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "dccb81a262d0", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 860, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "15a9d5202520", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 860, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9f460a716ad0", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nTestERC20MetadataHelpful?\nOn this page\nTestERC20Metadata\nFunctions  \nconstructor \n  function  constructor (\n  ) public\nCopy\nEdit this page\nHelpful?\nPrevious\nTestERC20\nNext\nTestERC20PermitAllowed\nFunctions\nconstructor\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 861, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0f7660bcc64d", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 861, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b324b771e0e", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 862, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e9af1f3cc299", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 863, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c15aefe6084b", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 863, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8d6d6425edbc", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nTestERC20PermitAllowedHelpful?\nOn this page\nTestERC20PermitAllowed\nFunctions  \nconstructor \n  function  constructor (\n  ) public\nCopy\npermit \n  function  permit(\n  ) external\nCopy\nEdit this page\nHelpful?\nPrevious\nTestERC20Metadata\nNext\nTestMulticall\nFunctions\nconstructor\npermit\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 864, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7f36bfb4fa83", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 864, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b4732b2d262a", "text": "App\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 865, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0dca5d1faf4", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 866, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e01686cdf65", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 866, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a4e3f1d5e884", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nTestMulticallHelpful?\nOn this page\nTestMulticall\nFunctions  \nfunctionThatRevertsWithError \n  function  functionThatRevertsWithError (\n  ) external\nCopy\nfunctionThatReturnsTuple \n  function  functionThatReturnsTuple (\n  ) external  returns (struct TestMulticall .Tuple tuple )\nCopy\npays \n  function  pays(\n  ) external\nCopy\nreturnSender \n  function  returnSender (\n  ) external  returns (address)\nCopy\nEdit this page\nHelpful?\nPrevious\nTestERC20PermitAllowed\nNext", "metadata": {"page_number": 867, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "be9f268c3578", "text": "returnSender \n  function  returnSender (\n  ) external  returns (address)\nCopy\nEdit this page\nHelpful?\nPrevious\nTestERC20PermitAllowed\nNext\nTestPositionNFT Owner\nFunctions\nfunctionThatRevertsW ithError\nfunctionThatReturnsT uple\npays\nreturnSender\nDevelopers", "metadata": {"page_number": 867, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "babb3bdfa12f", "text": "Feedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 868, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "54a640bd5bed", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 869, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e1fb45442093", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 869, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f3812367d50f", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nTestPositionNFT OwnerHelpful?\nOn this page\nTestPositionNFT Owner\nFunctions  \nsetOwner \n  function  setOwner (\n  ) external\nCopy\nisValidSignature \n  function  isValidSignature (\n  ) external  returns (bytes4 magicValue )\nCopy\nEdit this page\nHelpful?\nPrevious\nTestMulticall\nNext\nTestUniswapV3Callee\nFunctions\nsetOwner\nisValidSignature\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 870, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "35fd0c65dd62", "text": "Functions\nsetOwner\nisValidSignature\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 870, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "883819771d4c", "text": "App\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 871, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ea34ae6ca29f", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 872, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "85c4fc6bf543", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 872, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e6b194124fc", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nTestUniswapV3CalleeHelpful?\nOn this page\nTestUniswapV3Callee\nFunctions  \nswapExact0For1 \n  function  swapExact0For1 (\n  ) external\nCopy\nswap0ForExact1 \n  function  swap0ForExact1 (\n  ) external\nCopy\nswapExact1For0 \n  function  swapExact1For0 (\n  ) external\nCopy\nswap1ForExact0 \n  function  swap1ForExact0 (\n  ) external\nCopy\nuniswapV3SwapCallback \n  function  uniswapV3SwapCallback (\n  ) external\nCopy", "metadata": {"page_number": 873, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ed874c80a5ce", "text": "function  swap1ForExact0 (\n  ) external\nCopy\nuniswapV3SwapCallback \n  function  uniswapV3SwapCallback (\n  ) external\nCopy\nEdit this page\nHelpful?\nPrevious\nTestPositionNFT Owner\nNext\nTickLensT est", "metadata": {"page_number": 873, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ab7887769343", "text": "Functions\nswapExact0For1\nswap0ForExact1\nswapExact1For0\nswap1ForExact0\nuniswapV3SwapCallback\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 874, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e6cf045fbe70", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nSet Up Your Contract\nMint a New Position\nCollecting Fees\nDecrease Liquidity\nIncrease Liquidity\nThe Full Contract\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nThe Full ContractHelpful?\nThe Full Contract", "metadata": {"page_number": 875, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "44f9c78fb3bf", "text": "Permit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nGuides\nProviding Liquidity\nThe Full ContractHelpful?\nThe Full Contract\nBelow we have the complete functioning code example: a contract that can custody Uniswap V3 position NFT's and manipulate the positions and liquidity therein by collecting fees,\nincreasing or decreasing liquidity , and minting new positions. View on github here.\n// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity  =0.7.6;\npragma abicoder v2 ;\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol' ;\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol' ;", "metadata": {"page_number": 875, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "86c452358a6c", "text": "import '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol' ;\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol' ;\nimport '@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol' ;\nimport '../libraries/TransferHelper.sol' ;\nimport '../interfaces/INonfungiblePositionManager.sol' ;\nimport '../base/LiquidityManagement.sol' ;\ncontract  LiquidityExamples  is IERC721Receiver {\n    address public constant  DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F ;\n    address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;", "metadata": {"page_number": 875, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "68bab33f272b", "text": "address public constant  USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 ;\n    uint24 public constant  poolFee = 3000;\n    INonfungiblePositionManager public immutable nonfungiblePositionManager ;\n    /// @notice Represents the deposit of an NFT\n    struct Deposit {\n        address owner;\n        uint128 liquidity ;\n        address token0;\n        address token1;\n    }\n    /// @dev deposits[tokenId] => Deposit\n    mapping(uint256 => Deposit ) public deposits ;\n    constructor (\n        INonfungiblePositionManager _nonfungiblePositionManager\n    ) {\n        nonfungiblePositionManager = _nonfungiblePositionManager ;\n    }", "metadata": {"page_number": 875, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b2cd17109b0", "text": "constructor (\n        INonfungiblePositionManager _nonfungiblePositionManager\n    ) {\n        nonfungiblePositionManager = _nonfungiblePositionManager ;\n    }\n    // Implementing `onERC721Received` so this contract can receive custody of erc721 tokens\n    function  onERC721Received (\n        address operator ,\n        address,\n        uint256 tokenId ,\n        bytes calldata\n    ) external  override returns (bytes4) {\n        // get position information\n        _createDeposit (operator , tokenId );\n        return this.onERC721Received .selector ;", "metadata": {"page_number": 875, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e88b3803a06", "text": "}\n    function  _createDeposit (address owner, uint256 tokenId ) internal  {\n        (, , address token0, address token1, , , , uint128 liquidity , , , , ) =\n            nonfungiblePositionManager .positions (tokenId);\n        // set the owner and data for position\n        // operator is msg.sender\n        deposits [tokenId] = Deposit({owner: owner, liquidity : liquidity , token0: token0, token1: token1});\n    }\n    /// @notice Calls the mint function defined in periphery, mints the same amount of each token.\n    /// For this example we are providing 1000 DAI and 1000 USDC in liquidity\n    /// @return tokenId The id of the newly minted ERC721\n    /// @return liquidity The amount of liquidity for the position\n    /// @return amount0 The amount of token0", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0361c91253be", "text": "/// @return tokenId The id of the newly minted ERC721\n    /// @return liquidity The amount of liquidity for the position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function  mintNewPosition ()\n        external\n        returns (\n            uint256 tokenId ,\n            uint128 liquidity ,\n            uint256 amount0 ,\n            uint256 amount1\n        )\n    {\n        // For this example, we will provide equal amounts of liquidity in both assets.\n        // Providing liquidity in both assets means liquidity will be earning fees and is considered in-range.\n        uint256 amount0ToMint = 1000;\n        uint256 amount1ToMint = 1000;\n        // transfer tokens to contract", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "af8d9532aac2", "text": "uint256 amount0ToMint = 1000;\n        uint256 amount1ToMint = 1000;\n        // transfer tokens to contract\n        TransferHelper .safeTransferFrom (DAI, msg.sender, address(this), amount0ToMint );\n        TransferHelper .safeTransferFrom (USDC, msg.sender, address(this), amount1ToMint );\n        // Approve the position manager\n        TransferHelper .safeApprove (DAI, address(nonfungiblePositionManager ), amount0ToMint );\n        TransferHelper .safeApprove (USDC, address(nonfungiblePositionManager ), amount1ToMint );\n        INonfungiblePositionManager .MintParams memory params =\n            INonfungiblePositionManager .MintParams ({\n                token0 : DAI,\n                token1 : USDC,\n                fee : poolFee ,", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1dbea525c731", "text": "INonfungiblePositionManager .MintParams ({\n                token0 : DAI,\n                token1 : USDC,\n                fee : poolFee ,\n                tickLower : TickMath .MIN_TICK ,\n                tickUpper : TickMath .MAX_TICK ,\n                amount0Desired : amount0ToMint ,\n                amount1Desired : amount1ToMint ,\n                amount0Min : 0,\n                amount1Min : 0,\n                recipient : address(this),\n                deadline : block.timestamp\n            });\n        // Note that the pool defined by DAI/USDC and fee tier 0.3% must already be created and initialized in order to mint\n        (tokenId, liquidity , amount0 , amount1 ) = nonfungiblePositionManager .mint(params);\n        // Create a deposit\n        _createDeposit (msg.sender, tokenId );", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ef7e746d19db", "text": "(tokenId, liquidity , amount0 , amount1 ) = nonfungiblePositionManager .mint(params);\n        // Create a deposit\n        _createDeposit (msg.sender, tokenId );\n        // Remove allowance and refund in both assets.\n        if (amount0 < amount0ToMint ) {\n            TransferHelper .safeApprove (DAI, address(nonfungiblePositionManager ), 0);\n            uint256 refund0 = amount0ToMint - amount0 ;\n            TransferHelper .safeTransfer (DAI, msg.sender, refund0 );\n        }\n        if (amount1 < amount1ToMint ) {\n            TransferHelper .safeApprove (USDC, address(nonfungiblePositionManager ), 0);\n            uint256 refund1 = amount1ToMint - amount1 ;", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d6da3a15b3ec", "text": "if (amount1 < amount1ToMint ) {\n            TransferHelper .safeApprove (USDC, address(nonfungiblePositionManager ), 0);\n            uint256 refund1 = amount1ToMint - amount1 ;\n            TransferHelper .safeTransfer (USDC, msg.sender, refund1 );\n        }\n    }\n    /// @notice Collects the fees associated with provided liquidity\n    /// @dev The contract must hold the erc721 token before it can collect fees\n    /// @param tokenId The id of the erc721 token\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function  collectAllFees (uint256 tokenId ) external  returns (uint256 amount0 , uint256 amount1 ) {\n        // Caller must own the ERC721 position, meaning it must be a deposit", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3352f68b49f6", "text": "function  collectAllFees (uint256 tokenId ) external  returns (uint256 amount0 , uint256 amount1 ) {\n        // Caller must own the ERC721 position, meaning it must be a deposit\n        // set amount0Max and amount1Max to uint256.max to collect all fees\n        // alternatively can set recipient to msg.sender and avoid another transaction in `sendToOwner`\n        INonfungiblePositionManager .CollectParams memory params =\n            INonfungiblePositionManager .CollectParams ({\n                tokenId : tokenId ,\n                recipient : address(this),\n                amount0Max : type(uint128).max,\n                amount1Max : type(uint128).max\n            });\n        (amount0, amount1 ) = nonfungiblePositionManager .collect(params);\n        // send collected feed back to owner", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "28a7a7740f02", "text": "amount1Max : type(uint128).max\n            });\n        (amount0, amount1 ) = nonfungiblePositionManager .collect(params);\n        // send collected feed back to owner\n        _sendToOwner (tokenId, amount0 , amount1 );\n    }\n    /// @notice A function that decreases the current liquidity by half. An example to show how to call the `decreaseLiquidity` function defined in peripher\n    /// @param tokenId The id of the erc721 token\n    /// @return amount0 The amount received back in token0\n    /// @return amount1 The amount returned back in token1\n    function  decreaseLiquidityInHalf (uint256 tokenId ) external  returns (uint256 amount0 , uint256 amount1 ) {\n        // caller must be the owner of the NFT", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "98e766d57123", "text": "function  decreaseLiquidityInHalf (uint256 tokenId ) external  returns (uint256 amount0 , uint256 amount1 ) {\n        // caller must be the owner of the NFT\n        require(msg.sender == deposits [tokenId].owner, 'Not the owner' );", "metadata": {"page_number": 876, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "07005941f1e6", "text": "// get liquidity data for tokenId\n        uint128 liquidity = deposits [tokenId].liquidity ;\n        uint128 halfLiquidity = liquidity / 2;\n        // amount0Min and amount1Min are price slippage checks\n        // if the amount received after burning is not greater than these minimums, transaction will fail\n        INonfungiblePositionManager .DecreaseLiquidityParams memory params =\n            INonfungiblePositionManager .DecreaseLiquidityParams ({\n                tokenId : tokenId ,\n                liquidity : halfLiquidity ,\n                amount0Min : 0,\n                amount1Min : 0,\n                deadline : block.timestamp\n            });\n        (amount0, amount1 ) = nonfungiblePositionManager .decreaseLiquidity (params);\n        //send liquidity back to owner\n        _sendToOwner (tokenId, amount0 , amount1 );", "metadata": {"page_number": 877, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b0bb5e42df21", "text": "(amount0, amount1 ) = nonfungiblePositionManager .decreaseLiquidity (params);\n        //send liquidity back to owner\n        _sendToOwner (tokenId, amount0 , amount1 );\n    }\n    /// @notice Increases liquidity in the current range\n    /// @dev Pool must be initialized already to add liquidity\n    /// @param tokenId The id of the erc721 token\n    /// @param amount0 The amount to add of token0\n    /// @param amount1 The amount to add of token1\n    function  increaseLiquidityCurrentRange (\n        uint256 tokenId ,\n        uint256 amountAdd0 ,\n        uint256 amountAdd1\n    )\n        external\n        returns (\n            uint128 liquidity ,\n            uint256 amount0 ,", "metadata": {"page_number": 877, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f83826c0266f", "text": "uint256 amountAdd0 ,\n        uint256 amountAdd1\n    )\n        external\n        returns (\n            uint128 liquidity ,\n            uint256 amount0 ,\n            uint256 amount1\n        ) {\n        TransferHelper .safeTransferFrom (deposits [tokenId].token0, msg.sender, address(this), amountAdd0 );\n        TransferHelper .safeTransferFrom (deposits [tokenId].token1, msg.sender, address(this), amountAdd1 );\n        TransferHelper .safeApprove (deposits [tokenId].token0, address(nonfungiblePositionManager ), amountAdd0 );\n        TransferHelper .safeApprove (deposits [tokenId].token1, address(nonfungiblePositionManager ), amountAdd1 );", "metadata": {"page_number": 877, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e3d97a2a5231", "text": "TransferHelper .safeApprove (deposits [tokenId].token1, address(nonfungiblePositionManager ), amountAdd1 );\n        INonfungiblePositionManager .IncreaseLiquidityParams memory params = INonfungiblePositionManager .IncreaseLiquidityParams ({\n            tokenId : tokenId ,\n            amount0Desired : amountAdd0 ,\n            amount1Desired : amountAdd1 ,\n            amount0Min : 0,\n            amount1Min : 0,\n            deadline : block.timestamp\n        });\n        (liquidity , amount0 , amount1 ) = nonfungiblePositionManager .increaseLiquidity (params);\n    }\n    /// @notice Transfers funds to owner of NFT\n    /// @param tokenId The id of the erc721\n    /// @param amount0 The amount of token0", "metadata": {"page_number": 877, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "583ec6026625", "text": "}\n    /// @notice Transfers funds to owner of NFT\n    /// @param tokenId The id of the erc721\n    /// @param amount0 The amount of token0\n    /// @param amount1 The amount of token1\n    function  _sendToOwner (\n        uint256 tokenId ,\n        uint256 amount0 ,\n        uint256 amount1\n    ) internal  {\n        // get owner of contract\n        address owner = deposits [tokenId].owner;\n        address token0 = deposits [tokenId].token0;\n        address token1 = deposits [tokenId].token1;\n        // send collected fees to owner\n        TransferHelper .safeTransfer (token0, owner, amount0 );\n        TransferHelper .safeTransfer (token1, owner, amount1 );\n    }", "metadata": {"page_number": 877, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "68e529ed032b", "text": "// send collected fees to owner\n        TransferHelper .safeTransfer (token0, owner, amount0 );\n        TransferHelper .safeTransfer (token1, owner, amount1 );\n    }\n    /// @notice Transfers the NFT to the owner\n    /// @param tokenId The id of the erc721\n    function  retrieveNFT (uint256 tokenId ) external  {\n        // must be the owner of the NFT\n        require(msg.sender == deposits [tokenId].owner, 'Not the owner' );\n        // transfer ownership to original owner\n        nonfungiblePositionManager .safeTransferFrom (address(this), msg.sender, tokenId );\n        //remove information related to tokenId\n        delete deposits [tokenId];\n    }\n}\nC o p y\nEdit this page\nHelpful?", "metadata": {"page_number": 877, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "974e7bcff254", "text": "//remove information related to tokenId\n        delete deposits [tokenId];\n    }\n}\nC o p y\nEdit this page\nHelpful?\nPrevious\nIncrease Liquidity\nNext\nOverview\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 877, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "917c47a5a8b7", "text": "Whitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 878, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1227016f5974", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 879, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a2f7977e17e7", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 879, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cf5d7e291169", "text": "classes\nTick\nOn this page\nTick\n@uniswap/v3-sdk  / Exports  / Tick\nClass: Tick\nTable of contents  \nConstructors \nconstructor\nProperties \nindex\nliquidityGross\nliquidityNet\nConstructors  \nconstructor \n\u2022 new Tick(__namedParameters )\nParameters  \nName Type\n__namedParameters TickConstructorArgs\nDefined in  \nentities/tick.ts:17\nProperties  \nindex \n\u2022 Readonly  index : number\nDefined in  \nentities/tick.ts:13\nliquidityGross\n\u2022 Readonly  liquidityGr oss: default", "metadata": {"page_number": 880, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cff293918579", "text": "Defined in  \nentities/tick.ts:14\nliquidityNet \n\u2022 Readonly  liquidityNet : default\nDefined in  \nentities/tick.ts:15\nEdit this page\nHelpful?\nPrevious\nSwapRouter\nNext\nTickLibrary\nTable of contents\nConstructors\nProperties\nConstructors\nconstructor\nProperties\nindex\nliquidityGross\nliquidityNet\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists", "metadata": {"page_number": 881, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7bcdd02264f0", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 881, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "20e1f675d3f3", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nBitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside", "metadata": {"page_number": 883, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a0a8c731cd23", "text": "FixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside\nSqrtPriceMath\nSwapMath\nTick\nTickBitmap\nTickMath\nTransferHelper\nUnsafeMath\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000", "metadata": {"page_number": 883, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a6ee72dff055", "text": "V3 Protocol\nTechnical Reference\nCore\nLibraries\nTickBitmapHelpful?\nOn this page\nTickBitmap\nStores a packed mapping of tick index to its initialized state\nThe mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\nFunctions  \nflipTick \n  function  flipTick (\n    mapping(int16 => uint256) self,\n    int24 tick,\n    int24 tickSpacing\n  ) internal\nCopy\nFlips the initialized state for a given tick from false to true, or vice versa\nParameters:  \nName Type Description\nself mapping(int16 => uint256) The mapping in which to flip the tick\ntick int24 The tick to flip\ntickSpacing int24 The spacing between usable ticks", "metadata": {"page_number": 884, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "daac243988d6", "text": "Parameters:  \nName Type Description\nself mapping(int16 => uint256) The mapping in which to flip the tick\ntick int24 The tick to flip\ntickSpacing int24 The spacing between usable ticks\nnextInitializedTickWithinOneWord \n  function  nextInitializedTickWithinOneWord (\n    mapping(int16 => uint256) self,\n    int24 tick,\n    int24 tickSpacing ,\n    bool lte\n  ) internal  view returns (int24 next, bool initialized )\nCopy\nReturns the next initialized tick contained in the same word (or adjacent word) as the tick that is either to the left (less than\nor equal to) or right (greater than) of the given tick\nParameters:  \nName Type Description\nselfmapping(int16 =>\nuint256)The mapping in which to compute the next initialized tick", "metadata": {"page_number": 884, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "73a4d170bb39", "text": "or equal to) or right (greater than) of the given tick\nParameters:  \nName Type Description\nselfmapping(int16 =>\nuint256)The mapping in which to compute the next initialized tick\ntick int24 The starting tick\ntickSpacing int24 The spacing between usable ticks", "metadata": {"page_number": 884, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d0d382094a5c", "text": "Name Type Description\nlte boolWhether to search for the next initialized tick to the left (less than or equal to the\nstarting tick)\nReturn Values:  \nName TypeDescription\nnext int24 The next initialized or uninitialized tick up to 256 ticks away from the current tick\ninitialized bool Whether the next tick is initialized, as the function only searches within up to 256 ticks\nEdit this page\nHelpful?\nPrevious\nTick\nNext\nTickMath\nFunctions\nflipT ick\nnextInitializedT ickW ithinOneW ord\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 885, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0c0d78c906c1", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 885, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "25112a1e21ff", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 886, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4f02c1696f76", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nTickConstructorAr gsHelpful?", "metadata": {"page_number": 886, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6091224365dc", "text": "On this page\nTickConstructorArgs\n@uniswap/v3-sdk  / Exports  / TickConstructorAr gs\nInterface: TickConstructorArgs\nTable of contents  \nProperties \nindex\nliquidityGross\nliquidityNet\nProperties  \nindex \n\u2022 index : number\nDefined in  \nentities/tick.ts:7\nliquidityGross\n\u2022 liquidityGr oss: BigintIsh\nDefined in  \nentities/tick.ts:8\nliquidityNet \n\u2022 liquidityNet : BigintIsh\nDefined in  \nentities/tick.ts:9\nEdit this page\nHelpful?\nPrevious\nSwapOptions\nNext\nTickDataProvider", "metadata": {"page_number": 887, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5710ce757c79", "text": "Table of contents\nProperties\nProperties\nindex\nliquidityGross\nliquidityNet\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 888, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e489b59d34a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 889, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a01df06c823d", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nTickDataProviderHelpful?", "metadata": {"page_number": 889, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3f730e3af105", "text": "On this page\nTickDataPr ovider\n@uniswap/v3-sdk  / Exports  / TickDataProvider\nInterface: TickDataPr ovider\nProvides information about ticks\nImplemented by  \nNoTickDataProvider\nTickListDataProvider\nTable of contents  \nMethods \ngetTick\nnextInitializedT ickW ithinOneW ord\nMethods  \ngetTick \n\u25b8 getT ick(tick ): Promise <{ liquidityNet : BigintIsh  }>\nReturn information corresponding to a specific tick\nParameters  \nName Type Description\nticknumber the tick to load\nReturns  \nPromise <{ liquidityNet : BigintIsh  }>\nDefined in  \nentities/tickDataProvider .ts:11\nnextInitializedTickWithinOneWord", "metadata": {"page_number": 890, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aebfe5629c91", "text": "Returns  \nPromise <{ liquidityNet : BigintIsh  }>\nDefined in  \nentities/tickDataProvider .ts:11\nnextInitializedTickWithinOneWord \n\u25b8 nextInitializedT ickW ithinOneW ord(tick , lte, tickSpacing ): Promise <[number , boolean ]>\nReturn the next tick that is initialized within a single word\nParameters", "metadata": {"page_number": 890, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "15312c6f92b2", "text": "Name Type Description\ntick number The current tick\nlte boolean Whether the next tick should be lte the current tick\ntickSpacing number The tick spacing of the pool\nReturns  \nPromise <[number , boolean ]>\nDefined in  \nentities/tickDataProvider .ts:19\nEdit this page\nHelpful?\nPrevious\nTickConstructorAr gs\nNext\nWithdrawOptions\nImplemented by\nTable of contents\nMethods\nMethods\ngetTick\nnextInitializedT ickW ithinOneW ord\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 891, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e9cbac70096c", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 891, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "42febdec9925", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nQuoter\nQuoterV2\nTickLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes", "metadata": {"page_number": 892, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ba32448c8bde", "text": "Staker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLens\nTickLensHelpful?\nOn this page\nTickLens", "metadata": {"page_number": 892, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "177fbbc263eb", "text": "Functions  \ngetPopulatedTicksInWord \n  function  getPopulatedTicksInWord (\n    address pool,\n    int16 tickBitmapIndex\n  ) public returns (struct ITickLens .PopulatedTick [] populatedTicks )\nCopy\nGet all the tick data for the populated ticks from a word of the tick bitmap of a pool\nParameters:  \nName Type Description\npool address The address of the pool for which to fetch populated tick data\ntickBitmapIndex int16The index of the word in the tick bitmap for which to parse the bitmap and fetch all the\npopulated ticks\nReturn Values:  \nName Type Description\npopulatedTicks ITickLens.PopulatedT ick[] An array of tick data for the given word in the tick bitmap\nEdit this page\nHelpful?\nPrevious\nQuoterV2\nNext", "metadata": {"page_number": 893, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bb5e51f51e09", "text": "populatedTicks ITickLens.PopulatedT ick[] An array of tick data for the given word in the tick bitmap\nEdit this page\nHelpful?\nPrevious\nQuoterV2\nNext\nBase64\nFunctions\ngetPopulatedT icksInW ord\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets", "metadata": {"page_number": 893, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b22d4dead058", "text": "Community\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 894, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "51f25791ba2b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nBase64T est\nLiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est", "metadata": {"page_number": 895, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b40794ebae0", "text": "LiquidityAmountsT est\nMockT imeNonfungiblePositionManager\nMockT imeSwapRouter\nNFTDescriptorT est\nPathT est\nPeripheryImmutableStateT est\nPoolAddressT est\nSelfPermitT est\nTestCallbackV alidation\nTestERC20\nTestERC20Metadata\nTestERC20PermitAllowed\nTestMulticall\nTestPositionNFT Owner\nTestUniswapV3Callee\nTickLensT est\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2", "metadata": {"page_number": 895, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e2010591692", "text": "V2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nTest\nTickLensT estHelpful?\nOn this page\nTickLensT est\nFunctions  \ngetGasCostOfGetPopulatedTicksInWord \n  function  getGasCostOfGetPopulatedTicksInWord (\n  ) external  returns (uint256)\nCopy\nEdit this page\nHelpful?\nPrevious\nTestUniswapV3Callee\nNext\nNonfungiblePositionManager\nFunctions\ngetGasCostOfGetPopulatedT icksInW ord\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 896, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2a7d6f6a5c10", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 896, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e87c3cd3eaf8", "text": "Discord\nTwitter\nBlog", "metadata": {"page_number": 897, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "61205a46b0a0", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 898, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "40cad3f8c15d", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 898, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "79f78daa87c6", "text": "classes\nTickLibrary\nOn this page\nTickLibrary\n@uniswap/v3-sdk  / Exports  / TickLibrary\nClass: TickLibrary\nTable of contents  \nConstructors \nconstructor\nMethods \ngetFeeGrowthInside\nConstructors  \nconstructor \n\u2022 Private  new TickLibrary ()\nCannot be constructed.\nDefined in  \nutils/tickLibrary .ts:25\nMethods  \ngetFeeGrowthInside \n\u25b8 Static  getFeeGr owthInside (feeGrowthOutsideLower , feeGrowthOutsideUpper , tickLower , tickUpper , tickCurrent ,\nfeeGrowthGlobal0X128 , feeGrowthGlobal1X128 ): default []\nParameters  \nName Type", "metadata": {"page_number": 899, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4127dd7a84f8", "text": "feeGrowthGlobal0X128 , feeGrowthGlobal1X128 ): default []\nParameters  \nName Type\nfeeGrowthOutsideLower FeeGrowthOutside\nfeeGrowthOutsideUpper FeeGrowthOutside\ntickLower number\ntickUpper number\ntickCurrent number\nfeeGrowthGlobal0X128 default\nfeeGrowthGlobal1X128 default", "metadata": {"page_number": 899, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ffe183722296", "text": "Returns  \ndefault []\nDefined in  \nutils/tickLibrary .ts:27\nEdit this page\nHelpful?\nPrevious\nTick\nNext\nTickList\nTable of contents\nConstructors\nMethods\nConstructors\nconstructor\nMethods\ngetFeeGrowthInside\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 900, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "41d53ce0593a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 901, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f32e32d23c29", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 901, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9a9a648c1b4c", "text": "classes\nTickList\nOn this page\nTickList\n@uniswap/v3-sdk  / Exports  / TickList\nClass: TickList\nUtility methods for interacting with sorted lists of ticks\nTable of contents  \nConstructors \nconstructor\nMethods \nbinarySearch\ngetTick\nisAtOrAboveLar gest\nisBelowSmallest\nnextInitializedT ick\nnextInitializedT ickW ithinOneW ord\nvalidateList\nConstructors  \nconstructor \n\u2022 Private  new TickList ()\nCannot be constructed\nDefined in  \nutils/tickList.ts:18\nMethods  \nbinarySearch \n\u25b8 Static  Private  binarySear ch(ticks , tick ): number", "metadata": {"page_number": 902, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8343446de9f6", "text": "Cannot be constructed\nDefined in  \nutils/tickList.ts:18\nMethods  \nbinarySearch \n\u25b8 Static  Private  binarySear ch(ticks , tick ): number\nFinds the lar gest tick in the list of ticks that is less than or equal to tick\nParameters", "metadata": {"page_number": 902, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "603cf1499bd9", "text": "Name Type Description\nticks readonly Tick []list of ticks\nticknumber tick to find the lar gest tick that is less than or equal to tick\nReturns  \nnumber\nDefined in  \nutils/tickList.ts:62\ngetTick \n\u25b8 Static  getT ick(ticks , index ): Tick\nParameters  \nName Type\nticks readonly Tick []\nindexnumber\nReturns  \nTick\nDefined in  \nutils/tickList.ts:50\nisAtOrAboveLargest \n\u25b8 Static  isAtOrAboveLargest (ticks , tick ): boolean\nParameters  \nName Type\nticks readonly Tick []\nticknumber\nReturns  \nboolean\nDefined in  \nutils/tickList.ts:45", "metadata": {"page_number": 903, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e6b921227392", "text": "Parameters  \nName Type\nticks readonly Tick []\nticknumber\nReturns  \nboolean\nDefined in  \nutils/tickList.ts:45\nisBelowSmallest", "metadata": {"page_number": 903, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e2621c5f7e22", "text": "\u25b8 Static  isBelowSmallest (ticks , tick ): boolean\nParameters  \nName Type\nticks readonly Tick []\nticknumber\nReturns  \nboolean\nDefined in  \nutils/tickList.ts:40\nnextInitializedTick \n\u25b8 Static  nextInitializedT ick(ticks , tick , lte): Tick\nParameters  \nName Type\nticks readonly Tick []\nticknumber\nlteboolean\nReturns  \nTick\nDefined in  \nutils/tickList.ts:83\nnextInitializedTickWithinOneWord \n\u25b8 Static  nextInitializedT ickW ithinOneW ord(ticks , tick , lte, tickSpacing ): [number , boolean ]\nParameters  \nName Type\nticks readonly Tick []", "metadata": {"page_number": 904, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc8b66ca141f", "text": "\u25b8 Static  nextInitializedT ickW ithinOneW ord(ticks , tick , lte, tickSpacing ): [number , boolean ]\nParameters  \nName Type\nticks readonly Tick []\ntick number\nlte boolean\ntickSpacing number\nReturns", "metadata": {"page_number": 904, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a4e59d3ff6d7", "text": "[number , boolean ]\nDefined in  \nutils/tickList.ts:101\nvalidateList \n\u25b8 Static  validateList (ticks , tickSpacing ): void\nParameters  \nName Type\nticks Tick []\ntickSpacing number\nReturns  \nvoid\nDefined in  \nutils/tickList.ts:20\nEdit this page\nHelpful?\nPrevious\nTickLibrary\nNext\nTickListDataProvider\nTable of contents\nConstructors\nMethods\nConstructors\nconstructor\nMethods\nbinarySearch\ngetTick\nisAtOrAboveLar gest\nisBelowSmallest\nnextInitializedT ick\nnextInitializedT ickW ithinOneW ord", "metadata": {"page_number": 905, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e85dd701aec", "text": "binarySearch\ngetTick\nisAtOrAboveLar gest\nisBelowSmallest\nnextInitializedT ick\nnextInitializedT ickW ithinOneW ord\nvalidateList\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 905, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "86c58fa6c139", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 906, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eafb6918ddf7", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 907, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a1096cfae017", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 907, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d074b6626e45", "text": "classes\nTickListDataProvider\nOn this page\nTickListDataPr ovider\n@uniswap/v3-sdk  / Exports  / TickListDataProvider\nClass: TickListDataPr ovider\nA data provider for ticks that is backed by an in-memory array of ticks.\nImplements  \nTickDataProvider\nTable of contents  \nConstructors \nconstructor\nProperties \nticks\nMethods \ngetTick\nnextInitializedT ickW ithinOneW ord\nConstructors  \nconstructor \n\u2022 new TickListDataPr ovider (ticks , tickSpacing )\nParameters  \nName Type\nticks (Tick  | TickConstructorArgs )[]\ntickSpacing number\nDefined in", "metadata": {"page_number": 908, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cfabb4de3b93", "text": "\u2022 new TickListDataPr ovider (ticks , tickSpacing )\nParameters  \nName Type\nticks (Tick  | TickConstructorArgs )[]\ntickSpacing number\nDefined in  \nentities/tickListDataProvider .ts:12\nProperties  \nticks", "metadata": {"page_number": 908, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bdc0e925cb7e", "text": "\u2022 Private  ticks : readonly Tick []\nDefined in  \nentities/tickListDataProvider .ts:10\nMethods  \ngetTick \n\u25b8 getT ick(tick ): Promise <{ liquidityGross : BigintIsh  ; liquidityNet : BigintIsh  }>\nReturn information corresponding to a specific tick\nParameters  \nName Type Description\nticknumber the tick to load\nReturns  \nPromise <{ liquidityGross : BigintIsh  ; liquidityNet : BigintIsh  }>\nImplementation of  \nTickDataProvider .getTick\nDefined in  \nentities/tickListDataProvider .ts:18\nnextInitializedTickWithinOneWord \n\u25b8 nextInitializedT ickW ithinOneW ord(tick , lte, tickSpacing ): Promise <[number , boolean ]>\nReturn the next tick that is initialized within a single word", "metadata": {"page_number": 909, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "751de2f016bf", "text": "\u25b8 nextInitializedT ickW ithinOneW ord(tick , lte, tickSpacing ): Promise <[number , boolean ]>\nReturn the next tick that is initialized within a single word\nParameters  \nName Type Description\ntick number The current tick\nlte boolean Whether the next tick should be lte the current tick\ntickSpacing number The tick spacing of the pool\nReturns  \nPromise <[number , boolean ]>\nImplementation of  \nTickDataProvider .nextInitializedT ickW ithinOneW ord", "metadata": {"page_number": 909, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b4cdf072d71", "text": "Defined in  \nentities/tickListDataProvider .ts:22\nEdit this page\nHelpful?\nPrevious\nTickList\nNext\nTickMath\nImplements\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nticks\nMethods\ngetTick\nnextInitializedT ickW ithinOneW ord\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets", "metadata": {"page_number": 910, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1ab590d2cc31", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 910, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "002c51c2d392", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 911, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a27dc2fa9c50", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 911, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e81b480805a", "text": "classes\nTickMath\nOn this page\nTickMath\n@uniswap/v3-sdk  / Exports  / TickMath\nClass: TickMath\nTable of contents  \nConstructors \nconstructor\nProperties \nMAX _SQR T_RATIO\nMAX _TICK\nMIN _SQR T_RATIO\nMIN _TICK\nMethods \ngetSqrtRatioAtT ick\ngetTickAtSqrtRatio\nConstructors  \nconstructor \n\u2022 Private  new TickMath ()\nCannot be constructed.\nDefined in  \nutils/tickMath.ts:17\nProperties  \nMAX_SQRT_RATIO \n\u25aa Static  MAX _SQR T_RATIO: default\nThe sqrt ratio corresponding to the maximum tick that could be used on any pool.\nDefined in", "metadata": {"page_number": 912, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9ed457eb1648", "text": "Properties  \nMAX_SQRT_RATIO \n\u25aa Static  MAX _SQR T_RATIO: default\nThe sqrt ratio corresponding to the maximum tick that could be used on any pool.\nDefined in  \nutils/tickMath.ts:35", "metadata": {"page_number": 912, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "284e02f991c1", "text": "MAX_TICK \n\u25aa Static  MAX _TICK : number  = -TickMath.MIN_TICK\nThe maximum tick that can be used on any pool.\nDefined in  \nutils/tickMath.ts:26\nMIN_SQRT_RATIO \n\u25aa Static  MIN _SQR T_RATIO: default\nThe sqrt ratio corresponding to the minimum tick that could be used on any pool.\nDefined in  \nutils/tickMath.ts:31\nMIN_TICK \n\u25aa Static  MIN _TICK : number  = -887272\nThe minimum tick that can be used on any pool.\nDefined in  \nutils/tickMath.ts:22\nMethods  \ngetSqrtRatioAtTick \n\u25b8 Static  getSqrtRatioAtT ick(tick ): default", "metadata": {"page_number": 913, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "69e25c679109", "text": "Defined in  \nutils/tickMath.ts:22\nMethods  \ngetSqrtRatioAtTick \n\u25b8 Static  getSqrtRatioAtT ick(tick ): default\nReturns the sqrt ratio as a Q64.96 for the given tick. The sqrt ratio is computed as sqrt(1.0001)^tick\nParameters  \nName Type Description\nticknumber the tick for which to compute the sqrt ratio\nReturns  \ndefault\nDefined in  \nutils/tickMath.ts:41", "metadata": {"page_number": 913, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "124288acfcac", "text": "getTickAtSqrtRatio \n\u25b8 Static  getT ickAtSqrtRatio (sqrtRatioX96 ): number\nReturns the tick corresponding to a given sqrt ratio, s.t. #getSqrtRatioAtT ick(tick) <= sqrtRatioX96 and\n#getSqrtRatioAtT ick(tick + 1) > sqrtRatioX96\nParameters  \nName Type Description\nsqrtRatioX96 default the sqrt ratio as a Q64.96 for which to compute the tick\nReturns  \nnumber\nDefined in  \nutils/tickMath.ts:82\nEdit this page\nHelpful?\nPrevious\nTickListDataProvider\nNext\nTrade\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties", "metadata": {"page_number": 914, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2dab25de1baf", "text": "Previous\nTickListDataProvider\nNext\nTrade\nTable of contents\nConstructors\nProperties\nMethods\nConstructors\nconstructor\nProperties\nMAX_SQR T_RA TIO\nMAX_TICK\nMIN_SQR T_RA TIO\nMIN_TICK\nMethods\ngetSqrtRatioAtT ick\ngetTickAtSqrtRatio\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem", "metadata": {"page_number": 914, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4eba37cf3f5d", "text": "Home\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 915, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "946d5b192ee6", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\nOverview\nGuides\nConnect to Uniswap\nPool Liquidity\nTrade Tokens\nCustom Linking\nIframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nToken ListingHelpful?", "metadata": {"page_number": 916, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0dd67edee4ce", "text": "Iframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nToken ListingHelpful?\nOn this page\nToken Listing\nIt is possible that a token you are interested in is not included in the token dropdown on https://app.uniswap.or g/#/swap?\nuse=v1 , however , all tokens that have a deployed uniswap exchange are supported on the front-end.\nThere are three ways to interact with tokens that are not yet included on the default list.\n1. Paste the token addr ess into the sear ch box.", "metadata": {"page_number": 916, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "136c3486d7b4", "text": "If a token is not included in the list, try pasting the token address into the search box. It will populate the dropdown with the\ntoken you are looking for .\n2. Custom Linking  \nhttps://app.uniswap.or g/#/swap?use=v1  supports custom linking to all tokens that have a Uniswap exchange. See Custom\nLinking  for details on how to link.\nFor example, to populate the output token field with an unlisted token, we can specify the outputCurrency in the URL  and\npass in the token's address like this:\nhttps://app.uniswap.org/#/swap?use=v1?outputCurrency=0xfA3E941D1F6B7b10eD84A0C211bfA8aeE907965e\nToken Details and Assets  \nToken information (including decimals, symbol, name, etc.) is pulled from token contracts directly . Logo images are pulled", "metadata": {"page_number": 917, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8983915cd572", "text": "Token Details and Assets  \nToken information (including decimals, symbol, name, etc.) is pulled from token contracts directly . Logo images are pulled\nfrom TrustW allet. If you'd like your token logo updated make a pull request into the TrustW allet assets repo\nhttps://github.com/trustwallet/assets .\nEdit this page\nHelpful?\nPrevious\nIframe Integration\nNext\nFactory\n1. Paste the token address into the search box.\n2. Custom Linking\nToken Details and Assets\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 917, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bc883c39ba0b", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter", "metadata": {"page_number": 917, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a868efaaa4cb", "text": "Blog", "metadata": {"page_number": 918, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9e515e2623c2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nOverview\nGuides\nSDK Quick start\nFetching Data\nPricing\nTrading\nPair Addresses\nTechnical Reference\nGetting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK", "metadata": {"page_number": 919, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a8bff07e2a79", "text": "Getting Started\nToken\nPair\nRoute\nTrade\nFractions\nFetcher\nOther Exports\nV1 SDK\n\u0000\nV2 SDK\nTechnical Reference\nTokenHelpful?\nOn this page\nToken\nconstructor (chainId: ChainId, address : string, decimals : number, symbol?: string, name?: string)\nCopy\nThe Token entity represents an ERC-20 token at a specific address on a specific chain.\nExample", "metadata": {"page_number": 919, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b99f51909714", "text": "import { ChainId, Token } from '@uniswap/sdk'\nconst token = new Token(ChainId.MAINNET, '0xc0FFee0000000000000000000000000000000000' , 18, 'HOT', 'Caffeine' )\nCopy\nProperties\nchainId  \nchainId: ChainId\nCopy\nSee ChainId\naddr ess \naddress: string\nCopy\ndecimals  \ndecimals : number\nCopy\nsymbol  \nsymbol?: string\nCopy\nname\nname?: string\nCopy\nMethods\nequals  \nequals(other: Token): boolean\nCopy\nChecks if the current instance is equal to another (has an identical chainId and address).\nsortsBefor e", "metadata": {"page_number": 920, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b65b06edbabc", "text": "Copy\nMethods\nequals  \nequals(other: Token): boolean\nCopy\nChecks if the current instance is equal to another (has an identical chainId and address).\nsortsBefor e \nsortsBefore (other: Token): boolean\nCopy\nChecks if the current instance sorts before another , by address.\nEdit this page", "metadata": {"page_number": 920, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3a8517a9a12a", "text": "Helpful?\nPrevious\nGetting Started\nNext\nPair\nchainId\naddress\ndecimals\nsymbol\nname\nequals\nsortsBefore\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 921, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ea536b4bbd1e", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 922, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ad983687b47b", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 922, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b623d20f6fa7", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nTokenRatioSortOrderHelpful?\nTokenRatioSortOrder\nlibrary TokenRatioSortOrder  {\n    int256 constant  NUMERATOR_MOST = 300;\n    int256 constant  NUMERATOR_MORE = 200;\n    int256 constant  NUMERATOR = 100;\n    int256 constant  DENOMINATOR_MOST = -300;\n    int256 constant  DENOMINATOR_MORE = -200;\n    int256 constant  DENOMINATOR = -100;\n}\nC o p y\nEdit this page\nHelpful?\nPrevious\nPositionKey\nNext\nTransferHelper\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 923, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "037c773bc5a3", "text": "Helpful?\nPrevious\nPositionKey\nNext\nTransferHelper\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 923, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ba9a829bd821", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\nOverview\nGuides\nConnect to Uniswap\nPool Liquidity\nTrade Tokens\nCustom Linking\nIframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nTrade TokensHelpful?", "metadata": {"page_number": 925, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9edec68d6139", "text": "Iframe Integration\nToken Listing\nTechnical Reference\nFactory\nExchange\nInterfaces\n\u0000\nV1 Protocol\nGuides\nTrade TokensHelpful?\nOn this page\nTrade Tokens\nIn Uniswap, there is a separate exchange contract for each ERC20 token. These exchanges hold reserves of both ETH and\ntheir associated ERC20. Instead of waiting to be matched in an order -book, users can make trades against the reserves at any\ntime. Reserves are pooled between a decentralized network of liquidity providers who collect fees on every trade.\nPricing is automatic, based on the x * y = k  market making formula which automatically adjusts prices based of f the\nrelative sizes of the two reserves and the size of the incoming trade. Since all tokens share ETH as a common pair , it is used\nas an intermediary asset for direct trading between any ERC20 \u21c4 ERC20 pair .", "metadata": {"page_number": 925, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "296b923b9465", "text": "ETH \u21c4 ERC20 Calculations  \nThe variables needed to determine price when trading between ETH and ERC20 tokens is:\nETH reserve size of the ERC20 exchange\nERC20 reserve size of the ERC20 exchange\nAmount sold (input ) or amount bought (output )\nAmount Bought (sell order) \nFor sell orders (exact input ), the amount bought (output ) is calculated:\n// Sell ETH for ERC20\nconst inputAmount = userInputEthValue\nconst inputReserve = web3.eth.getBalance (exchangeAddress )\nconst outputReserve = tokenContract .methods.balanceOf (exchangeAddress ).call()\n// Sell ERC20 for ETH\nconst inputAmount = userInputTokenValue\nconst inputReserve = tokenContract .methods.balanceOf (exchangeAddress ).call()", "metadata": {"page_number": 926, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8476ddd70652", "text": "// Sell ERC20 for ETH\nconst inputAmount = userInputTokenValue\nconst inputReserve = tokenContract .methods.balanceOf (exchangeAddress ).call()\nconst outputReserve = web3.eth.getBalance (exchangeAddress )\n// Output amount bought\nconst numerator = inputAmount * outputReserve * 997\nconst denominator = inputReserve * 1000 + inputAmount * 997\nconst outputAmount = numerator / denominator\nCopy\nAmount Sold (buy order) \nFor buy orders (exact output ), the cost (input ) is calculated:\n// Buy ERC20 with ETH\nconst outputAmount = userInputTokenValue\nconst inputReserve = web3.eth.getBalance (exchangeAddress )", "metadata": {"page_number": 926, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c5d08e75d93a", "text": "// Buy ERC20 with ETH\nconst outputAmount = userInputTokenValue\nconst inputReserve = web3.eth.getBalance (exchangeAddress )\nconst outputReserve = tokenContract .methods.balanceOf (exchangeAddress ).call()\n// Buy ETH with ERC20\nconst outputAmount = userInputEthValue\nconst inputReserve = tokenContract .methods.balanceOf (exchangeAddress ).call()\nconst outputReserve = web3.eth.getBalance (exchangeAddress )\n// Cost\nconst numerator = outputAmount * inputReserve * 1000\nconst denominator = (outputReserve - outputAmount ) * 997\nconst inputAmount = numerator / denominator + 1\nCopy\nLiquidity Provider Fee", "metadata": {"page_number": 926, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d7fa0091996", "text": "const denominator = (outputReserve - outputAmount ) * 997\nconst inputAmount = numerator / denominator + 1\nCopy\nLiquidity Provider Fee \nThere is a 0.3% liquidity provider fee built into the price formula. This can be calculated:\nfee = inputAmount * 0.003\nCopy\nExchange Rate\nThe exchange rate is simply the output amount divided by the input amount.", "metadata": {"page_number": 926, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "96de5921c203", "text": "const rate = outputAmount / inputAmount\nCopy\nERC20 \u21c4 ERC20 Calculations  \nThe variables needed to determine price when trading between two ERC20 tokens is:\nETH reserve size of the input ERC20 exchange\nERC20 reserve size of the input ERC20 exchange\nETH reserve size of the output ERC20 exchange\nERC20 reserve size of the output ERC20 exchange\nAmount sold (input ) or amount bought (output )\nAmount Bought (sell order) \nFor sell orders (exact input ), the amount bought (output ) is calculated:\n// TokenA (ERC20) to ETH conversion\nconst inputAmountA = userInputTokenAValue\nconst inputReserveA = tokenContractA .methods.balanceOf (exchangeAddressA ).call()\nconst outputReserveA = web3.eth.getBalance (exchangeAddressA )", "metadata": {"page_number": 927, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4707b0b41b19", "text": "const inputReserveA = tokenContractA .methods.balanceOf (exchangeAddressA ).call()\nconst outputReserveA = web3.eth.getBalance (exchangeAddressA )\nconst numeratorA = inputAmountA * outputReserveA * 997\nconst denominatorA = inputReserveA * 1000 + inputAmountA * 997\nconst outputAmountA = numeratorA / denominatorA\n// ETH to TokenB conversion\nconst inputAmountB = outputAmountA\nconst inputReserveB = web3.eth.getBalance (exchangeAddressB )\nconst outputReserveB = tokenContract .methods.balanceOf (exchangeAddressB ).call()\nconst numeratorB = inputAmountB * outputReserveB * 997", "metadata": {"page_number": 927, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9c23b25bdc5d", "text": "const outputReserveB = tokenContract .methods.balanceOf (exchangeAddressB ).call()\nconst numeratorB = inputAmountB * outputReserveB * 997\nconst denominatorB = inputReserveB * 1000 + inputAmountB * 997\nconst outputAmountB = numeratorB / denominatorB\nCopy\nAmount Sold (buy order) \nFor buy orders (exact output ), the cost (input ) is calculated:\n// Buy TokenB with ETH\nconst outputAmountB = userInputTokenBValue\nconst inputReserveB = web3.eth.getBalance (exchangeAddressB )\nconst outputReserveB = tokenContractB .methods.balanceOf (exchangeAddressB ).call()\n// Cost\nconst numeratorB = outputAmountB * inputReserveB * 1000", "metadata": {"page_number": 927, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b1cf80d5055f", "text": "const outputReserveB = tokenContractB .methods.balanceOf (exchangeAddressB ).call()\n// Cost\nconst numeratorB = outputAmountB * inputReserveB * 1000\nconst denominatorB = (outputReserveB - outputAmountB ) * 997\nconst inputAmountB = numeratorB / denominatorB + 1\n// Buy ETH with TokenA\nconst outputAmountA = userInputEthValue\nconst inputReserveA = tokenContractA .methods.balanceOf (exchangeAddressA ).call()\nconst outputReserveA = web3.eth.getBalance (exchangeAddressA )\n// Cost\nconst numeratorA = outputAmountA * inputReserveA * 1000\nconst denominatorA = (outputReserveA - outputAmountA ) * 997", "metadata": {"page_number": 927, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b92416f2e25d", "text": "// Cost\nconst numeratorA = outputAmountA * inputReserveA * 1000\nconst denominatorA = (outputReserveA - outputAmountA ) * 997\nconst inputAmountA = numeratorA / denominatorA + 1\nCopy", "metadata": {"page_number": 927, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "10d686170996", "text": "Liquidity Provider Fee \nThere is a 0.30% liquidity provider fee to swap from TokenA  to ETH on the input exchange. There is another 0.3% liquidity\nprovider fee to swap the remaining ETH to TokenB.\nconst exchangeAFee = inputAmountA * 0.003\nconst exchangeBFee = inputAmountB * 0.003\nCopy\nSince users only inputs Token A, it can be represented to them as:\nconst combinedFee = inputAmountA * 0.00591\nCopy\nExchange Rate\nThe exchange rate is simply the output amount divided by the input amount.\nconst rate = outputAmountB / inputAmountA\nCopy\nDeadlines  \nMany Uniswap functions include a transaction deadline  that sets a time after which a transaction can no longer be\nexecuted. This limits miners holding signed transactions for extended durations and executing them based of f market", "metadata": {"page_number": 928, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "833be414dd06", "text": "Copy\nDeadlines  \nMany Uniswap functions include a transaction deadline  that sets a time after which a transaction can no longer be\nexecuted. This limits miners holding signed transactions for extended durations and executing them based of f market\nmovements. It also reduces uncertainty around transactions that take a long time to execute due to issues with gas price.\nDeadlines are calculated by adding the desired amount of time (in seconds ) to the latest Ethereum block timestamp.\nweb3.eth.getBlock ('latest' , (error, block) => {\n  deadline = block.timestamp  + 300 // transaction expires in 300 seconds (5 minutes)\n})\nCopy\nRecipients  \nUniswap allows traders to swap tokens and transfer the output to a new recipient  address. This allows for a type of\npayment where the payer sends one token and the payee receives another .\nETH \u21c4 ERC20 Trades  \nComing soon...", "metadata": {"page_number": 928, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "98b1c53367ac", "text": "payment where the payer sends one token and the payee receives another .\nETH \u21c4 ERC20 Trades  \nComing soon...\nERC20 \u21c4 ERC20 Trades  \nComing soon...\nCustom Pools  \nComing soon...\nEdit this page", "metadata": {"page_number": 928, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "273d0cb9583a", "text": "Helpful?\nPrevious\nPool Liquidity\nNext\nCustom Linking\nETH \u21c4 ERC20 Calculations\nAmount Bought (sell order)\nAmount Sold (buy order)\nLiquidity Provider Fee\nExchange Rate\nERC20 \u21c4 ERC20 Calculations\nAmount Bought (sell order)\nAmount Sold (buy order)\nLiquidity Provider Fee\nExchange Rate\nDeadlines\nRecipients\nETH \u21c4 ERC20 Trades\nERC20 \u21c4 ERC20 Trades\nCustom Pools\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 929, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "56658661fafc", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 929, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "adedf6a4153a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nFullMath\nLiquidityMath\nMulticall\nNoTickDataProvider\nNonfungiblePositionManager\nPayments\nPool\nPosition\nPositionLibrary\nRoute\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary", "metadata": {"page_number": 930, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9ebd3618f224", "text": "Route\nSelfPermit\nSqrtPriceMath\nStaker\nSwapMath\nSwapQuoter\nSwapRouter\nTick\nTickLibrary\nTickList\nTickListDataProvider\nTickMath\nTrade\nenums\ninterfaces\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical ReferenceHelpful?", "metadata": {"page_number": 930, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "42c635ba13bd", "text": "classes\nTrade\nOn this page\nTrade\n@uniswap/v3-sdk  / Exports  / Trade\nClass: Trade<TInput, TOutput, TTradeT ype>\nRepresents a trade executed against a set of routes where some percentage of the input is split across each route.\nEach route has its own set of pools. Pools can not be re-used across routes.\nDoes not account for slippage, i.e., changes in price environment that can occur between the time the trade is submitted and\nwhen it is executed.\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20\nTOutput extends Currency The output token, either Ether or an ERC-20\nTTradeType extends TradeType The trade type, either exact input or exact output\nTable of contents  \nConstructors \nconstructor\nProperties \n_executionPrice", "metadata": {"page_number": 931, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "90ff27ce85a6", "text": "TTradeType extends TradeType The trade type, either exact input or exact output\nTable of contents  \nConstructors \nconstructor\nProperties \n_executionPrice\n_inputAmount\n_outputAmount\n_priceImpact\nswaps\ntradeT ype\nAccessors \nexecutionPrice\ninputAmount\noutputAmount\npriceImpact\nroute\nMethods \nmaximumAmountIn\nminimumAmountOut\nworstExecutionPrice", "metadata": {"page_number": 931, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1ad968bb65de", "text": "bestT radeExactIn\nbestT radeExactOut\ncreateUncheckedT rade\ncreateUncheckedT radeW ithMultipleRoutes\nexactIn\nexactOut\nfromRoute\nfromRoutes\nConstructors  \nconstructor \n\u2022 Private  new Trade <TInput , TOutput , TTradeType >(__namedParameters )\nConstruct a trade by passing in the pre-computed property values\nType parameters  \nName Type\nTInput extends Currency\nTOutput extends Currency\nTTradeType extends TradeType\nParameters  \nName Type\n__namedParameters Object\n__namedParameters.routes{ inputAmount : CurrencyAmount <TInput > ; outputAmount : CurrencyAmount <TOutput >\n; route : Route <TInput , TOutput > }[]", "metadata": {"page_number": 932, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "78a4c6662821", "text": "__namedParameters.routes{ inputAmount : CurrencyAmount <TInput > ; outputAmount : CurrencyAmount <TOutput >\n; route : Route <TInput , TOutput > }[]\n__namedParameters.tradeType TTradeType\nDefined in  \nentities/trade.ts:397\nProperties  \n_executionPrice \n\u2022 Private  _executionPrice : undefined  | Price <TInput , TOutput >\nThe cached result of the computed execution price\nDefined in  \nentities/trade.ts:143\n_inputAmount \n\u2022 Private  _inputAmount : undefined  | CurrencyAmount <TInput >", "metadata": {"page_number": 932, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d4b2f5d9af9", "text": "The cached result of the input amount computation\nDefined in  \nentities/trade.ts:97\n_outputAmount \n\u2022 Private  _outputAmount : undefined  | CurrencyAmount <TOutput >\nThe cached result of the output amount computation\nDefined in  \nentities/trade.ts:120\n_priceImpact \n\u2022 Private  _priceImpact : undefined  | Percent\nThe cached result of the price impact computation\nDefined in  \nentities/trade.ts:164\nswaps \n\u2022 Readonly  swaps : { inputAmount : CurrencyAmount <TInput > ; outputAmount : CurrencyAmount <TOutput > ; route :\nRoute <TInput , TOutput > }[]\nThe swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.\nDefined in  \nentities/trade.ts:82", "metadata": {"page_number": 933, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "781537366364", "text": "Route <TInput , TOutput > }[]\nThe swaps of the trade, i.e. which routes and how much is swapped in each that make up the trade.\nDefined in  \nentities/trade.ts:82\ntradeType \n\u2022 Readonly  tradeT ype: TTradeType\nThe type of the trade, either exact in or exact out.\nDefined in  \nentities/trade.ts:91\nAccessors  \nexecutionPrice", "metadata": {"page_number": 933, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6c006f40289f", "text": "\u2022 get executionPrice (): Price <TInput , TOutput >\nThe price expressed in terms of output amount/input amount.\nReturns  \nPrice <TInput , TOutput >\nDefined in  \nentities/trade.ts:148\ninputAmount \n\u2022 get inputAmount (): CurrencyAmount <TInput >\nThe input amount for the trade assuming no slippage.\nReturns  \nCurrencyAmount <TInput >\nDefined in  \nentities/trade.ts:102\noutputAmount \n\u2022 get outputAmount (): CurrencyAmount <TOutput >\nThe output amount for the trade assuming no slippage.\nReturns  \nCurrencyAmount <TOutput >\nDefined in  \nentities/trade.ts:125\npriceImpact \n\u2022 get priceImpact (): Percent", "metadata": {"page_number": 934, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c67f90600c15", "text": "Returns  \nCurrencyAmount <TOutput >\nDefined in  \nentities/trade.ts:125\npriceImpact \n\u2022 get priceImpact (): Percent\nReturns the percent dif ference between the route's mid price and the price impact\nReturns  \nPercent\nDefined in", "metadata": {"page_number": 934, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cf8b29f8f26b", "text": "entities/trade.ts:169\nroute \n\u2022 get route(): Route <TInput , TOutput >\nDeprecated\nDeprecated in favor of 'swaps' property . If the trade consists of multiple routes this will return an error .\nWhen the trade consists of just a single route, this returns the route of the trade, i.e. which pools the trade goes through.\nReturns  \nRoute <TInput , TOutput >\nDefined in  \nentities/trade.ts:73\nMethods  \nmaximumAmountIn \n\u25b8 maximumAmountIn (slippageTolerance , amountIn? ): CurrencyAmount <TInput >\nGet the maximum amount in that can be spent via this trade for the given slippage tolerance\nParameters  \nName Type Description\nslippageTolerance PercentThe tolerance of unfavorable slippage from the execution price of this\ntrade\namountIn CurrencyAmount <TInput >-", "metadata": {"page_number": 935, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f4d16c72286c", "text": "Parameters  \nName Type Description\nslippageTolerance PercentThe tolerance of unfavorable slippage from the execution price of this\ntrade\namountIn CurrencyAmount <TInput >-\nReturns  \nCurrencyAmount <TInput >\nThe amount in\nDefined in  \nentities/trade.ts:456\nminimumAmountOut \n\u25b8 minimumAmountOut (slippageTolerance , amountOut? ): CurrencyAmount <TOutput >\nGet the minimum amount that must be received from this trade for the given slippage tolerance\nParameters", "metadata": {"page_number": 935, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a02ec36b2357", "text": "Name Type Description\nslippageTolerance PercentThe tolerance of unfavorable slippage from the execution price of this\ntrade\namountOut CurrencyAmount <TOutput >-\nReturns  \nCurrencyAmount <TOutput >\nThe amount out\nDefined in  \nentities/trade.ts:438\nworstExecutionPrice \n\u25b8 worstExecutionPrice (slippageTolerance ): Price <TInput , TOutput >\nReturn the execution price after accounting for slippage tolerance\nParameters  \nName Type Description\nslippageTolerance Percent the allowed tolerated slippage\nReturns  \nPrice <TInput , TOutput >\nThe execution price\nDefined in  \nentities/trade.ts:471\nbestTradeExactIn", "metadata": {"page_number": 936, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1a3993bbbfdc", "text": "Returns  \nPrice <TInput , TOutput >\nThe execution price\nDefined in  \nentities/trade.ts:471\nbestTradeExactIn \n\u25b8 Static  bestT radeExactIn <TInput , TOutput >(pools , currencyAmountIn , currencyOut , __namedParameters? ,\ncurrentPools? , nextAmountIn? , bestTrades? ): Promise <Trade <TInput , TOutput , EXACT_INPUT >[]>\nGiven a list of pools, and a fixed amount in, returns the top maxNumResults  trades that go from an input token amount to an\noutput token, making at most maxHops  hops. Note this does not consider aggregation, as routes are linear . It's possible a\nbetter route exists by splitting the amount in among multiple routes.\nType parameters  \nName Type\nTInput extends Currency\nTOutput extends Currency", "metadata": {"page_number": 936, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "285ebe856a3f", "text": "Parameters  \nName Type Default value Description\npools Pool [] undefined the pools to consider in finding the best trade\ncurrencyAmountIn CurrencyAmount <TInput > undefinedused in recursion; the original value of the\ncurrencyAmountIn parameter\ncurrencyOut TOutput undefined the desired currency out\n__namedParameters BestTradeOptions {} -\ncurrentPools Pool [] [] used in recursion; the current list of pools\nnextAmountIn CurrencyAmount <Currency >currencyAmountIn exact amount of input currency to spend\nbestTradesTrade <TInput , TOutput ,\nEXACT_INPUT >[][]used in recursion; the current list of best\ntrades\nReturns  \nPromise <Trade <TInput , TOutput , EXACT_INPUT >[]>\nThe exact in trade\nDefined in  \nentities/trade.ts:495\nbestTradeExactOut", "metadata": {"page_number": 937, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "04c9b2346589", "text": "Returns  \nPromise <Trade <TInput , TOutput , EXACT_INPUT >[]>\nThe exact in trade\nDefined in  \nentities/trade.ts:495\nbestTradeExactOut \n\u25b8 Static  bestT radeExactOut <TInput , TOutput >(pools , currencyIn , currencyAmountOut , __namedParameters? ,\ncurrentPools? , nextAmountOut? , bestTrades? ): Promise <Trade <TInput , TOutput , EXACT_OUTPUT >[]>\nsimilar to the above method but instead tar gets a fixed output amount given a list of pools, and a fixed amount out, returns\nthe top maxNumResults  trades that go from an input token to an output token amount, making at most maxHops  hops note\nthis does not consider aggregation, as routes are linear . it's possible a better route exists by splitting the amount in among\nmultiple routes.\nType parameters  \nName Type", "metadata": {"page_number": 937, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fb2373ce040d", "text": "this does not consider aggregation, as routes are linear . it's possible a better route exists by splitting the amount in among\nmultiple routes.\nType parameters  \nName Type\nTInput extends Currency\nTOutput extends Currency\nParameters  \nName Type Default value Description\npools Pool [] undefinedthe pools to consider in finding the best\ntrade\ncurrencyIn TInput undefined the currency to spend\ncurrencyAmountOut CurrencyAmount <TOutput > undefined the desired currency amount out\n__namedParameters BestTradeOptions {} -\ncurrentPools Pool [] []used in recursion; the current list of\npools\nnextAmountOut CurrencyAmount <Currency > currencyAmountOut the exact amount of currency out", "metadata": {"page_number": 937, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "53422d1471d4", "text": "Name Type Default value Description\nbestTradesTrade <TInput , TOutput ,\nEXACT_OUTPUT >[][]used in recursion; the current list of\nbest trades\nReturns  \nPromise <Trade <TInput , TOutput , EXACT_OUTPUT >[]>\nThe exact out trade\nDefined in  \nentities/trade.ts:576\ncreateUncheckedTrade \n\u25b8 Static  createUncheckedT rade <TInput , TOutput , TTradeType >(constructorArguments ): Trade <TInput , TOutput ,\nTTradeType >\nCreates a trade without computing the result of swapping through the route. Useful when you have simulated the trade\nelsewhere and do not have any tick data\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20\nTOutput extends Currency The output token, either Ether or an ERC-20", "metadata": {"page_number": 938, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ff0782029187", "text": "elsewhere and do not have any tick data\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20\nTOutput extends Currency The output token, either Ether or an ERC-20\nTTradeType extends TradeType The type of the trade, either exact in or exact out\nParameters  \nName Type Description\nconstructorArguments Object The ar guments passed to the trade constructor\nconstructorArguments.inputAmount CurrencyAmount <TInput >-\nconstructorArguments.outputAmount CurrencyAmount <TOutput >-\nconstructorArguments.route Route <TInput , TOutput >-\nconstructorArguments.tradeType TTradeType -\nReturns  \nTrade <TInput , TOutput , TTradeType >\nThe unchecked trade\nDefined in  \nentities/trade.ts:346", "metadata": {"page_number": 938, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0d9b945c646b", "text": "constructorArguments.tradeType TTradeType -\nReturns  \nTrade <TInput , TOutput , TTradeType >\nThe unchecked trade\nDefined in  \nentities/trade.ts:346\ncreateUncheckedTradeWithMultipleRoutes", "metadata": {"page_number": 938, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "96dcf69c633c", "text": "\u25b8 Static  createUncheckedT radeW ithMultipleRoutes <TInput , TOutput , TTradeType >(constructorArguments ):\nTrade <TInput , TOutput , TTradeType >\nCreates a trade without computing the result of swapping through the routes. Useful when you have simulated the trade\nelsewhere and do not have any tick data\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20\nTOutput extends Currency The output token, either Ether or an ERC-20\nTTradeType extends TradeType The type of the trade, either exact in or exact out\nParameters  \nName Type Description\nconstructorArguments ObjectThe ar guments passed\nto the trade constructor\nconstructorArguments.routes{ inputAmount : CurrencyAmount <TInput > ; outputAmount :\nCurrencyAmount <TOutput > ; route : Route <TInput ,", "metadata": {"page_number": 939, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ecd815cc74db", "text": "to the trade constructor\nconstructorArguments.routes{ inputAmount : CurrencyAmount <TInput > ; outputAmount :\nCurrencyAmount <TOutput > ; route : Route <TInput ,\nTOutput > }[]-\nconstructorArguments.tradeType TTradeType -\nReturns  \nTrade <TInput , TOutput , TTradeType >\nThe unchecked trade\nDefined in  \nentities/trade.ts:377\nexactIn \n\u25b8 Static  exactIn <TInput , TOutput >(route , amountIn ): Promise <Trade <TInput , TOutput , EXACT_INPUT >>\nConstructs an exact in trade with the given amount in and route\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20\nTOutput extends Currency The output token, either Ether or an ERC-20\nParameters", "metadata": {"page_number": 939, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d070173ef5b2", "text": "Type parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20\nTOutput extends Currency The output token, either Ether or an ERC-20\nParameters  \nName Type Description\nroute Route <TInput , TOutput >The route of the exact in trade\namountIn CurrencyAmount <TInput >The amount being passed in", "metadata": {"page_number": 939, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d3f510fd8ab4", "text": "Returns  \nPromise <Trade <TInput , TOutput , EXACT_INPUT >>\nThe exact in trade\nDefined in  \nentities/trade.ts:194\nexactOut \n\u25b8 Static  exactOut <TInput , TOutput >(route , amountOut ): Promise <Trade <TInput , TOutput , EXACT_OUTPUT >>\nConstructs an exact out trade with the given amount out and route\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20\nTOutput extends Currency The output token, either Ether or an ERC-20\nParameters  \nName Type Description\nroute Route <TInput , TOutput >The route of the exact out trade\namountOut CurrencyAmount <TOutput >The amount returned by the trade\nReturns  \nPromise <Trade <TInput , TOutput , EXACT_OUTPUT >>\nThe exact out trade\nDefined in", "metadata": {"page_number": 940, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "096351e258c0", "text": "amountOut CurrencyAmount <TOutput >The amount returned by the trade\nReturns  \nPromise <Trade <TInput , TOutput , EXACT_OUTPUT >>\nThe exact out trade\nDefined in  \nentities/trade.ts:209\nfromRoute \n\u25b8 Static  fromRoute <TInput , TOutput , TTradeType >(route , amount , tradeType ): Promise <Trade <TInput , TOutput ,\nTTradeType >>\nConstructs a trade by simulating swaps through the given route\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20.\nTOutput extends Currency The output token, either Ether or an ERC-20.\nTTradeType extends TradeType The type of the trade, either exact in or exact out.", "metadata": {"page_number": 940, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac0909d834d9", "text": "Parameters  \nName Type Description\nroute Route <TInput , TOutput > route to swap through\namountTTradeType  extends EXACT_INPUT  ? CurrencyAmount <TInput > :\nCurrencyAmount <TOutput >the amount specified, either input or output,\ndepending on tradeT ype\ntradeType TTradeTypewhether the trade is an exact input or exact\noutput swap\nReturns  \nPromise <Trade <TInput , TOutput , TTradeType >>\nThe route\nDefined in  \nentities/trade.ts:226\nfromRoutes \n\u25b8 Static  fromRoutes <TInput , TOutput , TTradeType >(routes , tradeType ): Promise <Trade <TInput , TOutput ,\nTTradeType >>\nConstructs a trade from routes by simulating swaps\nType parameters  \nName Type Description", "metadata": {"page_number": 941, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "75f963ee9f12", "text": "TTradeType >>\nConstructs a trade from routes by simulating swaps\nType parameters  \nName Type Description\nTInput extends Currency The input token, either Ether or an ERC-20.\nTOutput extends Currency The output token, either Ether or an ERC-20.\nTTradeType extends TradeType The type of the trade, either exact in or exact out.\nParameters  \nName Type Description\nroutes{ amount : TTradeType  extends EXACT_INPUT  ?\nCurrencyAmount <TInput > : CurrencyAmount <TOutput > ; route :\nRoute <TInput , TOutput > }[]the routes to swap through and how\nmuch of the amount should be routed\nthrough each\ntradeType TTradeTypewhether the trade is an exact input or\nexact output swap\nReturns  \nPromise <Trade <TInput , TOutput , TTradeType >>\nThe trade\nDefined in", "metadata": {"page_number": 941, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc648c7ff22a", "text": "tradeType TTradeTypewhether the trade is an exact input or\nexact output swap\nReturns  \nPromise <Trade <TInput , TOutput , TTradeType >>\nThe trade\nDefined in  \nentities/trade.ts:276\nEdit this page", "metadata": {"page_number": 941, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "50b8f9383977", "text": "Helpful?\nPrevious\nTickMath\nNext\nFeeAmount\nType parameters\nTable of contents\nConstructors\nProperties\nAccessors\nMethods\nConstructors\nconstructor\nProperties\n_executionPrice\n_inputAmount\n_outputAmount\n_priceImpact\nswaps\ntradeT ype\nAccessors\nexecutionPrice\ninputAmount\noutputAmount\npriceImpact\nroute\nMethods\nmaximumAmountIn\nminimumAmountOut\nworstExecutionPrice\nbestT radeExactIn\nbestT radeExactOut\ncreateUncheckedT rade\ncreateUncheckedT radeW ithMultipleRoutes\nexactIn", "metadata": {"page_number": 942, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d4298db2d90d", "text": "bestT radeExactIn\nbestT radeExactOut\ncreateUncheckedT rade\ncreateUncheckedT radeW ithMultipleRoutes\nexactIn\nexactOut\nfromRoute\nfromRoutes\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 942, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7895a4b35509", "text": "Token Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 943, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6f084fe748b2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nOverview\nTechnical Reference\nOverview\nclasses\nenums\nRounding\nSupportedChainId\nTradeT ype\nV2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nenums\nTradeT ypeHelpful?\nOn this page\nTradeT ype", "metadata": {"page_number": 944, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5a423417bcf9", "text": "V2 SDK\nV1 SDK\n\u0000\nCore SDK\nTechnical Reference\nenums\nTradeT ypeHelpful?\nOn this page\nTradeT ype\n@uniswap/sdk-core  / Exports  / TradeT ype\nEnumeration: TradeT ype\nTable of contents  \nEnumeration Members \nEXACT _INPUT", "metadata": {"page_number": 944, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b6003b8bc1ca", "text": "EXACT _OUTPUT\nEnumeration Members  \nEXACT_INPUT \n\u2022 EXACT _INPUT  = 0\nDefined in  \nconstants.ts:27\nEXACT_OUTPUT \n\u2022 EXACT _OUTPUT  = 1\nDefined in  \nconstants.ts:28\nEdit this page\nHelpful?\nPrevious\nSupportedChainId\nNext\nOverview\nTable of contents\nEnumeration Members\nEnumeration Members\nEXACT_INPUT\nEXACT_OUTPUT\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics", "metadata": {"page_number": 945, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f4ac0069ffb7", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity", "metadata": {"page_number": 945, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a89b046d6d76", "text": "Governance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 946, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3f7a76a612a9", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nSmart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance", "metadata": {"page_number": 947, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5672edcf15f1", "text": "Smart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides\nSmart Contract Integration\nImplement a SwapHelpful?\nOn this page\nImplement a Swap", "metadata": {"page_number": 947, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "977a897072aa", "text": "When trading from a smart contract, the most important thing to keep in mind is that access to an external price source is\nrequir ed. Without this, trades can be frontrun for considerable loss.\nRead safety considerations  for mor e.\nUsing the Router\nThe easiest way to safely swap tokens is to use the router , which provides a variety of methods to safely swap to and from\ndifferent assets. You'll notice that there is a function for each permutation of swapping to/from an exact amount of\nETH/tokens.\nFirst you must use an external price source to calculate the safety parameters for the function you'd like to call. This is either\na minimum amount received when selling an exact input or the maximum amount you are willing to pay when a buying an\nexact output amount\nIt is also important to ensure that your contract controls enough ETH/tokens to make the swap, and has granted approval to\nthe router to withdraw this many tokens.", "metadata": {"page_number": 948, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "277b29e0ce91", "text": "exact output amount\nIt is also important to ensure that your contract controls enough ETH/tokens to make the swap, and has granted approval to\nthe router to withdraw this many tokens.\nCheck out the Pricing  page for a mor e in depth discussion on getting prices.\nExample\nImagine you want to swap 50 DAI for as much ETH as possible from your smart contract.\ntransferFr om \nBefore swapping, our smart contracts needs to be in control of 50 DAI. The easiest way to accomplish this is by calling\ntransferFrom  on DAI with the owner set to msg.sender :\nuint amountIn = 50 * 10 ** DAI.decimals ();\nrequire(DAI.transferFrom (msg.sender, address(this), amountIn ), 'transferFrom failed.' );\nCopy\nappr ove \nNow that our contract owns 50 DAI, we need to approve to the router  to withdraw this DAI:", "metadata": {"page_number": 948, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e2bb5aa47c7", "text": "Copy\nappr ove \nNow that our contract owns 50 DAI, we need to approve to the router  to withdraw this DAI:\nrequire(DAI.approve(address(UniswapV2Router02 ), amountIn ), 'approve failed.' );\nCopy\nswapExactT okensForETH  \nNow we're ready to swap:\n// amountOutMin must be retrieved from an oracle of some kind\naddress[] memory path = new address[](2);\npath[0] = address(DAI);\npath[1] = UniswapV2Router02 .WETH();\nUniswapV2Router02 .swapExactTokensForETH (amountIn , amountOutMin , path, msg.sender, block.timestamp );\nCopy\nSafety Considerations", "metadata": {"page_number": 948, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "14f49893723d", "text": "Because Ethereum transactions occur in an adversarial environment, smart contracts that do not perform safety checks can\nbe exploited for pr ofit. If a smart contract assumes that the current price on Uniswap is a \"fair\" price without performing\nsafety checks, it is vulnerable to manipulation . A bad actor could e.g. easily insert transactions before and after the swap (a\n\"sandwich\" attack) causing the smart contract to trade at a much worse price, profit from this at the trader's expense, and\nthen return the contracts to their original state. (One important caveat is that these types of attacks are mitigated by trading in\nextremely liquid pools, and/or at low values.)\nThe best way to protect against these attacks is to use an external price feed or \"price oracle\". The best \"oracle\" is simply\ntraders' off-chain observation of the curr ent price , which can be passed into the trade as a safety check. This strategy is best\nfor situations wher e users initiate trades on their own behalf .", "metadata": {"page_number": 949, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "69665058aea5", "text": "traders' off-chain observation of the curr ent price , which can be passed into the trade as a safety check. This strategy is best\nfor situations wher e users initiate trades on their own behalf .\nHowever , when an of f-chain price can't be used, an on-chain oracle should be used instead. Determining the best oracle for a\ngiven situation is a not part of this guide, but for more details on the Uniswap V2 approach to oracles, see Oracles .\nEdit this page\nHelpful?\nPrevious\nSmart Contract Quick start\nNext\nProviding Liquidity\ntransferFrom\napprove\nswapExactT okensForETH\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk", "metadata": {"page_number": 949, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "768146fc4d6b", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 949, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7df9cf86a6ef", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nGuides\nExecuting a TradeHelpful?\nOn this page\nExecuting a Trade\nIntroduction  \nThis guide will build of f our quoting guide  and show how to use a quote to construct and execute a trade on the Uniswap V3", "metadata": {"page_number": 950, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "59638f941b6c", "text": "Executing a TradeHelpful?\nOn this page\nExecuting a Trade\nIntroduction  \nThis guide will build of f our quoting guide  and show how to use a quote to construct and execute a trade on the Uniswap V3\nprotocol. It is based on the Trading code example , found in the Uniswap code examples repository . To run this example,\ncheck out the guide's README  and follow the setup instructions.\ninfo\nIf you need a briefer on the SDK and to learn more about how these guides connect to the examples repository , please visit\nour background  page!\nIn this example we will trade between two ERC20 tokens: WETH and USDC . The tokens, amount of input token, and the\nfee level can be configured as inputs.\nThe guide will cover :\n1. Constructing a route from pool information\n2. Constructing an unchecked trade\n3. Executing a trade", "metadata": {"page_number": 950, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "52831ec82188", "text": "At the end of the guide, we should be able to create and execute a trade between any two ERC20 tokens using the example's\nincluded UI.\nnote\nIncluded in the example application is functionality to wrap/unwrap ETH as needed to fund the example WETH  to USDC  swap\ndirectly from an ETH balance.\nFor this guide, the following Uniswap packages are used:\n@uniswap/v3-sdk\n@uniswap/sdk-core\nThe core code of this guide can be found in trading.ts\nConstructing a r oute fr om pool information  \nTo construct our trade, we will first create an model instance of a Pool . We will first extract the needed metadata from the\nrelevant pool contract. Metadata includes both constant information about the pool as well as information about its current\nstate stored in its first slot:\nFetching pool metadata\nloading...\nCopy\nView on Github", "metadata": {"page_number": 951, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6b90b2799b67", "text": "relevant pool contract. Metadata includes both constant information about the pool as well as information about its current\nstate stored in its first slot:\nFetching pool metadata\nloading...\nCopy\nView on Github\nUsing this metadata along with our inputs, we will then construct a Pool :\nConstructing a Pool\nloading...\nCopy\nView on Github\nWith this Pool , we can now construct a route to use in our trade. We will reuse our previous quoting code to calculate the\noutput amount we expect from our trade:\nConstructing a Route\nloading...\nCopy\nView on Github\nConstructing an unchecked trade  \nOnce we have constructed the route object, we now need to obtain a quote for the given inputAmount  of the example:\nGetting a quote\nloading...\nCopy\nView on Github", "metadata": {"page_number": 951, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fa34bb18119e", "text": "Once we have constructed the route object, we now need to obtain a quote for the given inputAmount  of the example:\nGetting a quote\nloading...\nCopy\nView on Github\nAs shown below , the quote is obtained using the v3-sdk 's SwapQuoter , in contrast to the previous quoting guide , where we\ndirectly accessed the smart contact:", "metadata": {"page_number": 951, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9bab3b828f7c", "text": "Fetching a quote using the v3-sdk\nloading...\nCopy\nView on Github\nThe SwapQuoter 's quoteCallParameters  function, gives us the calldata needed to make the call to the Quoter , and we then\ndecode the returned quote:\nGetting a quote using the v3-sdk\nloading...\nCopy\nView on Github\nWith the quote and the route, we can now construct an unchecked trade using the route in addition to the output amount\nfrom a quote based on our input:\nCreating a Trade\nloading...\nCopy\nView on Github\nThis example uses an exact input trade, but we can also construct a trade using exact output assuming we adapt our quoting\ncode accordingly .\nExecuting a trade", "metadata": {"page_number": 952, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e337770f2f0e", "text": "loading...\nCopy\nView on Github\nThis example uses an exact input trade, but we can also construct a trade using exact output assuming we adapt our quoting\ncode accordingly .\nExecuting a trade  \nOnce we have created a trade, we can now execute this trade with our provider . First, we must give the SwapRouter  approval\nto spend our tokens for us:\nApprove SwapRouter to spend our tokens\nloading...\nCopy\nView on Github\nThen, we set our options that define how much time and slippage can occur in our execution as well as the address to use for\nour wallet:\nConstructing SwapOptions\nloading...\nCopy\nView on Github\nNext, we use the Uniswap SwapRouter  to get the associated call parameters for our trade and options:\nGetting call parameters\nloading...\nCopy", "metadata": {"page_number": 952, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ce16308ffa06", "text": "Copy\nView on Github\nNext, we use the Uniswap SwapRouter  to get the associated call parameters for our trade and options:\nGetting call parameters\nloading...\nCopy\nView on Github\nFinally , we can construct a transaction from the method parameters and send the transaction:", "metadata": {"page_number": 952, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2556acd4d8f9", "text": "Sending a transaction\nloading...\nCopy\nView on Github\nNext Steps  \nThe resulting example allows for trading between any two ERC20 tokens, but this can be suboptimal for the best pricing and\nfees. To achieve the best possible price, we use the Uniswap auto router to route through pools to get an optimal cost. Our\nrouting  guide will show you how to use this router and execute optimal swaps.\nEdit this page\nHelpful?\nPrevious\nGetting a Quote\nNext\nRouting a Swap\nIntroduction\nConstructing a route from pool information\nConstructing an unchecked trade\nExecuting a trade\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 953, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d0134c40296f", "text": "Executing a trade\nNext Steps\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 953, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "93e61e4f6584", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\nOverview\nGuides\nGetting Started\nTechnical Reference\nData\nComputation\nFormat\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nTransactHelpful?\nOn this page", "metadata": {"page_number": 954, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "68210c6356fc", "text": "Format\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nTransactHelpful?\nOn this page\ngetExecutionDetails\nThe function formats trade data for execution against the relevant Uniswap exchange.\nFunction Signatur e \nexport function  getExecutionDetails (\n  trade: TradeDetails ,\n  maxSlippage ?: number,\n  deadline ?: number,", "metadata": {"page_number": 954, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c0a43eb3d5fd", "text": "recipient ?: string\n): ExecutionDetails\nCopy\nInput Parameters  \nParameter Type Description\ntrade TradeDetails The trade to execute.\nmaxSlippage? number The maximum slippage to allow , in basis points. Defaults to 200 (2%).\ndeadline? number When the transaction will expire. Defaults to 10 minutes in the future.\nrecipient? number An optional recipient address. Defaults to the msg.sender\nExample Usage\nMethod ar guments are returned as one of: BigNumber , number , or string . BigNumber s are lar ge number objects, numbers\nare small numbers in base 10, and string s are addresses.\nconst tradeDetails : TradeDetails  = tradeExactEthForTokensWithData (reserves , '1000000000000000000' )\nconst executionDetails : ExecutionDetails  = await getExecutionDetails (tradeDetails )\n/*\n{", "metadata": {"page_number": 955, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9b1716d8210a", "text": "const executionDetails : ExecutionDetails  = await getExecutionDetails (tradeDetails )\n/*\n{\n  // the address of the relevant exchange\n  exchangeAddress: 0x09cabEC1eAd1c0Ba254B09efb3EE13841712bE14,\n  // the name of the method that must be called\n  methodName: \"ethToTokenSwapInput\",\n  // the id of the method name\n  methodId: \"0xf39b5b9b\",\n  // the ether value that must be sent with the transaction\n  value: <BigNumber>,\n  // method arguments as an array\n  methodArguments: MethodArgument[]\n}\n*/\nCopy\nEdit this page\nHelpful?\nPrevious\nOrchestration\nNext\nConstants", "metadata": {"page_number": 955, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "20407350d0f0", "text": "methodArguments: MethodArgument[]\n}\n*/\nCopy\nEdit this page\nHelpful?\nPrevious\nOrchestration\nNext\nConstants\nFunction Signature\nInput Parameters\nExample Usage\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper", "metadata": {"page_number": 955, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9443c0d53b93", "text": "Github\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 956, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "798370e0484d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 957, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e050381f0753", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 957, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "805cf83372e3", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nTransferHelperHelpful?\nOn this page\nTransferHelper\nFunctions  \nsafeTransferFrom \n  function  safeTransferFrom (\n    address token,\n    address from,\n    address to,\n    uint256 value\n  ) internal\nCopy\nTransfers tokens from the tar geted address to the given destination Errors with 'STF' if transfer fails\nParameters:  \nName Type Description\ntoken address The contract address of the token to be transferred\nfrom address The originating address from which the tokens will be transferred\nto address The destination address of the transfer\nvalue uint256 The amount to be transferred\nsafeTransfer \n  function  safeTransfer (\n    address token,\n    address to,", "metadata": {"page_number": 958, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eaea904879c0", "text": "to address The destination address of the transfer\nvalue uint256 The amount to be transferred\nsafeTransfer \n  function  safeTransfer (\n    address token,\n    address to,\n    uint256 value\n  ) internal\nCopy\nTransfers tokens from msg.sender to a recipient\nErrors with ST  if transfer fails\nParameters:  \nName Type Description\ntoken address The contract address of the token which will be transferred\nto address The recipient of the transfer\nvalue uint256 The value of the transfer", "metadata": {"page_number": 958, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c66fd8c83886", "text": "safeApprove \n  function  safeApprove (\n    address token,\n    address to,\n    uint256 value\n  ) internal\nCopy\nApproves the stipulated contract to spend the given allowance in the given token\nErrors with 'SA' if transfer fails\nParameters:  \nName Type Description\ntoken address The contract address of the token to be approved\nto address The tar get of the approval\nvalue uint256 The amount of the given token the tar get will be allowed to spend\nsafeTransferETH \n  function  safeTransferETH (\n    address to,\n    uint256 value\n  ) internal\nCopy\nTransfers ETH to the recipient address\nFails with STE\nParameters:  \nName Type Description\nto address The destination of the transfer\nvalue uint256 The value to be transferred\nEdit this page", "metadata": {"page_number": 959, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c34dc951f777", "text": "Transfers ETH to the recipient address\nFails with STE\nParameters:  \nName Type Description\nto address The destination of the transfer\nvalue uint256 The value to be transferred\nEdit this page\nHelpful?\nPrevious\nTokenRatioSortOrder\nNext\nWeightedOracleLibrary\nFunctions\nsafeT ransferFrom\nsafeT ransfer\nsafeApprove\nsafeT ransferETH\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 959, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b05cf0548d8d", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 960, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2cfd364c4f49", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nS e a r c h\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\nOverview\nGuides\nGetting Started\nTechnical Reference\nData\nComputation\nFormat\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nTypesHelpful?\nTypes", "metadata": {"page_number": 961, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6f2f6fcbbc7a", "text": "Computation\nFormat\nOrchestration\nTransact\nConstants\nTypes\n\u0000\nV1 SDK\nTechnical Reference\nTypesHelpful?\nTypes\nBelow is an exhaustive list of all the external types used in the SDK.\nimport BigNumber  from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SUPPORTED_CHAIN_ID , TRADE_TYPE , TRADE_EXACT , FIXED_UNDERFLOW_BEHAVIOR  } from './constants'\nexport type BigNumberish  = BigNumber  | ethers.utils.BigNumber  | string | number\n//// types for on-chain, submitted, and normalized data\nexport type ChainIdOrProvider  = SUPPORTED_CHAIN_ID  | ethers.providers .AsyncSendable  | ethers.providers .Provider\n// type guard for ChainIdOrProvider", "metadata": {"page_number": 961, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "20b078bbd5f1", "text": "export type ChainIdOrProvider  = SUPPORTED_CHAIN_ID  | ethers.providers .AsyncSendable  | ethers.providers .Provider\n// type guard for ChainIdOrProvider\nexport function  isChainId (chainIdOrProvider : ChainIdOrProvider ): chainIdOrProvider is SUPPORTED_CHAIN_ID  {\n  const chainId : SUPPORTED_CHAIN_ID  = chainIdOrProvider as SUPPORTED_CHAIN_ID\n  return typeof chainId === 'number'\n}\n// type guard for ChainIdOrProvider\nexport function  isLowLevelProvider (\n  chainIdOrProvider : ChainIdOrProvider", "metadata": {"page_number": 961, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4a9f2a467128", "text": "): chainIdOrProvider is ethers.providers .AsyncSendable  {\n  if (isChainId (chainIdOrProvider )) {\n    return false\n  } else {\n    const provider : ethers.providers .AsyncSendable  = chainIdOrProvider as ethers.providers .AsyncSendable\n    return 'send' in provider || 'sendAsync'  in provider\n  }\n}\nexport interface  Token {\n  chainId ?: SUPPORTED_CHAIN_ID\n  address ?: string\n  decimals : number\n}\nexport interface  TokenAmount  {\n  token: Token\n  amount : BigNumberish\n}\nexport interface  TokenAmountNormalized  {\n  token: Token\n  amount : BigNumber\n}\nexport interface  TokenReserves  {\n  token: Token\n  exchange ?: Token", "metadata": {"page_number": 962, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b7ad649c47dc", "text": "}\nexport interface  TokenAmountNormalized  {\n  token: Token\n  amount : BigNumber\n}\nexport interface  TokenReserves  {\n  token: Token\n  exchange ?: Token\n  ethReserve : TokenAmount\n  tokenReserve : TokenAmount\n}\nexport interface  TokenReservesNormalized  {\n  token: Token\n  exchange ?: Token\n  ethReserve : TokenAmountNormalized\n  tokenReserve : TokenAmountNormalized\n}\nexport interface  EthReserves  {\n  token: Token\n}\n// type for input data\nexport type OptionalReserves  = TokenReserves  | EthReserves  | undefined\n// type guard for OptionalReserves\nexport function  areTokenReserves (reserves : OptionalReserves ): reserves is TokenReserves  {", "metadata": {"page_number": 962, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "235d940fdd2d", "text": "export type OptionalReserves  = TokenReserves  | EthReserves  | undefined\n// type guard for OptionalReserves\nexport function  areTokenReserves (reserves : OptionalReserves ): reserves is TokenReserves  {\n  const tokenReserves : TokenReserves  = reserves as TokenReserves\n  return (\n    tokenReserves !== undefined  && tokenReserves .ethReserve  !== undefined  && tokenReserves .tokenReserve  !== undefined\n  )\n}\n// type guard for OptionalReserves\nexport function  areETHReserves (reserves : OptionalReserves ): reserves is EthReserves  {\n  const tokenReserves : TokenReserves  = reserves as TokenReserves\n  return (", "metadata": {"page_number": 962, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b1d740e74588", "text": "export function  areETHReserves (reserves : OptionalReserves ): reserves is EthReserves  {\n  const tokenReserves : TokenReserves  = reserves as TokenReserves\n  return (\n    tokenReserves !== undefined  && tokenReserves .ethReserve  === undefined  && tokenReserves .tokenReserve  === undefined\n  )\n}\n// type for output data\nexport type NormalizedReserves  = TokenReservesNormalized  | EthReserves\n// type guard for NormalizedReserves\nexport function  areTokenReservesNormalized (reserves : NormalizedReserves ): reserves is TokenReservesNormalized  {\n  const tokenReservesNormalized : TokenReservesNormalized  = reserves as TokenReservesNormalized", "metadata": {"page_number": 962, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7d934f61910f", "text": "export function  areTokenReservesNormalized (reserves : NormalizedReserves ): reserves is TokenReservesNormalized  {\n  const tokenReservesNormalized : TokenReservesNormalized  = reserves as TokenReservesNormalized\n  return tokenReservesNormalized .ethReserve  !== undefined  && tokenReservesNormalized .tokenReserve  !== undefined\n}\n//// types for computed data\nexport interface  Rate {\n  rate: BigNumber\n  rateInverted : BigNumber\n}\nexport interface  MarketDetails  {\n  tradeType : TRADE_TYPE\n  inputReserves : NormalizedReserves", "metadata": {"page_number": 962, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6ef67e6daec3", "text": "outputReserves : NormalizedReserves\n  marketRate : Rate\n}\nexport interface  TradeDetails  {\n  marketDetailsPre : MarketDetails\n  marketDetailsPost : MarketDetails\n  tradeType : TRADE_TYPE\n  tradeExact : TRADE_EXACT\n  inputAmount : TokenAmountNormalized\n  outputAmount : TokenAmountNormalized\n  executionRate : Rate\n  marketRateSlippage : BigNumber\n  executionRateSlippage : BigNumber\n}\nexport type MethodArgument  = BigNumber  | number | string\nexport interface  ExecutionDetails  {\n  exchangeAddress : string\n  methodName : string\n  methodId : string\n  value: BigNumber\n  methodArguments : MethodArgument []\n}\n//// types for formatting data", "metadata": {"page_number": 963, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "88811634720f", "text": "methodName : string\n  methodId : string\n  value: BigNumber\n  methodArguments : MethodArgument []\n}\n//// types for formatting data\nexport type FlexibleFormat  = BigNumber .Format | boolean\n// type guard for FlexibleFormat\nexport function  isFormat (flexibleFormat : FlexibleFormat ): flexibleFormat is BigNumber .Format {\n  const format: BigNumber .Format = flexibleFormat as BigNumber .Format\n  return typeof format !== 'boolean'\n}\nexport interface  FormatSignificantOptions  {\n  significantDigits : number\n  roundingMode : BigNumber .RoundingMode\n  forceIntegerSignificance : boolean\n  format : FlexibleFormat\n}\nexport interface  FormatFixedOptions  {\n  decimalPlaces : number", "metadata": {"page_number": 963, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3eb8b12d9cbf", "text": "roundingMode : BigNumber .RoundingMode\n  forceIntegerSignificance : boolean\n  format : FlexibleFormat\n}\nexport interface  FormatFixedOptions  {\n  decimalPlaces : number\n  roundingMode : BigNumber .RoundingMode\n  dropTrailingZeros : boolean\n  underflowBehavior : FIXED_UNDERFLOW_BEHAVIOR\n  format : FlexibleFormat\n}\nC o p y\nEdit this page\nHelpful?\nPrevious\nConstants\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 963, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "31d06c312a70", "text": "App\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 964, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "67920853a3a5", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nFees\nPricing\nUnderstanding Returns\nSecurity\nMath\nResearch\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000", "metadata": {"page_number": 966, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d9ecee35fcf1", "text": "Security\nMath\nResearch\nGuides\nInterface Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nConcepts\nAdvanced Topics\nUnderstanding ReturnsHelpful?\nOn this page\nUnderstanding Returns\nUniswap incentivizes users to add liquidity to trading pools by rewarding providers with the fees generated when other users trade with those pools. Market making, in general, is a\ncomplex activity . There is a risk of losing money during lar ge and sustained movement in the underlying asset price compared to simply holding an asset.\nRisks\nTo understand the risks associated with providing liquidity you can read https://medium.com/@pintail/uniswap-a-good-deal-for -liquidity-providers-104c0b6816f2  to get an in-depth look at", "metadata": {"page_number": 966, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2de8b202b44a", "text": "To understand the risks associated with providing liquidity you can read https://medium.com/@pintail/uniswap-a-good-deal-for -liquidity-providers-104c0b6816f2  to get an in-depth look at\nhow to conceptualize a liquidity position.\nExample fr om the article\nConsider the case where a liquidity provider adds 10,000 DAI and 100 WETH to a pool (for a total value of $20,000), the liquidity pool is now 100,000 DAI and 1,000 ETH in\ntotal. Because the amount supplied is equal to 10% of the total liquidity , the contract mints and sends the market maker \u201cliquidity tokens\u201d which entitle them to 10% of the\nliquidity available in the pool. These are not speculative tokens to be traded. They are merely an accounting or bookkeeping tool to keep track of how much the liquidity", "metadata": {"page_number": 966, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4516afc2ee4a", "text": "liquidity available in the pool. These are not speculative tokens to be traded. They are merely an accounting or bookkeeping tool to keep track of how much the liquidity\nproviders are owed. If others subsequently add/withdraw coins, new liquidity tokens are minted/burned such that everyone\u2019 s relative percentage share of the liquidity pool\nremains the same.\nNow let\u2019 s assume the price trades on Coinbase fr om $100 to $150. The Uniswap contract should r eflect this change as well after  some arbitrage. Traders will add DAI\nand r emove ETH until the new ratio is now 150:1.\nWhat happens to the liquidity provider? The contract reflects something closer to 122,400 DAI and 817 ETH (to check these numbers are accurate, 122,400 * 817 =\n100,000,000 (our constant product) and 122,400 / 817 = 150, our new price). Withdrawing the 10% that we are entitled to would now yield 12,240 DAI and 81.7 ETH. The", "metadata": {"page_number": 966, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "58e5d1cd12b4", "text": "100,000,000 (our constant product) and 122,400 / 817 = 150, our new price). Withdrawing the 10% that we are entitled to would now yield 12,240 DAI and 81.7 ETH. The\ntotal market value here is $24,500. Roughly $500 worth of profit was missed out on as a result of the market making.\nObviously no one wants to pr ovide liquidity out of charitable means, and the r evenue isn\u2019t dependent on the ability to flip out of good trades (ther e is no flipping).\nInstead, 0.3% of all trade volume is distributed pr oportionally to all liquidity pr oviders. By default, these fees ar e put back into the liquidity pool, but can be\ncollected any time. It\u2019 s difficult to know what the trade-off is between r evenues fr om fees and losses fr om dir ectional movements without knowing the amount of in-\nbetween trades. The mor e chop and back and forth, the better .", "metadata": {"page_number": 966, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5a6c40fe26a4", "text": "Why is my liquidity worth less than I put in?  \nTo understand why the value of a liquidity provider \u2019s stake can go down despite income from fees, we need to look a bit more closely at the formula used by Uniswap to\ngovern trading. The formula really is very simple. If we neglect trading fees, we have the following:\neth_liquidity_pool * token_liquidity_pool = constant_product\nIn other words, the number of tokens a trader receives for their ETH and vice versa is calculated such that after the trade, the product of the two liquidity pools is the same as it\nwas before the trade. The consequence of this formula is that for trades which are very small in value compared to the size of the liquidity pool we have:\neth_price = token_liquidity_pool / eth_liquidity_pool\nCombining these two equations, we can work out the size of each liquidity pool at any given price, assuming constant total liquidity:", "metadata": {"page_number": 967, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "91fd1a60f928", "text": "eth_price = token_liquidity_pool / eth_liquidity_pool\nCombining these two equations, we can work out the size of each liquidity pool at any given price, assuming constant total liquidity:\neth_liquidity_pool = sqrt(constant_product / eth_price)\ntoken_liquidity_pool = sqrt(constant_product * eth_price)\nSo let\u2019 s look at the impact of a price change on a liquidity provider . To keep things simple, let\u2019 s imagine our liquidity provider supplies 1 ETH and 100 DAI to the Uniswap\nDAI exchange, giving them 1% of a liquidity pool which contains 100 ETH and 10,000 DAI. This implies a price of 1 ETH = 100 DAI. Still neglecting fees, let\u2019 s imagine that\nafter some trading, the price has changed; 1 ETH is now worth 120 DAI. What is the new value of the liquidity provider \u2019s stake? Plugging the numbers into the formulae\nabove, we have:", "metadata": {"page_number": 967, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bd574df01670", "text": "after some trading, the price has changed; 1 ETH is now worth 120 DAI. What is the new value of the liquidity provider \u2019s stake? Plugging the numbers into the formulae\nabove, we have:\neth_liquidity_pool = 91.2871\ndai_liquidity_pool = 10954.4511\n\"Since our liquidity provider has 1% of the liquidity tokens, this means they can now claim 0.9129 ETH and 109.54 DAI from the liquidity pool. But since DAI is\napproximately equivalent to USD, we might prefer to convert the entire amount into DAI to understand the overall impact of the price change. At the current price then, our\nliquidity is worth a total of 219.09 DAI. What if the liquidity provider had just held onto their original 1 ETH and 100 DAI? Well, now we can easily see that, at the new price,", "metadata": {"page_number": 967, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e2d53a7708b", "text": "liquidity is worth a total of 219.09 DAI. What if the liquidity provider had just held onto their original 1 ETH and 100 DAI? Well, now we can easily see that, at the new price,\nthe total value would be 220 DAI. So our liquidity provider lost out by 0.91 DAI by providing liquidity to Uniswap instead of just holding onto their initial ETH and DAI.\"\n\"Of course, if the price were to return to the same value as when the liquidity provider added their liquidity , this loss would disappear . For this r eason, we can call it\nan impermanent loss . Using the equations above, we can derive a formula for the size of the impermanent loss in terms of the price ratio between when liquidity was supplied\nand now . We get the following:\"\n\"impermanent_loss = 2 * sqrt(price_ratio) / (1+price_ratio) \u2014 1 \"\n\"Which we can plot out to get a general sense of the scale of the impermanent loss at dif ferent price ratios:\"", "metadata": {"page_number": 967, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "76331fe974c8", "text": "\"impermanent_loss = 2 * sqrt(price_ratio) / (1+price_ratio) \u2014 1 \"\n\"Which we can plot out to get a general sense of the scale of the impermanent loss at dif ferent price ratios:\"\n\"Or to put it another way:\"\n\"a 1.25x price change results in a 0.6% loss relative to HODL\"\n\"a 1.50x price change results in a 2.0% loss relative to HODL\"\n\"a 1.75x price change results in a 3.8% loss relative to HODL\"\n\"a 2x price change results in a 5.7% loss relative to HODL\"\n\"a 3x price change results in a 13.4% loss relative to HODL\"\n\"a 4x price change results in a 20.0% loss relative to HODL\"\n\"a 5x price change results in a 25.5% loss relative to HODL\"", "metadata": {"page_number": 967, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "687fa7bc6cb6", "text": "\"N.B. The loss is the same whichever direction the price change occurs in (i.e. a doubling in price results in the same loss as a halving).\" -->\nEdit this page\nHelpful?\nPrevious\nPricing\nNext\nSecurity\nWhy is my liquidity worth less than I put in?\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 968, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8550cda35f6b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nWhat Is Uniswap?\nThe Uniswap Protocol\nProtocol Concepts\nGovernance\nResearch\nResources\nGlossary\n\u0000\nThe Uniswap ProtocolHelpful?\nOn this page\nThe Uniswap Pr otocol\nIntroduction  \nThe Uniswap protocol is a peer -to-peer1 system designed for exchanging cryptocurrencies (ERC-20 Tokens)  on the\nEthereum  blockchain. The protocol is implemented as a set of persistent, non-upgradable smart contracts; designed to\nprioritize censorship resistance, security , self-custody , and to function without any trusted intermediaries who may\nselectively restrict access.", "metadata": {"page_number": 970, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6b5802ac70fc", "text": "Ethereum  blockchain. The protocol is implemented as a set of persistent, non-upgradable smart contracts; designed to\nprioritize censorship resistance, security , self-custody , and to function without any trusted intermediaries who may\nselectively restrict access.\nThere are currently three versions of the Uniswap protocol. V1 and V2 are open source and licensed under GPL. V3 is open\nsource with slight modifications, which are viewable here. Each version of Uniswap, once deployed, will function in\nperpetuity , with 100% uptime, provided the continued existence of the Ethereum blockchain.\nHow does the Uniswap pr otocol compar e to a typical market?  \nTo understand how the Uniswap protocol dif fers from a traditional exchange, it is helpful to first look at two subjects: how\nthe Automated Market Maker design deviates from traditional central limit order book-based exchanges, and how\npermissionless systems depart from conventional permissioned systems.\nOrder Book VS AMM", "metadata": {"page_number": 970, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "297d970bba9e", "text": "the Automated Market Maker design deviates from traditional central limit order book-based exchanges, and how\npermissionless systems depart from conventional permissioned systems.\nOrder Book VS AMM \nMost publicly accessible markets use a central limit order book  style of exchange, where buyers and sellers create orders\norganized by price level that are progressively filled as demand shifts. Anyone who has traded stocks through brokerage\nfirms will be familiar with an order book system.\nThe Uniswap protocol takes a dif ferent approach, using an Automated Market Maker (AMM), sometimes referred to as a\nConstant Function Market Maker , in place of an order book.", "metadata": {"page_number": 970, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "624a7cd6a71c", "text": "At a very high level, an AMM replaces the buy and sell orders in an order book market with a liquidity pool of two assets,\nboth valued relative to each other . As one asset is traded for the other , the relative prices of the two assets shift, and a new\nmarket rate for both is determined. In this dynamic, a buyer or seller trades directly with the pool, rather than with specific\norders left by other parties. The advantages and disadvantages of Automated Market Makers versus their traditional order\nbook counterparts are under active research by a growing number of parties. We have collected some notable examples on\nour research page.\nPermissionless Systems \nThe second departure from traditional markets is the permissionless and immutable design of the Uniswap protocol. These\ndesign decisions were inspired by Ethereum's core tenets, and our commitment to the ideals of permissionless access and\nimmutability as indispensable components of a future in which anyone in the world can access financial services without\nfear of discrimination or counter -party risk.", "metadata": {"page_number": 971, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ead139f610f3", "text": "immutability as indispensable components of a future in which anyone in the world can access financial services without\nfear of discrimination or counter -party risk.\nPermissionless design means that the protocol's services are entirely open for public use, with no ability to selectively\nrestrict who can or cannot use them. Anyone can swap, provide liquidity , or create new markets at will. This is a departure\nfrom traditional financial services, which typically restrict access based on geography , wealth status, and age.\nThe protocol is also immutable, in other words not upgradeable. No party is able to pause the contracts, reverse trade\nexecution, or otherwise change the behavior of the protocol in any way . It is worth noting that Uniswap Governance has the\nright (but no obligation) to divert a percentage of swap fees on any pool to a specified address. However , this capability is\nknown to all participants in advance, and to prevent abuse, the percentage is constrained between 10% and 25%.\nWher e can I find mor e information", "metadata": {"page_number": 971, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a66b8532e9a6", "text": "known to all participants in advance, and to prevent abuse, the percentage is constrained between 10% and 25%.\nWher e can I find mor e information  \nFor research into the economics of AMMs, game theory , or optimization research, check out our research  page.\nFor new features implemented in V3 that expand and refine the AMM design, see the V3 Concepts  page.\n1. Ethereum protocols are sometimes referred to as peer -to-contract systems as well. These are similar to a peer -to-peer\nsystems, but with immutable, persistent programs known as smart contracts taking the place of a peer . \u21a9\nEdit this page\nHelpful?\nPrevious\nWhat Is Uniswap?\nNext\nConcentrated Liquidity\nIntroduction\nHow does the Uniswap protocol compare to a typical market?\nOrder Book VS AMM\nPermissionless Systems\nWhere can I find more information\nDevelopers\nFeedback", "metadata": {"page_number": 971, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33348a8af1f9", "text": "Concentrated Liquidity\nIntroduction\nHow does the Uniswap protocol compare to a typical market?\nOrder Book VS AMM\nPermissionless Systems\nWhere can I find more information\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 971, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f7d63ea9c135", "text": "Deployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 972, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5994e553995b", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore", "metadata": {"page_number": 973, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fcf6b096cdb2", "text": "Periphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nUniswapV3FactoryHelpful?\nOn this page\nUniswapV3Factory\nDeploys Uniswap V3 pools and manages ownership and control over pool protocol fees\nFunctions  \ncreatePool", "metadata": {"page_number": 973, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "251bfe3e8a09", "text": "function  createPool (\n    address tokenA,\n    address tokenB,\n    uint24 fee\n  ) external  returns (address pool)\nCopy\nCreates a pool for the given two tokens and fee\ntokenA  and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee.\nThe call will revert if the pool already exists, the fee is invalid, or the token ar guments are invalid.\nParameters:  \nName Type Description\ntokenA address One of the two tokens in the desired pool\ntokenB address The other of the two tokens in the desired pool\nfee uint24 The desired fee for the pool\nReturn Values:  \nName Type Description\npool address The address of the newly created pool\nsetOwner \n  function  setOwner (\n    address _owner\n  ) external\nCopy", "metadata": {"page_number": 974, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "75cd81d47425", "text": "Return Values:  \nName Type Description\npool address The address of the newly created pool\nsetOwner \n  function  setOwner (\n    address _owner\n  ) external\nCopy\nUpdates the owner of the factory\nMust be called by the current owner\nParameters:  \nName Type Description\n_owner address The new owner of the factory\nenableFeeAmount \n  function  enableFeeAmount (\n    uint24 fee,\n    int24 tickSpacing\n  ) public\nCopy\nEnables a fee amount with the given tickSpacing\nFee amounts may never be removed once enabled\nParameters:", "metadata": {"page_number": 974, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "38cd4a73f236", "text": "Name Type Description\nfee uint24 The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\ntickSpacing int24 The spacing between ticks to be enforced for all pools created with the given fee amount\nEdit this page\nHelpful?\nPrevious\nOverview\nNext\nUniswapV3Pool\nFunctions\ncreatePool\nsetOwner\nenableFeeAmount\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 975, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cdb0d63528f5", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 975, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3f8773322ae2", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore", "metadata": {"page_number": 976, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5f51d3c6fd32", "text": "Periphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nUniswapV3PoolHelpful?\nOn this page\nUniswapV3Pool\nFunctions  \n_blockTimestamp \n  function  _blockTimestamp (\n  ) internal  view virtual returns (uint32)\nCopy\nReturns the block timestamp truncated to 32 bits, i.e. mod 2 **32. This method is overridden in tests.\nsnapshotCumulativesInside \n  function  snapshotCumulativesInside (\n    int24 tickLower ,\n    int24 tickUpper", "metadata": {"page_number": 976, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "91aece9b1c47", "text": "snapshotCumulativesInside \n  function  snapshotCumulativesInside (\n    int24 tickLower ,\n    int24 tickUpper\n  ) external  view override noDelegateCall returns (int56 tickCumulativeInside , uint160 secondsPerLiquidityInsideX128 , uint32 secondsInside )\nCopy\nReturns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\nSnapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for\nthe entire period between when the first snapshot is taken and the second snapshot is taken.\nParameters:", "metadata": {"page_number": 976, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32b6ec3d604b", "text": "Name TypeDescription\ntickLower int24 The lower tick of the range\ntickUpper int24 The upper tick of the range\nReturn Values:  \nName Type Description\ntickCumulativeInside int56 The snapshot of the tick accumulator for the range\nsecondsPerLiquidityInsideX128 uint160 The snapshot of seconds per liquidity for the range\nsecondsInside uint32 The snapshot of seconds per liquidity for the range\nobserve \n  function  observe(\n    uint32[] secondsAgos\n  ) external  view override noDelegateCall returns (int56[] tickCumulatives , uint160[] secondsPerLiquidityCumulativeX128s )\nCopy\nReturns the cumulative tick and liquidity as of each timestamp secondsAgo  from the current block timestamp", "metadata": {"page_number": 977, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e578ddd0b72f", "text": "Copy\nReturns the cumulative tick and liquidity as of each timestamp secondsAgo  from the current block timestamp\nTo get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the\nperiod. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0] . The time weighted average tick represents the geometric\ntime weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\nParameters:  \nName Type Description\nsecondsAgos uint32[] From how long ago each cumulative tick and liquidity value should be returned\nReturn Values:  \nName Type Description\ntickCumulatives int56[] Cumulative tick values as of each secondsAgos  from the current block timestamp", "metadata": {"page_number": 977, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f42e9f5a6f46", "text": "Return Values:  \nName Type Description\ntickCumulatives int56[] Cumulative tick values as of each secondsAgos  from the current block timestamp\nsecondsPerLiquidityCumulativeX128s uint160[] Cumulative seconds per liquidity-in-range value as of each secondsAgos  from the current block\ntimestamp\nincreaseObservationCardinalityNext \n  function  increaseObservationCardinalityNext (\n    uint16 observationCardinalityNext\n  ) external  override lock noDelegateCall\nCopy\nIncrease the maximum number of price and liquidity observations that this pool will store\nThis method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\nParameters:  \nName Type Description\nobservationCardinalityNext uint16 The desired minimum number of observations for the pool to store\ninitialize \n  function  initialize (", "metadata": {"page_number": 977, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9eba67deb0ba", "text": "Parameters:  \nName Type Description\nobservationCardinalityNext uint16 The desired minimum number of observations for the pool to store\ninitialize \n  function  initialize (\n    uint160 sqrtPriceX96\n  ) external  override\nCopy\nSets the initial price for the pool\nnot locked because it initializes unlocked\nParameters:  \nName Type Description\nsqrtPriceX96 uint160 the initial sqrt price of the pool as a Q64.96\nmint", "metadata": {"page_number": 977, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1e79595815f6", "text": "function  mint(\n    address recipient ,\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount,\n    bytes data\n  ) external  override lock returns (uint256 amount0 , uint256 amount1 )\nCopy\nAdds liquidity for the given recipient/tickLower/tickUpper position\nnoDelegateCall is applied indirectly via _modifyPosition\nParameters:  \nName Type Description\nrecipient address The address for which the liquidity will be created\ntickLower int24 The lower tick of the position in which to add liquidity\ntickUpper int24 The upper tick of the position in which to add liquidity\namount uint128 The amount of liquidity to mint\ndata bytes Any data that should be passed through to the callback\nReturn Values:  \nName Type Description", "metadata": {"page_number": 978, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "04f87f5990ac", "text": "amount uint128 The amount of liquidity to mint\ndata bytes Any data that should be passed through to the callback\nReturn Values:  \nName Type Description\namount0 uint256 The amount of token0 that was paid to mint the given amount of liquidity . Matches the value in the callback\namount1 uint256 The amount of token1 that was paid to mint the given amount of liquidity . Matches the value in the callback\ncollect \n  function  collect(\n    address recipient ,\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount0Requested ,\n    uint128 amount1Requested\n  ) external  override lock returns (uint128 amount0 , uint128 amount1 )\nCopy\nCollects tokens owed to a position", "metadata": {"page_number": 978, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "32a06488169f", "text": "uint128 amount1Requested\n  ) external  override lock returns (uint128 amount0 , uint128 amount1 )\nCopy\nCollects tokens owed to a position\nDoes not recompute fees earned, which must be done either via mint or burn of any amount of liquidity . Collect must be called by the position owner . To withdraw only\ntoken0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual\ntokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity .\nParameters:  \nName Type Description\nrecipient address The address which should receive the fees collected\ntickLower int24 The lower tick of the position for which to collect fees\ntickUpper int24 The upper tick of the position for which to collect fees", "metadata": {"page_number": 978, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "de9944e9bbd9", "text": "Name Type Description\nrecipient address The address which should receive the fees collected\ntickLower int24 The lower tick of the position for which to collect fees\ntickUpper int24 The upper tick of the position for which to collect fees\namount0Requested uint128 How much token0 should be withdrawn from the fees owed\namount1Requested uint128 How much token1 should be withdrawn from the fees owed\nReturn Values:  \nName Type Description\namount0 uint128 The amount of fees collected in token0\namount1 uint128 The amount of fees collected in token1\nburn \n  function  burn(\n    int24 tickLower ,\n    int24 tickUpper ,\n    uint128 amount\n  ) external  override lock returns (uint256 amount0 , uint256 amount1 )\nCopy\nBurn liquidity from the sender and account tokens owed for the liquidity to the position", "metadata": {"page_number": 978, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e71bb9c470db", "text": "uint128 amount\n  ) external  override lock returns (uint256 amount0 , uint256 amount1 )\nCopy\nBurn liquidity from the sender and account tokens owed for the liquidity to the position\nnoDelegateCall is applied indirectly via _modifyPosition", "metadata": {"page_number": 978, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1f077ce714b1", "text": "Parameters:  \nName Type Description\ntickLower int24 The lower tick of the position for which to burn liquidity\ntickUpper int24 The upper tick of the position for which to burn liquidity\namount uint128 How much liquidity to burn\nReturn Values:  \nName Type Description\namount0 uint256 The amount of token0 sent to the recipient\namount1 uint256 The amount of token1 sent to the recipient\nswap \n  function  swap(\n    address recipient ,\n    bool zeroForOne ,\n    int256 amountSpecified ,\n    uint160 sqrtPriceLimitX96 ,\n    bytes data\n  ) external  override noDelegateCall returns (int256 amount0 , int256 amount1 )\nCopy\nSwap token0 for token1, or token1 for token0", "metadata": {"page_number": 979, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5d76b6703d67", "text": "bytes data\n  ) external  override noDelegateCall returns (int256 amount0 , int256 amount1 )\nCopy\nSwap token0 for token1, or token1 for token0\nThe caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\nParameters:  \nName Type Description\nrecipient address The address to receive the output of the swap\nzeroForOne bool The direction of the swap, true for token0 to token1, false for token1 to token0\namountSpecified int256 The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\nsqrtPriceLimitX96 uint160The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be\ngreater than this value after the swap", "metadata": {"page_number": 979, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db825b4b20d8", "text": "sqrtPriceLimitX96 uint160The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be\ngreater than this value after the swap\ndata bytes Any data to be passed through to the callback\nReturn Values:  \nName Type Description\namount0 int256 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\namount1 int256 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\nflash \n  function  flash(\n    address recipient ,\n    uint256 amount0 ,\n    uint256 amount1 ,\n    bytes data\n  ) external  override lock noDelegateCall\nCopy\nReceive token0 and/or token1 and pay it back, plus a fee, in the callback", "metadata": {"page_number": 979, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f5d73a5c75dc", "text": "uint256 amount1 ,\n    bytes data\n  ) external  override lock noDelegateCall\nCopy\nReceive token0 and/or token1 and pay it back, plus a fee, in the callback\nThe caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback Can be used to donate underlying tokens pro-rata to\ncurrently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\nParameters:  \nName Type Description\nrecipient address The address which will receive the token0 and token1 amounts\namount0 uint256 The amount of token0 to send\namount1 uint256 The amount of token1 to send\ndata bytes Any data to be passed through to the callback\nsetFeeProtocol \n  function  setFeeProtocol (", "metadata": {"page_number": 979, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d99e6de824b0", "text": "amount1 uint256 The amount of token1 to send\ndata bytes Any data to be passed through to the callback\nsetFeeProtocol \n  function  setFeeProtocol (\n    uint8 feeProtocol0 ,", "metadata": {"page_number": 979, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8e03144347fd", "text": "uint8 feeProtocol1\n  ) external  override lock onlyFactoryOwner\nCopy\nSet the denominator of the protocol's % share of the fees\nParameters:  \nName TypeDescription\nfeeProtocol0 uint8 new protocol fee for token0 of the pool\nfeeProtocol1 uint8 new protocol fee for token1 of the pool\ncollectProtocol \n  function  collectProtocol (\n    address recipient ,\n    uint128 amount0Requested ,\n    uint128 amount1Requested\n  ) external  override lock onlyFactoryOwner returns (uint128 amount0 , uint128 amount1 )\nCopy\nCollect the protocol fee accrued to the pool\nParameters:  \nName Type Description\nrecipient address The address to which collected protocol fees should be sent", "metadata": {"page_number": 980, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8c445fce6d71", "text": "Copy\nCollect the protocol fee accrued to the pool\nParameters:  \nName Type Description\nrecipient address The address to which collected protocol fees should be sent\namount0Requested uint128 The maximum amount of token0 to send, can be 0 to collect fees in only token1\namount1Requested uint128 The maximum amount of token1 to send, can be 0 to collect fees in only token0\nReturn Values:  \nName Type Description\namount0 uint128 The protocol fee collected in token0\namount1 uint128 The protocol fee collected in token1\nEdit this page\nHelpful?\nPrevious\nUniswapV3Factory\nNext\nUniswapV3PoolDeployer\nFunctions\n_blockT imestamp\nsnapshotCumulativesInside\nobserve\nincreaseObservationCardinalityNext\ninitialize", "metadata": {"page_number": 980, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "015cc045673d", "text": "UniswapV3PoolDeployer\nFunctions\n_blockT imestamp\nsnapshotCumulativesInside\nobserve\nincreaseObservationCardinalityNext\ninitialize\nmint\ncollect\nburn\nswap\nflash\nsetFeeProtocol\ncollectProtocol\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome", "metadata": {"page_number": 980, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "594647f7192b", "text": "App\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 981, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4e22721d765d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore", "metadata": {"page_number": 982, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9114808e87e3", "text": "Periphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nCore\nUniswapV3PoolDeployerHelpful?\nOn this page\nUniswapV3PoolDeployer\nFunctions  \ndeploy \n  function  deploy(\n    address factory ,\n    address token0,\n    address token1,", "metadata": {"page_number": 982, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "29bfc340c90c", "text": "uint24 fee,\n    int24 tickSpacing\n  ) internal  returns (address pool)\nCopy\nDeploys a pool with the given parameters by transiently setting the parameters storage slot and then clearing it after\ndeploying the pool.\nParameters:  \nName Type Description\nfactory address The contract address of the Uniswap V3 factory\ntoken0 address The first token of the pool by address sort order\ntoken1 address The second token of the pool by address sort order\nfee uint24 The fee collected upon every swap in the pool, denominated in hundredths of a bip\ntickSpacing int24 The spacing between usable ticks\nEdit this page\nHelpful?\nPrevious\nUniswapV3Pool\nNext\nIERC20Minimal\nFunctions\ndeploy\nDevelopers\nFeedback\nBug Bounty\n#dev-chat", "metadata": {"page_number": 983, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c9cff8a24602", "text": "Previous\nUniswapV3Pool\nNext\nIERC20Minimal\nFunctions\ndeploy\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 983, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cce2233b0b59", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nUniswap V3 Staker Design\nUniswap V3 Staker Contract\nInterfaces\nLibraries\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator", "metadata": {"page_number": 984, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "873d84ddabf0", "text": "Interfaces\nLibraries\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nStaker\nUniswap V3 Staker ContractHelpful?\nOn this page", "metadata": {"page_number": 984, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d8143325ab0", "text": "Uniswap V3 Staker  Contract\nBelow is the technical reference for the staker contract, UniswapV3Staker.sol . A technical guide for interacting with this\nstaking contract will be released soon.\nFunctions  \nstakes \n  function  stakes(\n    uint256 tokenId ,\n    bytes32 incentiveId\n  ) public view override returns (uint160 secondsPerLiquidityInsideInitialX128 , uint128 liquidity )\nCopy\nReturns information about a staked liquidity NFT\nParameters:  \nName Type Description\ntokenId uint256 The ID of the staked token\nincentiveId bytes32 The ID of the incentive for which the token is staked\nReturn Values:  \nName Type Description\nsecondsPerLiquidityInsideInitialX128 uint160 secondsPerLiquidity represented as a UQ32.128", "metadata": {"page_number": 985, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "63432819b250", "text": "Return Values:  \nName Type Description\nsecondsPerLiquidityInsideInitialX128 uint160 secondsPerLiquidity represented as a UQ32.128\nliquidity bytes32The amount of liquidity in the NFT  as of the last time the rewards\nwere computed\nconstructor \n  function  constructor (\n    contract  IUniswapV3Factory  _factory ,\n    contract  INonfungiblePositionManager  _nonfungiblePositionManager ,\n    uint256 _maxIncentiveStartLeadTime ,\n    uint256 _maxIncentiveDuration\n  ) public\nCopy\nParameters:  \nName Type Description\n_factory contract IUniswapV3Factory the Uniswap V3 factory\n_nonfungiblePositionManagercontract\nINonfungiblePositionManagerthe NFT  position manager contract address", "metadata": {"page_number": 985, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cbe55e5ff8c3", "text": "Name Type Description\n_factory contract IUniswapV3Factory the Uniswap V3 factory\n_nonfungiblePositionManagercontract\nINonfungiblePositionManagerthe NFT  position manager contract address\n_maxIncentiveStartLeadTime uint256 the max duration of an incentive in seconds\n_maxIncentiveDuration uint256the max amount of seconds into the future the\nincentive startT ime can be set\ncreateIncentive", "metadata": {"page_number": 985, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "28e5a28cdb3d", "text": "function  createIncentive (\n    struct IUniswapV3Staker .IncentiveKey key ,\n    uint256 reward\n  ) external\nCopy\nCreates a new liquidity mining incentive program\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey Details of the incentive to create\nreward uint256 The amount of reward tokens to be distributed\nendIncentive \n  function  endIncentive (\n    struct IUniswapV3Staker .IncentiveKey key\n  ) external  returns (uint256 refund)\nCopy\nEnds an incentive after the incentive end time has passed and all stakes have been withdrawn\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey Details of the incentive to end\nReturn Values:  \nName Type Description", "metadata": {"page_number": 986, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3ece1d11a188", "text": "Parameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey Details of the incentive to end\nReturn Values:  \nName Type Description\nrefund uint256 The remaining reward tokens when the incentive is ended\nonERC721Received \n  function  onERC721Received (\n  ) external  returns (bytes4)\nCopy\nUpon receiving a Uniswap V3 ERC721, creates the token deposit setting owner to from . Also stakes token in one or more\nincentives if properly formatted data  has a length > 0.\nWhenever an {IERC721} tokenId  token is transferred to this contract via {IERC721-safeT ransferFrom} by operator  from\nfrom , this function is called. It must return its Solidity selector to confirm the token transfer . If any other value is returned or", "metadata": {"page_number": 986, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b5a7fb106d31", "text": "from , this function is called. It must return its Solidity selector to confirm the token transfer . If any other value is returned or\nthe interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with\nIERC721.onERC721Received.selector .\ntransferDeposit \n  function  transferDeposit (\n    uint256 tokenId ,\n    address to\n  ) external", "metadata": {"page_number": 986, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3247aa33d322", "text": "Copy\nTransfers ownership of a deposit from the sender to the given recipient\nParameters:  \nName Type Description\ntokenId uint256 The ID of the token (and the deposit) to transfer\nto address The new owner of the deposit\nwithdrawToken \n  function  withdrawToken (\n    uint256 tokenId ,\n    address to,\n    bytes data\n  ) external\nCopy\nWithdraws a Uniswap V3 LP  token tokenId  from this contract to the recipient to\nParameters:  \nName Type Description\ntokenId uint256 The unique identifier of an Uniswap V3 LP  token\nto address The address where the LP  token will be sent\ndata bytes An optional data array that will be passed along to the to address via the NFT  safeT ransferFrom\nstakeToken \n  function  stakeToken (", "metadata": {"page_number": 987, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc7442415677", "text": "to address The address where the LP  token will be sent\ndata bytes An optional data array that will be passed along to the to address via the NFT  safeT ransferFrom\nstakeToken \n  function  stakeToken (\n    struct IUniswapV3Staker .IncentiveKey key ,\n    uint256 tokenId\n  ) external\nCopy\nStakes a Uniswap V3 LP  token\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The key of the incentive for which to stake the NFT\ntokenId uint256 The ID of the token to stake\nunstakeToken \n  function  unstakeToken (\n    struct IUniswapV3Staker .IncentiveKey key ,\n    uint256 tokenId\n  ) external\nCopy\nUnstakes a Uniswap V3 LP  token", "metadata": {"page_number": 987, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fc9c074e5c58", "text": "Parameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The key of the incentive for which to unstake the NFT\ntokenId uint256 The ID of the token to unstake\nclaimReward\n  function  claimReward (\n    contract  IERC20Minimal  rewardToken ,\n    address to,\n    uint256 amountRequested\n  ) external  override returns (uint256 reward)\nCopy\nTransfers amountRequested  of accrued rewardToken  rewards from the contract to the recipient to\nParameters:  \nName Type Description\nrewardTokencontract\nIERC20MinimalThe token being distributed as a reward\nto address The address where claimed rewards will be sent to\namountRequested uint256The amount of reward tokens to claim. Claims entire reward amount if set to\n0.\nReturn Values:", "metadata": {"page_number": 988, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b2eea248e414", "text": "to address The address where claimed rewards will be sent to\namountRequested uint256The amount of reward tokens to claim. Claims entire reward amount if set to\n0.\nReturn Values:  \nName Type Description\nreward uint256 The amount of reward tokens claimed\ngetRewardInfo \n  function  getRewardInfo (\n    struct IUniswapV3Staker .IncentiveKey key ,\n    uint256 tokenId\n  ) external  view override returns (uint256 reward, uint160 secondsInsideX128 )\nCopy\nCalculates the reward amount that will be received for the given stake\nParameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The key of the incentive\ntokenId uint256 The ID of the token\nReturn Values:  \nName Type Description", "metadata": {"page_number": 988, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0b86dc531bd6", "text": "Parameters:  \nName Type Description\nkey struct IUniswapV3Staker .IncentiveKey The key of the incentive\ntokenId uint256 The ID of the token\nReturn Values:  \nName Type Description\nreward uint256 The reward accrued to the NFT  for the given incentive thus far\nsecondsInsideX128 uint160 The seconds inside the tick range", "metadata": {"page_number": 988, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3f99f4a00faf", "text": "Edit this page\nHelpful?\nPrevious\nUniswap V3 Staker Design\nNext\nIUniswapV3Staker\nFunctions\nstakes\nconstructor\ncreateIncentive\nendIncentive\nonERC721Received\ntransferDeposit\nwithdrawT oken\nstakeT oken\nunstakeT oken\nclaimReward\ngetRewardInfo\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets", "metadata": {"page_number": 989, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1df0dfb62251", "text": "uniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 989, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9180a685d310", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nUniswapV3Factory\nUniswapV3Pool\nUniswapV3PoolDeployer\nInterfaces\nLibraries\nBitMath\nFixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside", "metadata": {"page_number": 991, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "29b4d03b9d96", "text": "FixedPoint128\nFixedPoint96\nFullMath\nLiquidityMath\nLowGasSafeMath\nOracle\nPosition\nSafeCast\nSecondsOutside\nSqrtPriceMath\nSwapMath\nTick\nTickBitmap\nTickMath\nTransferHelper\nUnsafeMath\nGovernance\nPeriphery\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000", "metadata": {"page_number": 991, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "aad8a8880f9c", "text": "V3 Protocol\nTechnical Reference\nCore\nLibraries\nUnsafeMathHelpful?\nOn this page\nUnsafeMath\nContains methods that perform common math functions but do not do any overflow or underflow checks\nFunctions  \ndivRoundingUp \n  function  divRoundingUp (\n    uint256 x,\n    uint256 y\n  ) internal  pure returns (uint256 z)\nCopy\nReturns ceil(x / y)\npanics if y == 0\nParameters:  \nName Type Description\nx uint256 The dividend\ny uint256 The divisor\nReturn Values:  \nName Type Description\nz uint256 The quotient, ceil(x / y)\nEdit this page\nHelpful?\nPrevious\nTransferHelper", "metadata": {"page_number": 992, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "660fcf433372", "text": "Return Values:  \nName Type Description\nz uint256 The quotient, ceil(x / y)\nEdit this page\nHelpful?\nPrevious\nTransferHelper\nNext\nOverview\nFunctions\ndivRoundingUp\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub", "metadata": {"page_number": 992, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "101812785ec9", "text": "uniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 993, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ca0ec576d50d", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nSmart Contract Integration\nSmart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance", "metadata": {"page_number": 996, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ba31e57b070a", "text": "Smart Contract Quick start\nImplement a Swap\nProviding Liquidity\nBuilding an Oracle\nFlash Swaps\nPair Addresses\nSupporting meta transactions\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides\nSmart Contract Integration\nFlash SwapsHelpful?\nOn this page\nFlash Swaps\nFlash swaps are an integral feature of Uniswap V2. In fact, under the hood, all swaps are actually flash swaps! This simply means that pair\ncontracts send output tokens to the recipient befor e enforcing that enough input tokens have been received. This is slightly atypical, as one\nmight expect a pair to ensure it's received payment before delivery . However , because Ethereum transactions are atomic , we can roll back", "metadata": {"page_number": 996, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a804fce686ca", "text": "contracts send output tokens to the recipient befor e enforcing that enough input tokens have been received. This is slightly atypical, as one\nmight expect a pair to ensure it's received payment before delivery . However , because Ethereum transactions are atomic , we can roll back\nthe entire swap if it turns out that the contract hasn't received enough tokens to make itself whole by the end of the transaction.\nTo see how this all works, let's start by examining the interface of the swap  function:", "metadata": {"page_number": 996, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7967d53ea176", "text": "function  swap(uint amount0Out , uint amount1Out , address to, bytes calldata  data);\nCopy\nFor the sake of example, let's assume that we're dealing with a DAI/WETH pair , where DAI is token0  and WETH is token1 . amount0Out\nand amount1Out  specify the amount of DAI and WETH that the msg.sender  wants the pair to send to the to address (one of these amounts\nmay be 0). At this point you may be wondering how the contract receives  tokens. For a typical (non-flash) swap, it's actually the\nresponsibility of msg.sender  to ensure that enough WETH or DAI has already been sent  to the pair before swap  is called (in the context of\ntrading, this is all handled neatly by a router contract). But when executing a flash swap, tokens do not need to be sent to the contract befor e\ncalling swap . Instead, they must be sent from within a callback function  that the pair triggers on the to address.", "metadata": {"page_number": 997, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2ed0e70615c2", "text": "calling swap . Instead, they must be sent from within a callback function  that the pair triggers on the to address.\nTriggering a Flash Swap\nTo differentiate between the \"typical\" trading case and the flash swap case, pairs use the data  parameter . Specifically , if data.length\nequals 0, the contract assumes that payment has already been received, and simply transfers the tokens to the to address. But, if\ndata.length  is greater than 0, the contract transfers the tokens and then calls the following function on the to address:\nfunction  uniswapV2Call (address sender, uint amount0 , uint amount1 , bytes calldata  data);\nCopy\nThe logic behind this identification strategy is simple: the vast majority of valid flash swap use cases involve interactions with external\nprotocols. The best way to pass information dictating how these interactions happen (function ar guments, safety parameters, addresses, etc.)", "metadata": {"page_number": 997, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "28c4a299abf8", "text": "Copy\nThe logic behind this identification strategy is simple: the vast majority of valid flash swap use cases involve interactions with external\nprotocols. The best way to pass information dictating how these interactions happen (function ar guments, safety parameters, addresses, etc.)\nis via the data  parameter . It's expected that data  will be abi.decode d from within uniswapV2Call . In the rare case where no data is\nrequired, callers should ensure that data.length  equals 1 (i.e. encode a single junk byte as bytes ), and then ignore this ar gument in\nuniswapV2Call .\nPairs call uniswapV2Call  with the sender  argument set to the msg.sender  of the swap . amount0  and amount1  are simply amount0Out  and\namount1Out .\nUsing uniswapV2Call\nThere are several conditions that should be checked in all uniswapV2Call  functions:", "metadata": {"page_number": 997, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5718ab535f48", "text": "amount1Out .\nUsing uniswapV2Call\nThere are several conditions that should be checked in all uniswapV2Call  functions:\nfunction  uniswapV2Call (address sender, uint amount0 , uint amount1 , bytes calldata  data) {\n  address token0 = IUniswapV2Pair (msg.sender).token0(); // fetch the address of token0\n  address token1 = IUniswapV2Pair (msg.sender).token1(); // fetch the address of token1\n  assert(msg.sender == IUniswapV2Factory (factoryV2 ).getPair(token0, token1)); // ensure that msg.sender is a V2 pair\n  // rest of the function goes here!\n}\nCopy", "metadata": {"page_number": 997, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cfe901bb09c3", "text": "// rest of the function goes here!\n}\nCopy\nThe first 2 lines simply fetch the token addresses from the pair , and the 3rd ensures that the msg.sender  is an actual Uniswap V2 pair\naddress.\nRepayment\nAt the end of uniswapV2Call , contracts must return enough tokens to the pair to make it whole. Specifically , this means that the product of\nthe pair reserves after the swap, discounting all token amounts sent by 0.3% LP  fee, must be greater than before.\nMulti-T oken  \nIn the case where the token withdrawn is not the token returned (i.e. DAI was requested in the flash swap, and WETH was returned, or vice\nversa), the fee simplifies to the simple swap case. This means that the standard getAmountIn  pricing function should be used to calculate\ne.g., the amount of WETH that must be returned in exchange for the amount of DAI that was requested out.", "metadata": {"page_number": 997, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "96e7e3da76df", "text": "versa), the fee simplifies to the simple swap case. This means that the standard getAmountIn  pricing function should be used to calculate\ne.g., the amount of WETH that must be returned in exchange for the amount of DAI that was requested out.\nThis type of fee calculation gives a slight advantage to the caller , as the fee derived from repayment in a corresponding token will always\nbe slightly less than the fee derived from a direct token repayment, as a result of the dif ference between the amount required to pay back a\nswap, versus the amount withdrawn and then directly returned. The approximate comparison of fees is ~ 30 bps for a swap fee vs. 30.09\nbps for a direct repayment.\nSingle-T oken", "metadata": {"page_number": 997, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "49e40384c16b", "text": "In the case where the token withdrawn is the same  as the token returned (i.e. DAI was requested in the flash swap, used, then returned, or\nvice versa with WETH), the following condition must be satisfied:\nDAIReservePre - DAIWithdrawn + (DAIReturned * .997) >= DAIReservePre\nIt may be more intuitive to rewrite this formula in terms of a \"fee\" levied on the withdrawn  amount (despite the fact that Uniswap always\nlevies fees on input amounts, in this case the returned  amount, here we can simplify to an ef fective fee on the withdrawn  amount). If we\nrearrange, the formula looks like:\n(DAIReturned * .997) - DAIWithdrawn >= 0\nDAIReturned >= DAIWithdrawn / .997\nSo, the ef fective fee on the withdrawn amount is .003 / .997 \u2248 0.3009027% .\nResour ces", "metadata": {"page_number": 998, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4970139577a2", "text": "DAIReturned >= DAIWithdrawn / .997\nSo, the ef fective fee on the withdrawn amount is .003 / .997 \u2248 0.3009027% .\nResour ces\nFor further exploration of flash swaps, see the whitepaper .\nExample\nA fully functional example of flash swaps is available: ExampleFlashSwap.sol .\nInterface\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Callee.sol' ;\nCopy\npragma solidity  >=0.5.0;\ninterface  IUniswapV2Callee  {\n  function  uniswapV2Call (address sender, uint amount0 , uint amount1 , bytes calldata  data) external ;\n}\nCopy\nEdit this page\nHelpful?\nPrevious\nBuilding an Oracle\nNext", "metadata": {"page_number": 998, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0e41fd1109e8", "text": "}\nCopy\nEdit this page\nHelpful?\nPrevious\nBuilding an Oracle\nNext\nPair Addresses\nMulti-T oken\nSingle-T oken\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp", "metadata": {"page_number": 998, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "843b6f6b7b3f", "text": "Analytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 999, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "38fd6573be24", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nUniversal Router\nPermit2\nV2 Protocol\nOverview\nConcepts\nProtocol Overview\nCore Concepts\nAdvanced Topics\nGuides\nInterface Integration\nUsing the API\nCustom Linking\nIframe Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides", "metadata": {"page_number": 1000, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "04f603ca638c", "text": "Custom Linking\nIframe Integration\nSmart Contract Integration\nTechnical Reference\nAPI\nGovernance\nSmart Contracts\nV1 Protocol\n\u0000\nV2 Protocol\nGuides\nInterface Integration\nUsing the APIHelpful?\nOn this page\nUsing the API\nIn this guide we will create a web interface that consumes and displays data from the Uniswap Subgraph. The goal is to\nprovide a quick overview of a setup that you can extend to create your own UIs and analytics around Uniswap data.", "metadata": {"page_number": 1000, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f8d419623cd5", "text": "Many dif ferent libraries can be used to create an interface and a connection to the subgraph graphql endpoint, but in this\nguide we will use React  for the interface, and Apollo Client  for sending queries. We'll also be using yarn for dependency\nmanagement.\nSetup and Installs \nWe'll need to create the basic skeleton for the application. We'll use create-react-app  for this. We'll also add the dependencies\nwe need. Navigate to your root location in your command line and run:\nyarn create react -app uniswap -demo\ncd uniswap -demo\nyarn add  apollo -client apollo -cache-inmemory apollo -link-http graphql graphql -tag @apollo /react-hooks\nyarn start\nCopy\nIn your browser you should see the default React app running. In a text editor open App.js  within src and replace the", "metadata": {"page_number": 1001, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b627742a765e", "text": "yarn start\nCopy\nIn your browser you should see the default React app running. In a text editor open App.js  within src and replace the\ncontents with this stripped down boilerplate. We'll add to this as we go.\nimport React from 'react'\nimport './App.css'\nfunction  App() {\n  return <div></div>\n}\nexport default App\nCopy\nGraphql Client \nWe need to set up some middleware in order to make requests to the Uniswap subgraph and receive data. To do this we'll use\nApollo and create a graphql client to handle this.\n1. Add the imports shown below and instantiate a new client instance. Notice how we use the link to the Uniswap\nsubgraph here.\nimport React from 'react'\nimport './App.css'", "metadata": {"page_number": 1001, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "07da54c9972f", "text": "1. Add the imports shown below and instantiate a new client instance. Notice how we use the link to the Uniswap\nsubgraph here.\nimport React from 'react'\nimport './App.css'\nimport { ApolloClient  } from 'apollo-client'\nimport { InMemoryCache  } from 'apollo-cache-inmemory'\nimport { HttpLink  } from 'apollo-link-http'\nexport const client = new ApolloClient ({\n  link: new HttpLink ({\n    uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2' ,\n  }),\n  cache: new InMemoryCache (),\n})\nfunction  App() {\n  return <div></div>\n}\nexport default App\nCopy", "metadata": {"page_number": 1001, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fa1ab2b29462", "text": "cache: new InMemoryCache (),\n})\nfunction  App() {\n  return <div></div>\n}\nexport default App\nCopy\n2. We also need to add a context so that Apollo can handle requests properly . In your index.js  file import the proper\nprovider and wrap the root in it like this:\nimport React from 'react'\nimport ReactDOM  from 'react-dom'", "metadata": {"page_number": 1001, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eb069dc0146e", "text": "import App from './App'\nimport registerServiceWorker  from './registerServiceWorker'\nimport './index.css'\nimport { ApolloProvider  } from 'react-apollo'\nimport { client } from './App'\nReactDOM .render(\n  <ApolloProvider  client={client}>\n    <App />\n  </ApolloProvider >,\n  document .getElementById ('root')\n)\nregisterServiceWorker ()\nCopy\nWriting the queries \nNext we'll construct our query and fetch data. For this example we will fetch some data about the Dai token on Uniswap V2.\nWe'll get the current price, and total liquidity across all pairs. We'll be using the Dai address as an id in this query . We'll also", "metadata": {"page_number": 1002, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4f4a76b8cb35", "text": "We'll get the current price, and total liquidity across all pairs. We'll be using the Dai address as an id in this query . We'll also\nfetch the USD price of ETH to help create USD conversion for Dai data.\n1. First we need to define the query itself. We'll use gql to parse a query string into the GraphQL  AST standard. Import\nthe gql helper into the app and use it to create the query . Add the following to your App.js  file:\nimport gql from 'graphql-tag'\nconst DAI_QUERY  = gql`\n  query tokens($tokenAddress: Bytes!) {\n    tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }\n`\nconst ETH_PRICE_QUERY  = gql`\n  query ethPrice {", "metadata": {"page_number": 1002, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "59b90c41cf27", "text": "derivedETH\n      totalLiquidity\n    }\n  }\n`\nconst ETH_PRICE_QUERY  = gql`\n  query ethPrice {\n    bundle(id: \"1\") {\n      ethPrice\n    }\n  }\n`\nCopy\nWe use an id of 1 for the bundle because there is only one hardcoded bundle in the subgraph.\nFetch data \nNow we're ready to use these queries to fetch data from the Uniswap V2 subgraph. To do this we can use the useQuery  hook\nwhich uses our client instance to fetch data, and gives us live info about the status of the request. To do this add the\nfollowing to your App.js  file:\nimport { useQuery } from '@apollo/react-hooks'", "metadata": {"page_number": 1002, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3ad88756b437", "text": "which uses our client instance to fetch data, and gives us live info about the status of the request. To do this add the\nfollowing to your App.js  file:\nimport { useQuery } from '@apollo/react-hooks'\nconst { loading , error, data: ethPriceData } = useQuery (ETH_PRICE_QUERY )\nconst {\n  loading : daiLoading ,\n  error: daiError ,\n  data: daiData ,\n} = useQuery (DAI_QUERY , {\n  variables : {\n    tokenAddress : '0x6b175474e89094c44da98b954eedeac495271d0f' ,", "metadata": {"page_number": 1002, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5e3f39063fe5", "text": "},\n})\nCopy\nNotice we're using the Dai token address to fetch data about Dai.\nFormatting Response \nNow that we have our data we can format it and display it in the UI. First, we parse the return data to get the actual data that\nwe want. Then we'll use it to get the USD price of Dai. Lastly we'll insert this data into the UI itself.\nThese queries will return a response object for each query . Within each one we're interested in the root field we defined in\nthe query definition. For the daiData  response we defined this as tokens , and for the ethPriceData  query we defined this\nas ethPrice . Within each one we'll get an array of results. Because we're only querying for single entities we'll reference the\n0 index in the data array .\nAdd the following lines to your App.js  file to parse the responses:", "metadata": {"page_number": 1003, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "41b1609109b4", "text": "0 index in the data array .\nAdd the following lines to your App.js  file to parse the responses:\nconst daiPriceInEth = daiData && daiData .tokens[0].derivedETH\nconst daiTotalLiquidity = daiData && daiData .tokens[0].totalLiquidity\nconst ethPriceInUSD = ethPriceData && ethPriceData .bundles[0].ethPrice\nCopy\nDisplaying in the UI \nFinally we can use our parsed response data to hydrate the UI. We'll do this in two steps.\n1. First we'll create loading states. To detect if a query is still pending a response we can reference the loading variables\nwe've already defined. We'll add two loading states, one for the Dai price, and one for the Dai total liquidity . These\nmay flicker fast because the time to query is fast.", "metadata": {"page_number": 1003, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2e59249e4cc4", "text": "we've already defined. We'll add two loading states, one for the Dai price, and one for the Dai total liquidity . These\nmay flicker fast because the time to query is fast.\n2. Populate with loaded data. Once we detect that the queries have finished loading we can populate the UI with the real\ndata.\nTo do this add the following lines in the return function of your App.js  file:\nreturn (\n  <div>\n    <div>\n      Dai price:{' '}\n      {ethLoading || daiLoading\n        ? 'Loading token data...'\n        : '$' +\n          // parse responses as floats and fix to 2 decimals\n          (parseFloat (daiPriceInEth ) * parseFloat (ethPriceInUSD )).toFixed(2)}\n    </div>\n    <div>", "metadata": {"page_number": 1003, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "809b3495379b", "text": "(parseFloat (daiPriceInEth ) * parseFloat (ethPriceInUSD )).toFixed(2)}\n    </div>\n    <div>\n      Dai total liquidity :{' '}\n      {daiLoading\n        ? 'Loading token data...'\n        : // display the total amount of DAI spread across all pools\n          parseFloat (daiTotalLiquidity ).toFixed(0)}\n    </div>\n  </div>\n)\nCopy\nNext steps", "metadata": {"page_number": 1003, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "64f4a01b4ead", "text": "This should render a very basic page with these two stats about the Dai token within Uniswap. This is a very basic example\nof what you can do with the Uniswap subgraph and we encourage you to build out more complex and interesting tools!\nYou can visit our analytics site  to see a more advanced analytics page, or visit the github  for more detailed examples of\nusing the Uniswap subgraph to create UIs.\nReview \nIn the end your App.js  file should look like this:\nimport React, { useEffect } from 'react'\nimport './App.css'\nimport { ApolloClient  } from 'apollo-client'\nimport { InMemoryCache  } from 'apollo-cache-inmemory'\nimport { HttpLink  } from 'apollo-link-http'\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'", "metadata": {"page_number": 1004, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db6a8eb619b9", "text": "import { HttpLink  } from 'apollo-link-http'\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nexport const client = new ApolloClient ({\n  link: new HttpLink ({\n    uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2' ,\n  }),\n  fetchOptions : {\n    mode : 'no-cors' ,\n  },\n  cache: new InMemoryCache (),\n})\nconst DAI_QUERY  = gql`\n  query tokens($tokenAddress: Bytes!) {\n    tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }\n`", "metadata": {"page_number": 1004, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5f856444a1e2", "text": "tokens(where: { id: $tokenAddress }) {\n      derivedETH\n      totalLiquidity\n    }\n  }\n`\nconst ETH_PRICE_QUERY  = gql`\n  query bundles {\n    bundles(where: { id: \"1\" }) {\n      ethPrice\n    }\n  }\n`\nfunction  App() {\n  const { loading : ethLoading , data: ethPriceData } = useQuery (ETH_PRICE_QUERY )\n  const { loading : daiLoading , data: daiData } = useQuery (DAI_QUERY , {\n    variables : {\n      tokenAddress : '0x6b175474e89094c44da98b954eedeac495271d0f' ,\n    },\n  })", "metadata": {"page_number": 1004, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8d2c5534fb05", "text": "variables : {\n      tokenAddress : '0x6b175474e89094c44da98b954eedeac495271d0f' ,\n    },\n  })\n  const daiPriceInEth = daiData && daiData .tokens[0].derivedETH\n  const daiTotalLiquidity = daiData && daiData .tokens[0].totalLiquidity\n  const ethPriceInUSD = ethPriceData && ethPriceData .bundles[0].ethPrice\n  return (\n    <div>\n      <div>\n        Dai price:{' '}\n        {ethLoading || daiLoading\n          ? 'Loading token data...'\n          : '$' +\n            // parse responses as floats and fix to 2 decimals", "metadata": {"page_number": 1004, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d4156ff34c1b", "text": "Dai price:{' '}\n        {ethLoading || daiLoading\n          ? 'Loading token data...'\n          : '$' +\n            // parse responses as floats and fix to 2 decimals\n            (parseFloat (daiPriceInEth ) * parseFloat (ethPriceInUSD )).toFixed(2)}\n      </div>\n      <div>", "metadata": {"page_number": 1004, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5ae23ac72326", "text": "Dai total liquidity :{' '}\n        {daiLoading\n          ? 'Loading token data...'\n          : // display the total amount of DAI spread across all pools\n            parseFloat (daiTotalLiquidity ).toFixed(0)}\n      </div>\n    </div>\n  )\n}\nexport default App\nCopy\nEdit this page\nHelpful?\nPrevious\nResearch\nNext\nCustom Linking\nSetup and Installs\nGraphql Client\nWriting the queries\nFetch data\nFormatting Response\nDisplaying in the UI\nNext steps\nReview\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core", "metadata": {"page_number": 1005, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "516e010f96ae", "text": "Next steps\nReview\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 1005, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "89d278e88b7a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nOverview\nGuides\nTechnical Reference\nAPI V2 Reference\nAPI V1 Reference (Deprecated)\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nSwap Widget\nTechnical Reference\nAPI V1 Reference (Deprecated)Helpful?\nOn this page\nSwap Widget API V1 Refer ence (Depr ecated)", "metadata": {"page_number": 1006, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "117297a03897", "text": "V1 SDK\n\u0000\nSwap Widget\nTechnical Reference\nAPI V1 Reference (Deprecated)Helpful?\nOn this page\nSwap Widget API V1 Refer ence (Depr ecated)\nRequir ed Parameters  \nProp NameProp\nTypeDefault\nValueDescription\njsonRpcEndpoint stringundefinedURI of your JSON-RPC endpoint. Strongly recommended in order to provide trade\nquotes prior to the user connecting a wallet. If none is provided, the widget will be\ncompletely disabled until the user connects a wallet. Once a wallet is connected, the\nwidget will use the wallet\u2019 s JSON-RPC. See Understanding the Swap Widget\nStates .\nprovider anyundefined An EIP-1 193 provider . This is required to swap.\nOptional Parameters", "metadata": {"page_number": 1006, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "00c3de11e892", "text": "Prop Name Prop TypeDefault\nValueDescription\nconvenienceFee number undefinedOptionally , you may char ge a convenience fee on top of\nswaps executed through your web app. The allowed range\nis 1 to 100 basis points (inclusive of 100) consistent with\nthe Uniswap v3 Periphery contract.\nconvenienceFeeRecipient{[chainId:\nnumber]:\nstring}undefinedThe address to receive the convenience fee on each\nnetwork. Required if convenienceFee  is provided.\ndefaultInputTokenAddress{[chainId:\nnumber]:\nstring}string  or\n'NATIVE'Address of the token to be selected by default in the input\nfield (e.g. USDC) for each network chain ID. If left empty\nthe widget will use the native token of the connected\nchain as default. This can be explicitly defined by the", "metadata": {"page_number": 1007, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "173f48a1b2b4", "text": "field (e.g. USDC) for each network chain ID. If left empty\nthe widget will use the native token of the connected\nchain as default. This can be explicitly defined by the\nspecial string 'NATIVE' . For convenience you may pass a\nsingle string instead of a chainId  mapping. In this case,\nthe widget will assume that string corresponds to an L1\nEthereum address with chaindId=1 . Any addresses\nprovided in this parameter must be included in the\ntokenList .\ndefaultInputAmount number 0Default amount for the input field (e.g. 1 ETH). This\nvalue will respect the decimals of the\ndefaultInputTokenAddress . This parameter is valid only\nif defaultInputTokenAddress  is also set. This parameter\nis mutually exclusive with defaultOutputAmount , so you\nmay set only one of defaultInputAmount  and\ndefaultOutputAmount .", "metadata": {"page_number": 1007, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "496cf400b922", "text": "if defaultInputTokenAddress  is also set. This parameter\nis mutually exclusive with defaultOutputAmount , so you\nmay set only one of defaultInputAmount  and\ndefaultOutputAmount .\ndefaultOutputTokenAddress{[chainId:\nnumber]:\nstring}string  or\nundefinedAddress of the token to be selected by default in the input\nfield (e.g. USDC) for each network chain ID. None if left\nempty . Any addresses provided in this parameter must be\nincluded in the tokenList .\ndefaultOutputAmount number 0Default amount for the input field (e.g. 100 USDC). This\nvalue will respect the decimals of the\ndefaultOutputTokenAddress . This parameter is mutually\nexclusive with defaultInputAmount , so you may set only\none of defaultInputAmount  and defaultOutputAmount .", "metadata": {"page_number": 1007, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f43e575e7002", "text": "value will respect the decimals of the\ndefaultOutputTokenAddress . This parameter is mutually\nexclusive with defaultInputAmount , so you may set only\none of defaultInputAmount  and defaultOutputAmount .\nlocale SupportedLocale en-USSpecifies an explicit locale to use for the widget interface.\nThis can be set to one of the values exported by the library\nin SUPPORTED_LOCALES .\nonConnectWallet () => void undefinedIf passed, the \u201cConnect your wallet\u201d message will be\nclickable, and clicking it will trigger this handler function.\nThis can be used to trigger your own wallet connection\nflow from the widget.\nonError ErrorHandler undefinedAn error handler which receives any errors that occur in\nthe widget. This can be used for collecting error metrics.\ntheme Theme lightThemeSpecifies a custom theme (colors, font, and border radii).", "metadata": {"page_number": 1007, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fa6c9dd0c1cf", "text": "the widget. This can be used for collecting error metrics.\ntheme Theme lightThemeSpecifies a custom theme (colors, font, and border radii).\nSee Customizing the Theme .\ntokenList string TokenInfo[]Specifies the set of tokens that appear by default in the\ntoken selector list. Accepts either a URI of a token list as\ndefined by the Token Lists standard, or an inline array of\ntokens. If none is provided, the Uniswap Labs default\ntoken list will be used. See Customizing the Default\nToken List .\nwidth number  or string360 Specifies the width of the widget. If specified as a\nnumber , this is in pixels; otherwise, it is interpreted as a", "metadata": {"page_number": 1007, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "72dc6e332449", "text": "Prop Name Prop TypeDefault\nValueDescription\nCSS <length>  data type. Recommended width is 360px.\nMinimum width is 270px. See Customizing the Width.\nSubscribing to Events  \nDuring the lifecycle of the swap widget, most of the events you will need are available on the web3 provider . For example,\nthe below snippet shows how to listen for events when the wallet account changes or a new wallet connects. You can see\nmore event examples in the MetaMask  docs.\n// Subscribe to messages\ninterface  ProviderMessage  {\n  type: string;\n  data: unknown ;\n}\nethereum .on(\n  'message' ,\n  handler: (message: ProviderMessage ) => void\n);\nCopy\nQuestions?\nJoin the Discord channel  to ask questions and get support from the Uniswap community .", "metadata": {"page_number": 1008, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c8e2140102b0", "text": "'message' ,\n  handler: (message: ProviderMessage ) => void\n);\nCopy\nQuestions?\nJoin the Discord channel  to ask questions and get support from the Uniswap community .\nEdit this page\nHelpful?\nPrevious\nAPI V2 Reference\nNext\nOverview\nRequired Parameters\nOptional Parameters\nSubscribing to Events\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists", "metadata": {"page_number": 1008, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "99f412e9bb1b", "text": "Brand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 1009, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "85b0a99c9373", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nSwap Widget\nOverview\nGuides\nTechnical Reference\nAPI V2 Reference\nAPI V1 Reference (Deprecated)\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nSwap Widget\nTechnical Reference\nAPI V2 ReferenceHelpful?\nOn this page\nSwap Widget API V2 Refer ence\nRecommended Parameters  \nProp Name Prop Type Default Value Description", "metadata": {"page_number": 1012, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9158b9074168", "text": "\u0000\nSwap Widget\nTechnical Reference\nAPI V2 ReferenceHelpful?\nOn this page\nSwap Widget API V2 Refer ence\nRecommended Parameters  \nProp Name Prop Type Default Value Description\nproviderJsonRpcProvider  or\nEip1193Providerundefined An EIP-1 193 provider . See Web3 provider .\njsonRpcUrlMap{ [chainId:\nnumber]: string[]\n}JSON_RPC_FALLBACK_ENDPOINTSMapping of your JSON-RPC endpoint URLs\nindexed by chainId, used to provide trade quotes\nprior to the user connecting a wallet. If none are\nprovided for a chain, the widget will fallback to\npublic JSON-RPC endpoints, which are unreliable\nand rate-limited. See JSON-RPC Endpoints .\nOptional Parameters", "metadata": {"page_number": 1012, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c2de2c865a90", "text": "Prop Name Prop TypeDefault\nValueDescription\nconvenienceFee number undefinedOptionally , you may char ge a convenience\nfee on top of swaps executed through your\nweb app. The allowed range is 1 to 100\nbasis points paid in the output token of a\nswap, consistent with the Uniswap v3\nPeriphery contract.\nconvenienceFeeRecipient {[chainId: number]: string} undefinedThe address to receive the convenience fee\non each network. Required if\nconvenienceFee  is provided.\ndefaultChainId number 1You may specify which chainId you want to\nprompt a user to connect their wallet to. See\na list of all chains supported on widget.\ndefaultInputTokenAddress {[chainId: number]: string}string  or\n'NATIVE'Address of the token to be selected by\ndefault in the input field (e.g. USDC) for", "metadata": {"page_number": 1013, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e311303a631e", "text": "defaultInputTokenAddress {[chainId: number]: string}string  or\n'NATIVE'Address of the token to be selected by\ndefault in the input field (e.g. USDC) for\neach network chain ID. If left empty the\nwidget will use the native token of the\nconnected chain as default. This can be\nexplicitly defined by the special string\n'NATIVE' . For convenience you may pass a\nsingle string instead of a chainId  mapping.\nIn this case, the widget will assume that\nstring corresponds to an L1 Ethereum\naddress with chaindId=1 . Any addresses\nprovided in this parameter must be included\nin the tokenList .\ndefaultInputAmount number 0Default amount for the input field (e.g. 1\nETH). This value will respect the decimals\nof the defaultInputTokenAddress . This\nparameter is valid only if", "metadata": {"page_number": 1013, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8d9f803333e0", "text": "defaultInputAmount number 0Default amount for the input field (e.g. 1\nETH). This value will respect the decimals\nof the defaultInputTokenAddress . This\nparameter is valid only if\ndefaultInputTokenAddress  is also set.\nThis parameter is mutually exclusive with\ndefaultOutputTokenAmount , so you may\nset only one of defaultInputTokenAmount\nand defaultOutputTokenAmount .\ndefaultOutputTokenAddress {[chainId: number]: string}string  or\nundefinedAddress of the token to be selected by\ndefault in the input field (e.g. USDC) for\neach network chain ID. None if left empty .\nAny addresses provided in this parameter\nmust be included in the tokenList .\ndefaultOutputAmount number 0Default amount for the input field (e.g. 100", "metadata": {"page_number": 1013, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "e74ef3363c14", "text": "each network chain ID. None if left empty .\nAny addresses provided in this parameter\nmust be included in the tokenList .\ndefaultOutputAmount number 0Default amount for the input field (e.g. 100\nUSDC). This value will respect the decimals\nof the defaultOutputTokenAddress . This\nparameter is mutually exclusive with\ndefaultInputTokenAmount , so you may set\nonly one of defaultInputTokenAmount\nand defaultOutputTokenAmount .\nhideConnectionUI boolean falseHide the widget's built-in wallet connection\nUI, including the connected account chip &\n'Connect wallet to swap' button.\nlocale SupportedLocale en-USSpecifies an explicit locale to use for the\nwidget interface. This can be set to one of\nthe values exported by the library in\nSUPPORTED_LOCALES .", "metadata": {"page_number": 1013, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6a04da9a19f2", "text": "Prop Name Prop TypeDefault\nValueDescription\nonConnectWalletClick() => void  or () =>\nPromise<boolean>undefinedIf passed, allows you to add custom\nbehavior when the user clicks on the\n'Connect your wallet to swap' button. To\nmanage displaying the widget's built-in\nwallet connection modal, return a resolved\npromise with resolve(true/false) .\nonSwitchChain(addChainParameter:\nAddEthereumChainParameter)\n=> void  or Promise<void>undefinedAn integration hook called when the user\ntries to switch chains. If the hook returns a\nPromise, it is assumed the integrator is\nattempting to switch the chain, and no\nfurther attempts will be made. If that\nPromise rejects, the error will be ignored so\nas not to crash the widget.", "metadata": {"page_number": 1014, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "abf165edafa5", "text": "Promise, it is assumed the integrator is\nattempting to switch the chain, and no\nfurther attempts will be made. If that\nPromise rejects, the error will be ignored so\nas not to crash the widget.\nonError ErrorHandler undefinedAn error handler which receives any\nJavascript errors that occur in the widget.\nThis can be used for collecting error metrics.\nonReviewSwapClick() => void  or () =>\nPromise<boolean>undefinedIf passed, allows you to add custom\nbehavior when the user clicks on the 'review\nswap' button. To manage progression to the\nreview screen (i.e. to add a pre-swap\nwarning speedbump), return a resolved\npromise with resolve(true/false) .\nonTokenSelectorClick(f: Field) => void \\| (f:\nField) => Promise<boolean", "metadata": {"page_number": 1014, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1d66869ff460", "text": "warning speedbump), return a resolved\npromise with resolve(true/false) .\nonTokenSelectorClick(f: Field) => void \\| (f:\nField) => Promise<boolean\n\\| void>undefinedA click handler fired with the selected Field\n('INPUT'\\|'OUTPUT' ) when the user clicks\non a token selector dropdown. To manage\nprogression to the native token selector view\n(i.e. to utilize your own external token\nselector UI), return a resolved promise with\nresolve(true/false).\nonTxFail(error: Error, data: any)\n=> voidundefinedAn error handler which receives error data\nfor on-chain transaction failures. Does not\ninclude when user cancels a transaction or if\na transaction isn't able to be submitted.\nonTxSubmit(txHash: string, data: any)", "metadata": {"page_number": 1014, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "d5eee9900bcc", "text": "for on-chain transaction failures. Does not\ninclude when user cancels a transaction or if\na transaction isn't able to be submitted.\nonTxSubmit(txHash: string, data: any)\n=> voidundefinedA handler that receives the transaction hash\nand related data when a user submits a\ntransaction.\nonTxSuccess(txHash: string, data: any)\n=> voidundefinedA handler that receives the transaction hash\nand related data when a transaction succeeds\non-chain.\nrouterUrl string undefinedOptionally provide a base URL  to your own\nhosted instance of the Uniswap Router API.\nIf none is provided, the optimal trade route\nis computed by running the\n@uniswap/smart-order -router package\nlocally in the browser; this can take a few\nseconds to load & is slower . You also may", "metadata": {"page_number": 1014, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b39e7312e0bf", "text": "is computed by running the\n@uniswap/smart-order -router package\nlocally in the browser; this can take a few\nseconds to load & is slower . You also may\nbe able to find more optimal routes using\nthe Router API! See more about deploying\nthe Router API.\ntheme Theme lightThemeSpecifies a custom theme (colors, font, and\nborder radii). See Customizing the Theme .\ntokenList string TokenInfo[] Specifies the set of tokens that appear by\ndefault in the token selector list. Accepts\neither a URI of a token list as defined by the", "metadata": {"page_number": 1014, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cf0b39183ba2", "text": "Prop Name Prop TypeDefault\nValueDescription\nToken Lists standard, or an inline array of\ntokens. If none is provided, the Uniswap\nLabs default token list will be used. See\nCustomizing the Default Token List .\nwidth number  or string 360Specifies the width of the widget. If\nspecified as a number , this is in pixels;\notherwise, it is interpreted as a CSS\n<length>  data type. Recommended width is\n360px. Minimum width is 300px. See\nCustomizing the Width.\nbrandedFooter boolean trueEnables the \"Powered by Uniswap\" footer at\nthe bottom of the widget.\ndialog HTMLDivElement undefinedSpecifies the element to portal widget\ndialogs (e.g. Summary , Transaction dialogs)\ninto.", "metadata": {"page_number": 1015, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fa6b6f1e6d5e", "text": "the bottom of the widget.\ndialog HTMLDivElement undefinedSpecifies the element to portal widget\ndialogs (e.g. Summary , Transaction dialogs)\ninto.\ndialogOptions DialogOptions undefinedSpecifies more custom dialog behavior , like\ntransition animations.\nSubscribing to Events  \nDuring the lifecycle of the swap widget, most of the events you will need are available on the web3 provider . For example,\nthe below snippet shows how to listen for events when the wallet account changes or a new wallet connects. You can see\nmore event examples in the MetaMask  docs.\n// Subscribe to messages\ninterface  ProviderMessage  {\n  type: string;\n  data: unknown ;\n}\nethereum .on(\n  'message' ,\n  handler: (message: ProviderMessage ) => void\n);", "metadata": {"page_number": 1015, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "84fcf7f01fd8", "text": "type: string;\n  data: unknown ;\n}\nethereum .on(\n  'message' ,\n  handler: (message: ProviderMessage ) => void\n);\nCopy\nQuestions?\nJoin the Discord channel  to ask questions and get support from the Uniswap community .\nEdit this page\nHelpful?\nPrevious\nExample Themes\nNext\nAPI V1 Reference (Deprecated)\nRecommended Parameters\nOptional Parameters\nSubscribing to Events\nDevelopers\nFeedback\nBug Bounty", "metadata": {"page_number": 1015, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "83835c156395", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 1016, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6e88e1302b9a", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol", "metadata": {"page_number": 1017, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a02b112f15b4", "text": "SwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol\nV1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nV3MigratorHelpful?\nOn this page\nV3Migrator\nFunctions", "metadata": {"page_number": 1017, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2784b2fac5b7", "text": "constructor \n  function  constructor (\n  ) public\nCopy\nreceive \n  function  receive(\n  ) external\nCopy\nmigrate \n  function  migrate(\n  ) external\nCopy\nEdit this page\nHelpful?\nPrevious\nSwapRouter\nNext\nDeployment Addresses\nFunctions\nconstructor\nreceive\nmigrate\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance", "metadata": {"page_number": 1018, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1547b517dfca", "text": "uniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord", "metadata": {"page_number": 1018, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f302f56f9f32", "text": "Twitter\nBlog", "metadata": {"page_number": 1019, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "39cfda29be11", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 Protocol\nOverview\nGuides\nSet Up Your Local Environment\nImplement A Swap\nProviding Liquidity\nLiquidity Mining\nImplement Flash Swaps\nGovernance Proposals\nTechnical Reference\nOverview\nCore\nGovernance\nPeriphery\nBase\nInterfaces\nLens\nLibraries\nBase64\nBytesLib\nCallbackV alidation\nChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress", "metadata": {"page_number": 1021, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f51b7e0e2318", "text": "ChainId\nHexStrings\nLiquidityAmounts\nNFTDescriptor\nNFTSVG\nOracleLibrary\nPath\nPoolAddress\nPoolT icksCounter\nPositionKey\nTokenRatioSortOrder\nTransferHelper\nWeightedOracleLibrary\nStaker\nTest\nNonfungiblePositionManager\nNonfungibleT okenPositionDescriptor\nSwapRouter\nV3Migrator\nDeployment Addresses\nError Codes\nUniversal Router\nPermit2\nV2 Protocol", "metadata": {"page_number": 1021, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "73ee62b774d7", "text": "V1 Protocol\n\u0000\nV3 Protocol\nTechnical Reference\nPeriphery\nLibraries\nWeightedOracleLibraryHelpful?\nOn this page\nWeightedOracleLibrary\nProvides functions to integrate with dif ferent tier oracles of the same V3 pair\nFunctions  \nconsult \n  function  consult(\n    address pool,\n    uint32 period\n  ) internal  view returns (struct WeightedOracleLibrary .PeriodObservation observation )\nCopy\nFetches a time-weighted observation for a given Uniswap V3 pool\nParameters:  \nName Type Description\npool address Address of the pool that we want to observe\nperiod uint32 Number of seconds in the past to start calculating the time-weighted observation\nReturn Values:  \nName Type Description", "metadata": {"page_number": 1022, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4d90d52a77c0", "text": "Parameters:  \nName Type Description\npool address Address of the pool that we want to observe\nperiod uint32 Number of seconds in the past to start calculating the time-weighted observation\nReturn Values:  \nName Type Description\nobservation address An observation that has been time-weighted from (block.timestamp - period) to block.timestamp\ngetArithmeticMeanTickWeightedByLiquidity \n  function  getArithmeticMeanTickWeightedByLiquidity (\n    struct WeightedOracleLibrary .PeriodObservation [] observations\n  ) internal  pure returns (int24 arithmeticMeanWeightedTick )\nCopy\nGiven some time-weighted observations, calculates the arithmetic mean tick, weighted by liquidity\nIn most scenarios, each entry of observations  should share the same period  and underlying pool  tokens. If period  differs\nacross observations, the result becomes dif ficult to interpret and is likely biased/manipulable. If the underlying pool  tokens", "metadata": {"page_number": 1022, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0192f9d2c475", "text": "In most scenarios, each entry of observations  should share the same period  and underlying pool  tokens. If period  differs\nacross observations, the result becomes dif ficult to interpret and is likely biased/manipulable. If the underlying pool  tokens\ndiffer across observations, extreme care must be taken to ensure that both prices and liquidity values are comparable. Even if\nprices are commensurate (e.g. two dif ferent USD-stable assets against ETH), liquidity values may not be, as decimals can\ndiffer between tokens.\nParameters:", "metadata": {"page_number": 1022, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "75e47c039e66", "text": "Name Type Description\nobservations struct WeightedOracleLibrary .PeriodObservation[] A list of time-weighted observations\nReturn Values:  \nName Type Description\narithmeticMeanWeightedTickstruct\nWeightedOracleLibrary .PeriodObservation[]The arithmetic mean tick, weighted by the\nobservations' time-weighted harmonic\naverage liquidity\nEdit this page\nHelpful?\nPrevious\nTransferHelper\nNext\nUniswap V3 Staker Design\nFunctions\nconsult\ngetArithmeticMeanT ickW eightedByLiquidity\nDevelopers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery", "metadata": {"page_number": 1023, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "55f5b5484e48", "text": "#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 1023, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6127af4385ea", "text": "Uniswap v2 Core\nHayden Adams\nhayden@uniswap.orgNoah Zinsmeister\nnoah@uniswap.orgDan Robinson\ndan@paradigm.xyz\nMarch 2020\nAbstract\nThis technical whitepaper explains some of the design decisions behind the Uniswap\nv2 core contracts. It covers the contracts' new features|including arbitrary pairs\nbetween ERC20s, a hardened price oracle that allows other contracts to estimate the\ntime-weighted average price over a given interval, \\\rash swaps\" that allow traders to\nreceive assets and use them elsewhere before paying for them later in the transaction,\nand a protocol fee that can be turned on in the future. It also re-architects the contracts\nto reduce their attack surface. This whitepaper describes the mechanics of Uniswap v2's\n\\core\" contracts including the pair contract that stores liquidity providers' funds|and\nthe factory contract used to instantiate pair contracts.", "metadata": {"page_number": 1024, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "6fe7b4a69323", "text": "to reduce their attack surface. This whitepaper describes the mechanics of Uniswap v2's\n\\core\" contracts including the pair contract that stores liquidity providers' funds|and\nthe factory contract used to instantiate pair contracts.\n1 Introduction\nUniswap v1 is an on-chain system of smart contracts on the Ethereum blockchain, imple-\nmenting an automated liquidity protocol based on a \\constant product formula\" [1]. Each\nUniswap v1 pair stores pooled reserves of two assets, and provides liquidity for those two\nassets, maintaining the invariant that the product of the reserves cannot decrease. Traders\npay a 30-basis-point fee on trades, which goes to liquidity providers. The contracts are\nnon-upgradeable.\nUniswap v2 is a new implementation based on the same formula, with several new highly-\ndesirable features. Most signi\fcantly, it enables the creation of arbitrary ERC20/ERC20", "metadata": {"page_number": 1024, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a2cffe198e39", "text": "non-upgradeable.\nUniswap v2 is a new implementation based on the same formula, with several new highly-\ndesirable features. Most signi\fcantly, it enables the creation of arbitrary ERC20/ERC20\npairs, rather than supporting only pairs between ERC20 and ETH. It also provides a hard-\nened price oracle that accumulates the relative price of the two assets at the beginning of\neach block. This allows other contracts on Ethereum to estimate the time-weighted average\nprice for the two assets over arbitrary intervals. Finally, it enables \\\rash swaps\" where users\ncan receive assets freely and use them elsewhere on the chain, only paying for (or returning)\nthose assets at the end of the transaction.\nWhile the contract is not generally upgradeable, there is a private key that has the\nability to update a variable on the factory contract to turn on an on-chain 5-basis-point fee", "metadata": {"page_number": 1024, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3b95841b7d08", "text": "those assets at the end of the transaction.\nWhile the contract is not generally upgradeable, there is a private key that has the\nability to update a variable on the factory contract to turn on an on-chain 5-basis-point fee\non trades. This fee will initially be turned o\u000b, but could be turned on in the future, after\nwhich liquidity providers would earn 25 basis points on every trade, rather than 30 basis\npoints.\nAs discussed in section 3, Uniswap v2 also \fxes some minor issues with Uniswap v1, as\nwell as rearchitecting the implementation, reducing Uniswap's attack surface and making\nthe system more easily upgradeable by minimizing the logic in the \\core\" contract that\nholds liquidity providers' funds.\n1", "metadata": {"page_number": 1024, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "a667c91c9aa5", "text": "This paper describes the mechanics of that core contract, as well as the factory contract\nused to instantiate those contracts. Actually using Uniswap v2 will require calling the\npair contract through a \\router\" contract that computes the trade or deposit amount and\ntransfers funds to the pair contract.\n2 New features\n2.1 ERC-20 pairs\nUniswap v1 used ETH as a bridge currency. Every pair included ETH as one of its\nassets. This makes routing simpler|every trade between ABC and XYZ goes through the\nETH/ABC pair and the ETH/XYZ pair|and reduces fragmentation of liquidity.\nHowever, this rule imposes signi\fcant costs on liquidity providers. All liquidity providers\nhave exposure to ETH, and su\u000ber impermanent loss based on changes in the prices of other\nassets relative to ETH. When two assets ABC and XYZ are correlated|for example, if", "metadata": {"page_number": 1025, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f0ce242b84bd", "text": "have exposure to ETH, and su\u000ber impermanent loss based on changes in the prices of other\nassets relative to ETH. When two assets ABC and XYZ are correlated|for example, if\nthey are both USD stablecoins|liquidity providers on a Uniswap pair ABC/XYZ would\ngenerally be subject to less impermanent loss than the ABC/ETH or XYZ/ETH pairs.\nUsing ETH as a mandatory bridge currency also imposes costs on traders. Traders have\nto pay twice as much in fees as they would on a direct ABC/XYZ pair, and they su\u000ber\nslippage twice.\nUniswap v2 allows liquidity providers to create pair contracts for any two ERC-20s.\nA proliferation of pairs between arbitrary ERC-20s could make it somewhat more di\u000ecult\nto \fnd the best path to trade a particular pair, but routing can be handled at a higher layer\n(either o\u000b-chain or through an on-chain router or aggregator).", "metadata": {"page_number": 1025, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "058be2829fb8", "text": "to \fnd the best path to trade a particular pair, but routing can be handled at a higher layer\n(either o\u000b-chain or through an on-chain router or aggregator).\n2.2 Price oracle\nThe marginal price o\u000bered by Uniswap (not including fees) at time tcan be computed\nby dividing the reserves of asset aby the reserves of asset b.\npt=ra\nt\nrb\nt(1)\nSince arbitrageurs will trade with Uniswap if this price is incorrect (by a su\u000ecient amount\nto make up for the fee), the price o\u000bered by Uniswap tends to track the relative market price\nof the assets, as shown by Angeris et al [2]. This means it can be used as an approximate\nprice oracle.\nHowever, Uniswap v1 is not safe to use as an on-chain price oracle, because it is very", "metadata": {"page_number": 1025, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7d65767313a1", "text": "of the assets, as shown by Angeris et al [2]. This means it can be used as an approximate\nprice oracle.\nHowever, Uniswap v1 is not safe to use as an on-chain price oracle, because it is very\neasy to manipulate. Suppose some other contract uses the current ETH-DAI price to settle\na derivative. An attacker who wishes to manipulate the measured price can buy ETH from\nthe ETH-DAI pair, trigger settlement on the derivative contract (causing it to settle based\non the in\rated price), and then sell ETH back to the pair to trade it back to the true price.1\nThis might even be done as an atomic transaction, or by a miner who controls the ordering\nof transactions within a block.\nUniswap v2 improves this oracle functionality by measuring and recording the price\nbefore the \frst trade of each block (or equivalently, after the last trade of the previous", "metadata": {"page_number": 1025, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ad8203257041", "text": "of transactions within a block.\nUniswap v2 improves this oracle functionality by measuring and recording the price\nbefore the \frst trade of each block (or equivalently, after the last trade of the previous\n1For a real-world example of how using Uniswap v1 as an oracle can make a contract vulnerable to such\nan attack, see [3].\n2", "metadata": {"page_number": 1025, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "7795ca72a246", "text": "block). This price is more di\u000ecult to manipulate than prices during a block. If the attacker\nsubmits a transaction that attempts to manipulate the price at the end of a block, some\nother arbitrageur may be able to submit another transaction to trade back immediately\nafterward in the same block. A miner (or an attacker who uses enough gas to \fll an entire\nblock) could manipulate the price at the end of a block, but unless they mine the next block\nas well, they may not have a particular advantage in arbitraging the trade back.\nSpeci\fcally, Uniswap v2 accumulates this price, by keeping track of the cumulative sum\nof prices at the beginning of each block in which someone interacts with the contract. Each\nprice is weighted by the amount of time that has passed since the last block in which it was\nupdated, according to the block timestamp.2This means that the accumulator value at any\ngiven time (after being updated) should be the sum of the spot price at each second in the", "metadata": {"page_number": 1026, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0216128ce313", "text": "updated, according to the block timestamp.2This means that the accumulator value at any\ngiven time (after being updated) should be the sum of the spot price at each second in the\nhistory of the contract.\nat=tX\ni=1pi (2)\nTo estimate the time-weighted average price from timet1tot2, an external caller can\ncheckpoint the accumulator's value at t1and then again at t2, subtract the \frst value from\nthe second, and divide by the number of seconds elapsed. (Note that the contract itself does\nnot store historical values for this accumulator|the caller has to call the contract at the\nbeginning of the period to read and store this value.)\npt1;t2=Pt2\ni=t1pi\nt2\u0000t1=Pt2\ni=1pi\u0000Pt1\ni=1pi\nt2\u0000t1=at2\u0000at1", "metadata": {"page_number": 1026, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b2c7aaf0c14", "text": "pt1;t2=Pt2\ni=t1pi\nt2\u0000t1=Pt2\ni=1pi\u0000Pt1\ni=1pi\nt2\u0000t1=at2\u0000at1\nt2\u0000t1(3)\nUsers of the oracle can choose when to start and end this period. Choosing a longer\nperiod makes it more expensive for an attacker to manipulate the TWAP, although it results\nin a less up-to-date price.\nOne complication: should we measure the price of asset A in terms of asset B, or the\nprice of asset B in terms of asset A? While the spot price of A in terms of B is always the\nreciprocal of the spot price of B in terms of A, the mean price of asset A in terms of asset B\nover a particular period of time is notequal to the reciprocal of the mean price of asset B in", "metadata": {"page_number": 1026, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bcb52d8310d6", "text": "reciprocal of the spot price of B in terms of A, the mean price of asset A in terms of asset B\nover a particular period of time is notequal to the reciprocal of the mean price of asset B in\nterms of asset A.3For example, if the USD/ETH price is 100 in block 1 and 300 in block 2,\nthe average USD/ETH price will be 200 USD/ETH, but the average ETH/USD price will\nbe 1/150 ETH/USD. Since the contract cannot know which of the two assets users would\nwant to use as the unit of account, Uniswap v2 tracks both prices.\nAnother complication is that it is possible for someone to send assets to the pair con-\ntract|and thus change its balances and marginal price| without interacting with it, and\nthus without triggering an oracle update. If the contract simply checked its own balances\nand updated the oracle based on the current price, an attacker could manipulate the oracle", "metadata": {"page_number": 1026, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1961200de2e7", "text": "tract|and thus change its balances and marginal price| without interacting with it, and\nthus without triggering an oracle update. If the contract simply checked its own balances\nand updated the oracle based on the current price, an attacker could manipulate the oracle\nby sending an asset to the contract immediately before calling it for the \frst time in a\nblock. If the last trade was in a block whose timestamp was X seconds ago, the contract\nwould incorrectly multiply the new price by X before accumulating it, even though nobody\n2Since miners have some freedom to set the block timestamp, users of the oracle should be aware that\nthese values may not correspond precisely to real-world times.\n3The arithmetic mean price of asset A in terms of asset B over a given period is equal to the reciprocal\nof the harmonic mean price of asset B in terms of asset A over that period. If the contract measured the\ngeometric mean price, then the prices would be the reciprocals of each other. However, the geometric mean", "metadata": {"page_number": 1026, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "667ae0f71331", "text": "of the harmonic mean price of asset B in terms of asset A over that period. If the contract measured the\ngeometric mean price, then the prices would be the reciprocals of each other. However, the geometric mean\nTWAP is less commonly used, and is di\u000ecult to compute on Ethereum.\n3", "metadata": {"page_number": 1026, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "bf80873091f0", "text": "has had an opportunity to trade at that price. To prevent this, the core contract caches\nits reserves after each interaction, and updates the oracle using the price derived from the\ncached reserves rather than the current reserves. In addition to protecting the oracle from\nmanipulation, this change enables the contract re-architecture described below in section\n3.2.\n2.2.1 Precision\nBecause Solidity does not have \frst-class support for non-integer numeric data types,\nthe Uniswap v2 uses a simple binary \fxed point format to encode and manipulate prices.\nSpeci\fcally, prices at a given moment are stored as UQ112.112 numbers, meaning that 112\nfractional bits of precision are speci\fed on either side of the decimal point, with no sign.\nThese numbers have a range of [0, 2112\u00001]4and a precision of1\n2112.\nThe UQ112.112 format was chosen for a pragmatic reason | because these numbers can", "metadata": {"page_number": 1027, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "fb83c252419e", "text": "These numbers have a range of [0, 2112\u00001]4and a precision of1\n2112.\nThe UQ112.112 format was chosen for a pragmatic reason | because these numbers can\nbe stored in a uint224, this leaves 32 bits of a 256 bit storage slot free. It also happens that\nthe reserves, each stored in a uint112, also leave 32 bits free in a (packed) 256 bit storage slot.\nThese free spaces are used for the accumulation process described above. Speci\fcally, the\nreserves are stored alongside the timestamp of the most recent block with at least one trade,\nmodded with 232so that it \fts into 32 bits. Additionally, although the price at any given\nmoment (stored as a UQ112.112 number) is guaranteed to \ft in 224 bits, the accumulation\nof this price over an interval is not. The extra 32 bits on the end of the storage slots for the\naccumulated price of A/B and B/A are used to store over\row bits resulting from repeated", "metadata": {"page_number": 1027, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3aa7f0c25dae", "text": "of this price over an interval is not. The extra 32 bits on the end of the storage slots for the\naccumulated price of A/B and B/A are used to store over\row bits resulting from repeated\nsummations of prices. This design means that the price oracle only adds an additional three\nSSTORE operations (a current cost of about 15,000 gas) to the \frst trade in each block.\nThe primary downside is that 32 bits isn't quite enough to store timestamp values that\nwill reasonably never over\row. In fact, the date when the Unix timestamp over\rows a uint32\nis 02/07/2106. To ensure that this system continues to function properly after this date,\nand every multiple of 232\u00001 seconds thereafter, oracles are simply required to check prices\nat least once per interval (approximately 136 years). This is because the core method of\naccumulation (and modding of timestamp), is actually over\row-safe, meaning that trades", "metadata": {"page_number": 1027, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cadd8d512af7", "text": "at least once per interval (approximately 136 years). This is because the core method of\naccumulation (and modding of timestamp), is actually over\row-safe, meaning that trades\nacross over\row intervals can be appropriately accounted for given that oracles are using the\nproper (simple) over\row arithmetic to compute deltas.\n2.3 Flash Swaps\nIn Uniswap v1, a user purchasing ABC with XYZ needs to send the XYZ to the contract\nbefore they could receive the ABC. This is inconvenient if that user needs the ABC they\nare buying in order to obtain the XYZ they are paying with. For example, the user might\nbe using that ABC to purchase XYZ in some other contract in order to arbitrage a price\ndi\u000berence from Uniswap, or they could be unwinding a position on Maker or Compound by\nselling the collateral to repay Uniswap.", "metadata": {"page_number": 1027, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cfb81bbb1938", "text": "be using that ABC to purchase XYZ in some other contract in order to arbitrage a price\ndi\u000berence from Uniswap, or they could be unwinding a position on Maker or Compound by\nselling the collateral to repay Uniswap.\nUniswap v2 adds a new feature that allows a user to receive and use an asset before paying\nfor it, as long as they make the payment within the same atomic transaction. The swap\nfunction makes a call to an optional user-speci\fed callback contract in between transferring\nout the tokens requested by the user and enforcing the invariant. Once the callback is\ncomplete, the contract checks the new balances and con\frms that the invariant is satis\fed\n4The theoretical upper bound of 2112\u0000(1\n2112) does not apply in this setting, as UQ112.112 numbers in\nUniswap are always generated from the ratio of two uint112s. The largest such ratio is2112\u00001\n1= 2112\u00001.", "metadata": {"page_number": 1027, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "76fa45abe864", "text": "2112) does not apply in this setting, as UQ112.112 numbers in\nUniswap are always generated from the ratio of two uint112s. The largest such ratio is2112\u00001\n1= 2112\u00001.\n4", "metadata": {"page_number": 1027, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4a9ba2b11447", "text": "(after adjusting for fees on the amounts paid in). If the contract does not have su\u000ecient\nfunds, it reverts the entire transaction.\nA user can also repay the Uniswap pool using the same token, rather than completing\nthe swap. This is e\u000bectively the same as letting anyone \rash-borrow any of assets stored in\na Uniswap pool (for the same 0.30% fee as Uniswap charges for trading).5\n2.4 Protocol fee\nUniswap v2 includes a 0.05% protocol fee that can be turned on and o\u000b. If turned on,\nthis fee would be sent to a feeTo address speci\fed in the factory contract.\nInitially, feeTo is not set, and no fee is collected. A pre-speci\fed address| feeToSetter |can\ncall the setFeeTo function on the Uniswap v2 factory contract, setting feeTo to a di\u000berent", "metadata": {"page_number": 1028, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "74af3627d672", "text": "Initially, feeTo is not set, and no fee is collected. A pre-speci\fed address| feeToSetter |can\ncall the setFeeTo function on the Uniswap v2 factory contract, setting feeTo to a di\u000berent\nvalue. feeToSetter can also call the setFeeToSetter to change the feeToSetter address\nitself.\nIf the feeTo address is set, the protocol will begin charging a 5-basis-point fee, which is\ntaken as a1\n6cut of the 30-basis-point fees earned by liquidity providers. That is, traders will\ncontinue to pay a 0.30% fee on all trades; 83. 3% of that fee (0.25% of the amount traded)\nwill go to liquidity providers, and 16. 6% of that fee (0.05% of the amount traded) will go to\nthefeeTo address.\nCollecting this 0.05% fee at the time of the trade would impose an additional gas cost on", "metadata": {"page_number": 1028, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "718f8bdb77a9", "text": "will go to liquidity providers, and 16. 6% of that fee (0.05% of the amount traded) will go to\nthefeeTo address.\nCollecting this 0.05% fee at the time of the trade would impose an additional gas cost on\nevery trade. To avoid this, accumulated fees are collected only when liquidity is deposited\nor withdrawn. The contract computes the accumulated fees, and mints new liquidity tokens\nto the fee bene\fciary, immediately before any tokens are minted or burned.\nThe total collected fees can be computed by measuring the growth inp\nk(that is,px\u0001y)\nsince the last time fees were collected.6This formula gives you the accumulated fees between\nt1andt2as a percentage of the liquidity in the pool at t2:\nf1;2= 1\u0000pk1pk2(4)\nIf the fee was activated before t1, the feeTo address should capture1\n6of fees that were", "metadata": {"page_number": 1028, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "3d9fd7089bd4", "text": "f1;2= 1\u0000pk1pk2(4)\nIf the fee was activated before t1, the feeTo address should capture1\n6of fees that were\naccumulated between t1andt2. Therefore, we want to mint new liquidity tokens to the\nfeeTo address that represent \u001e\u0001f1;2of the pool, where \u001eis1\n6.\nThat is, we want to choose smto satisfy the following relationship, where s1is the total\nquantity of outstanding shares at time t1:\nsm\nsm+s1=\u001e\u0001f1;2 (5)\nAfter some manipulation, including substituting 1 \u0000pk1pk2forf1;2and solving for sm, we\ncan rewrite this as:\nsm=pk2\u0000pk1\n(1\n\u001e\u00001)\u0001pk2+pk1\u0001s1 (6)\nSetting\u001eto1\n6gives us the following formula:", "metadata": {"page_number": 1028, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5b7971f33f99", "text": "can rewrite this as:\nsm=pk2\u0000pk1\n(1\n\u001e\u00001)\u0001pk2+pk1\u0001s1 (6)\nSetting\u001eto1\n6gives us the following formula:\n5Because Uniswap charges fees on input amounts, the fee relative to the withdrawn amount is actually\nslightly higher:1\n1\u00000:003\u00001 =3\n997\u00190:3009203%.\n6We can use this invariant, which does not account for liquidity tokens that were minted or burned,\nbecause we know that fees are collected every time liquidity is deposited or withdrawn.\n5", "metadata": {"page_number": 1028, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "c62de3d5f193", "text": "sm=pk2\u0000pk1\n5\u0001pk2+pk1\u0001s1 (7)\nSuppose the initial depositor puts 100 DAI and 1 ETH into a pair, receiving 10 shares.\nSome time later (without any other depositor having participated in that pair), they attempt\nto withdraw it, at a time when the pair has 96 DAI and 1.5 ETH. Plugging those values\ninto the above formula gives us the following:\nsm=p\n1:5\u000196\u0000p\n1\u0001100\n5\u0001p\n1:5\u000196 +p\n1\u0001100\u000110\u00190:0286 (8)\n2.5 Meta transactions for pool shares\nPool shares minted by Uniswap v2 pairs natively support meta transactions. This means\nusers can authorize a transfer of their pool shares with a signature7, rather than an on-chain\ntransaction from their address. Anyone can submit this signature on the user's behalf by", "metadata": {"page_number": 1029, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33f8dfe0e02e", "text": "users can authorize a transfer of their pool shares with a signature7, rather than an on-chain\ntransaction from their address. Anyone can submit this signature on the user's behalf by\ncalling the permit function, paying gas fees and possibly performing other actions in the\nsame transaction.\n3 Other changes\n3.1 Solidity\nUniswap v1 is implemented in Vyper, a Python-like smart contract language. Uniswap v2\nis implemented in the more widely-used Solidity, since it requires some capabilities that were\nnot yet available in Vyper (such as the ability to interpret the return values of non-standard\nERC-20 tokens, as well as access to new opcodes such as chainid via inline assembly) at\nthe time it was being developed.\n3.2 Contract re-architecture\nOne design priority for Uniswap v2 is to minimize the surface area and complexity of", "metadata": {"page_number": 1029, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "b2cc07df380e", "text": "the time it was being developed.\n3.2 Contract re-architecture\nOne design priority for Uniswap v2 is to minimize the surface area and complexity of\nthe core pair contract|the contract that stores liquidity providers' assets. Any bugs in this\ncontract could be disastrous, since millions of dollars of liquidity might be stolen or frozen.\nWhen evaluating the security of this core contract, the most important question is\nwhether it protects liquidity providers from having their assets stolen or locked. Any feature\nthat is meant to support or protect traders |other than the basic functionality of allowing\none asset in the pool to be swapped for another|can be handled in a \\router\" contract.\nIn fact, even part of the swap functionality can be pulled out into the router contract.\nAs mentioned above, Uniswap v2 stores the last recorded balance of each asset (in order to\nprevent a particular manipulative exploit of the oracle mechanism). The new architecture", "metadata": {"page_number": 1029, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2eeff0128371", "text": "As mentioned above, Uniswap v2 stores the last recorded balance of each asset (in order to\nprevent a particular manipulative exploit of the oracle mechanism). The new architecture\ntakes advantage of this to further simplify the Uniswap v1 contract.\nIn Uniswap v2, the seller sends the asset to the core contract before calling the swap\nfunction. Then, the contract measures how much of the asset it has received, by comparing\nthe last recorded balance to its current balance. This means the core contract is agnostic\n7The signed message conforms to the EIP-712 standard, the same one used by meta transactions for\ntokens like CHAI and DAI.\n6", "metadata": {"page_number": 1029, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ddc2f11cf8e4", "text": "to the way in which the trader transfers the asset. Instead of transferFrom, it could be a\nmeta transaction, or any other future mechanism for authorizing the transfer of ERC-20s.\n3.2.1 Adjustment for fee\nUniswap v1's trading fee is applied by reducing the amount paid into the contract by\n0.3% before enforcing the constant-product invariant. The contract implicitly enforces the\nfollowing formula:\n(x1\u00000:003\u0001xin))\u0001y1>=x0\u0001y0 (9)\nWith \rash swaps, Uniswap v2 introduces the possibility that xinandyinmight both\nbe non-zero (when a user wants to pay the pair back using the same asset, rather than\nswapping). To handle such cases while properly applying fees, the contract is written to\nenforce the following invariant:8\n(x1\u00000:003\u0001xin)\u0001(y1\u00000:003\u0001yin)>=x0\u0001y0 (10)", "metadata": {"page_number": 1030, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "0905f0d3c006", "text": "swapping). To handle such cases while properly applying fees, the contract is written to\nenforce the following invariant:8\n(x1\u00000:003\u0001xin)\u0001(y1\u00000:003\u0001yin)>=x0\u0001y0 (10)\nTo simplify this calculation on-chain, we can multiply each side of the inequality by\n1,000,000:\n(1000\u0001x1\u00003\u0001xin)\u0001(1000\u0001y1\u00003\u0001yin)>= 1000000\u0001x0\u0001y0 (11)\n3.2.2 sync() and skim()\nTo protect against bespoke token implementations that can update the pair contract's\nbalance, and to more gracefully handle tokens whose total supply can be greater than 2112,\nUniswap v2 has two bail-out functions: sync() andskim() .\nsync() functions as a recovery mechanism in the case that a token asynchronously", "metadata": {"page_number": 1030, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "5e99a1363261", "text": "Uniswap v2 has two bail-out functions: sync() andskim() .\nsync() functions as a recovery mechanism in the case that a token asynchronously\nde\rates the balance of a pair. In this case, trades will receive sub-optimal rates, and if no\nliquidity provider is willing to rectify the situation, the pair is stuck. sync() exists to set\nthe reserves of the contract to the current balances, providing a somewhat graceful recovery\nfrom this situation.\nskim() functions as a recovery mechanism in case enough tokens are sent to an pair to\nover\row the two uint112 storage slots for reserves, which could otherwise cause trades to\nfail. skim() allows a user to withdraw the di\u000berence between the current balance of the\npair and 2112\u00001 to the caller, if that di\u000berence is greater than 0.\n3.3 Handling non-standard and unusual tokens", "metadata": {"page_number": 1030, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "1fb147463aba", "text": "fail. skim() allows a user to withdraw the di\u000berence between the current balance of the\npair and 2112\u00001 to the caller, if that di\u000berence is greater than 0.\n3.3 Handling non-standard and unusual tokens\nThe ERC-20 standard requires that transfer() and transferFrom() return a boolean in-\ndicating the success or failure of the call [4]. The implementations of one or both of these\nfunctions on some tokens|including popular ones like Tether (USDT) and Binance Coin\n(BNB)|instead have no return value. Uniswap v1 interprets the missing return value of\nthese improperly de\fned functions as false|that is, as an indication that the transfer was\nnot successful|and reverts the transaction, causing the attempted transfer to fail.\n8Note that using the new architecture, xinis not provided by the user; instead, it is calculated by", "metadata": {"page_number": 1030, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "719ba83d76e3", "text": "not successful|and reverts the transaction, causing the attempted transfer to fail.\n8Note that using the new architecture, xinis not provided by the user; instead, it is calculated by\nmeasuring the contract's balance after the callback, x1, and subtracting ( x0-xout) from it. This logic does\nnot distinguish between assets sent into the contract before it is called and assets sent into the contract\nduring the callback. yinis computed in the same way, based on y0,y1, and yout.\n7", "metadata": {"page_number": 1030, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2dc4a81a03d2", "text": "Uniswap v2 handles non-standard implementations di\u000berently. Speci\fcally, if a transfer()\ncall9has no return value, Uniswap v2 interprets it as a success rather than as a failure. This\nchange should not a\u000bect any ERC-20 tokens that conform to the standard (because in those\ntokens, transfer() always has a return value).\nUniswap v1 also makes the assumption that calls to transfer() and transferFrom() cannot\ntrigger a reentrant call to the Uniswap pair contract. This assumption is violated by certain\nERC-20 tokens, including ones that support ERC-777's \\hooks\" [5]. To fully support such\ntokens, Uniswap v2 includes a \\lock\" that directly prevents reentrancy to all public state-\nchanging functions. This also protects against reentrancy from the user-speci\fed callback\nin a \rash swap, as described in section 2.3.", "metadata": {"page_number": 1031, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "33bcd8a43b9d", "text": "changing functions. This also protects against reentrancy from the user-speci\fed callback\nin a \rash swap, as described in section 2.3.\n3.4 Initialization of liquidity token supply\nWhen a new liquidity provider deposits tokens into an existing Uniswap pair, the number\nof liquidity tokens minted is computed based on the existing quantity of tokens:\nsminted =xdeposited\nxstarting\u0001sstarting (12)\nBut what if they are the \frst depositor? In that case, xstarting is 0, so this formula will\nnot work.\nUniswap v1 sets the initial share supply to be equal to the amount of ETH deposited (in\nwei). This was a somewhat reasonable value, because if the initial liquidity was deposited\nat the correct price, then 1 liquidity pool share (which, like ETH, is an 18-decimal token)\nwould be worth approximately 2 ETH.", "metadata": {"page_number": 1031, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2c4481e50297", "text": "wei). This was a somewhat reasonable value, because if the initial liquidity was deposited\nat the correct price, then 1 liquidity pool share (which, like ETH, is an 18-decimal token)\nwould be worth approximately 2 ETH.\nHowever, this meant that the value of a liquidity pool share was dependent on the ratio\nat which liquidity was initially deposited, which was fairly arbitrary, especially since there\nwas no guarantee that that ratio re\rected the true price. Additionally, Uniswap v2 supports\narbitrary pairs, so many pairs will not include ETH at all.\nInstead, Uniswap v2 initially mints shares equal to the geometric mean of the amounts\ndeposited:\nsminted =pxdeposited\u0001ydeposited (13)\nThis formula ensures that the value of a liquidity pool share at any time is essentially\nindependent of the ratio at which liquidity was initially deposited. For example, suppose", "metadata": {"page_number": 1031, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "db1bcadab86c", "text": "sminted =pxdeposited\u0001ydeposited (13)\nThis formula ensures that the value of a liquidity pool share at any time is essentially\nindependent of the ratio at which liquidity was initially deposited. For example, suppose\nthat the price of 1 ABC is currently 100 XYZ. If the initial deposit had been 2 ABC and\n200 XYZ (a ratio of 1:100), the depositor would have receivedp\n2\u0001200 = 20 shares. Those\nshares should now still be worth 2 ABC and 200 XYZ, plus accumulated fees.\nIf the initial deposit had been 2 ABC and 800 XYZ (a ratio of 1:400), the depositor\nwould have receivedp\n2\u0001800 = 40 pool shares.10\nThe above formula ensures that a liquidity pool share will never be worth less than\nthe geometric mean of the reserves in that pool. However, it is possible for the value of", "metadata": {"page_number": 1031, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "f0c08f8a6927", "text": "would have receivedp\n2\u0001800 = 40 pool shares.10\nThe above formula ensures that a liquidity pool share will never be worth less than\nthe geometric mean of the reserves in that pool. However, it is possible for the value of\n9As described above in section 3.2, Uniswap v2 core does not use transferFrom().\n10This also reduces the likelihood of rounding errors, since the number of bits in the quantity of shares\nwill be approximately the mean of the number of bits in the quantity of asset X in the reserves, and the\nnumber of bits in the quantity of asset Y in the reserves:\nlog2px\u0001y=log2x+ log2y\n2(14)\n8", "metadata": {"page_number": 1031, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "801f9ecb0069", "text": "a liquidity pool share to grow over time, either by accumulating trading fees or through\n\\donations\" to the liquidity pool. In theory, this could result in a situation where the value\nof the minimum quantity of liquidity pool shares (1e-18 pool shares) is worth so much that\nit becomes infeasible for small liquidity providers to provide any liquidity.\nTo mitigate this, Uniswap v2 burns the \frst 1e-15 (0.000000000000001) pool shares that\nare minted (1000 times the minimum quantity of pool shares), sending them to the zero\naddress instead of to the minter. This should be a negligible cost for almost any token\npair.11But it dramatically increases the cost of the above attack. In order to raise the\nvalue of a liquidity pool share to $100, the attacker would need to donate $100,000 to the\npool, which would be permanently locked up as liquidity.\n3.5 Wrapping ETH", "metadata": {"page_number": 1032, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "9f91f528e54d", "text": "value of a liquidity pool share to $100, the attacker would need to donate $100,000 to the\npool, which would be permanently locked up as liquidity.\n3.5 Wrapping ETH\nThe interface for transacting with Ethereum's native asset, ETH, is di\u000berent from the\nstandard interface for interacting with ERC-20 tokens. As a result, many other protocols on\nEthereum do not support ETH, instead using a canonical \"wrapped ETH\" token, WETH\n[6].\nUniswap v1 is an exception. Since every Uniswap v1 pair included ETH as one asset, it\nmade sense to handle ETH directly, which was slightly more gas-e\u000ecient.\nSince Uniswap v2 supports arbitrary ERC-20 pairs, it now no longer makes sense to\nsupport unwrapped ETH. Adding such support would double the size of the core codebase,", "metadata": {"page_number": 1032, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8d7adbdffd7b", "text": "Since Uniswap v2 supports arbitrary ERC-20 pairs, it now no longer makes sense to\nsupport unwrapped ETH. Adding such support would double the size of the core codebase,\nand risks fragmentation of liquidity between ETH and WETH pairs12. Native ETH needs\nto be wrapped into WETH before it can be traded on Uniswap v2.\n3.6 Deterministic pair addresses\nAs in Uniswap v1, all Uniswap v2 pair contracts are instantiated by a single factory\ncontract. In Uniswap v1, these pair contracts were created using the CREATE opcode,\nwhich meant that the address of such a contract depended on the order in which that pair\nwas created. Uniswap v2 uses Ethereum's new CREATE2 opcode [8] to generate a pair\ncontract with a deterministic address. This means that it is possible to calculate a pair's", "metadata": {"page_number": 1032, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "762404d0cd7d", "text": "was created. Uniswap v2 uses Ethereum's new CREATE2 opcode [8] to generate a pair\ncontract with a deterministic address. This means that it is possible to calculate a pair's\naddress (if it exists) o\u000b-chain, without having to look at the chain state.\n3.7 Maximum token balance\nIn order to e\u000eciently implement the oracle mechanism, Uniswap v2 only support reserve\nbalances of up to 2112\u00001. This number is high enough to support 18-decimal-place tokens\nwith a totalSupply over 1 quadrillion.\nIf either reserve balance does go above 2112\u00001, any call to the swap function will begin\nto fail (due to a check in the _update() function). To recover from this situation, any user\ncan call the skim() function to remove excess assets from the liquidity pool.\n11In theory, there are some cases where this burn could be non-negligible, such as pairs between high-value", "metadata": {"page_number": 1032, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2e15f0979265", "text": "can call the skim() function to remove excess assets from the liquidity pool.\n11In theory, there are some cases where this burn could be non-negligible, such as pairs between high-value\nzero-decimal tokens. However, these pairs are a poor \ft for Uniswap anyway, since rounding errors would\nmake trading infeasible.\n12As of this writing, one of the highest-liquidity pairs on Uniswap v1 is the pair between ETH and WETH\n[7].\n9", "metadata": {"page_number": 1032, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "8890a077a4c1", "text": "References\n[1] Hayden Adams. 2018. url:https://hackmd.io/@477aQ9OrQTCbVR3fq1Qzxg/HJ9jLsfTz?\ntype=view .\n[2] Guillermo Angeris et al. An analysis of Uniswap markets . 2019. arXiv: 1911.03380\n[q-fin.TR] .\n[3] samczsun. Taking undercollateralized loans for fun and for pro\ft . Sept. 2019. url:\nhttps : / / samczsun . com / taking - undercollateralized - loans - for - fun - and -\nfor-profit/ .\n[4] Fabian Vogelsteller and Vitalik Buterin. Nov. 2015. url:https://eips.ethereum.\norg/EIPS/eip-20 .", "metadata": {"page_number": 1033, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "ac88bb766d8d", "text": "for-profit/ .\n[4] Fabian Vogelsteller and Vitalik Buterin. Nov. 2015. url:https://eips.ethereum.\norg/EIPS/eip-20 .\n[5] Jordi Baylina Jacques Da\u000fon and Thomas Shababi. EIP 777: ERC777 Token Standard .\nNov. 2017. url:https://eips.ethereum.org/EIPS/eip-777 .\n[6] Radar. WTF is WETH? url:https://weth.io/ .\n[7] Uniswap.info. Wrapped Ether (WETH) .url:https://uniswap.info/token/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2 .", "metadata": {"page_number": 1033, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2d128c7e7d22", "text": "[8] Vitalik Buterin. EIP 1014: Skinny CREATE2 . Apr. 2018. url:https://eips.ethereum.\norg/EIPS/eip-1014 .\n4 Disclaimer\nThis paper is for general information purposes only. It does not constitute investment\nadvice or a recommendation or solicitation to buy or sell any investment and should not\nbe used in the evaluation of the merits of making any investment decision. It should not\nbe relied upon for accounting, legal or tax advice or investment recommendations. This\npaper re\rects current opinions of the authors and is not made on behalf of Paradigm or its\na\u000eliates and does not necessarily re\rect the opinions of Paradigm, its a\u000eliates or individuals\nassociated with Paradigm. The opinions re\rected herein are subject to change without being\nupdated.\n10", "metadata": {"page_number": 1033, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "cff352d24a22", "text": "Skip to main content\nUniswap Unicorn\n Uniswap Unicorn\nUniswap Docs Concepts Contracts SDKs APIs\nGive Feedback Whitepaper GitHub Grants\nSearch\nV3 SDK\nOverview\nGuides\nBackground\nGetting a Quote\nExecuting a Trade\nRouting a Swap\nPooling Liquidity\nTechnical Reference\nOverview\nclasses\nenums\ninterfaces\nAllowedPermitAr guments\nBestT radeOptions\nClaimOptions\nCollectOptions\nCommonAddLiquidityOptions\nFeeOptions\nIncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions", "metadata": {"page_number": 1034, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "4b22558792e6", "text": "IncentiveKey\nIncreaseSpecificOptions\nMethodParameters\nMintSpecificOptions\nNFTPermitOptions\nQuoteOptions\nRemoveLiquidityOptions\nSafeT ransferOptions\nStandardPermitAr guments\nSwapOptions\nTickConstructorAr gs\nTickDataProvider\nWithdrawOptions\nSwap Widget\nweb3-react\nCore SDK\nV2 SDK\nV1 SDK\n\u0000\nV3 SDK\nTechnical Reference\ninterfaces\nWithdrawOptionsHelpful?", "metadata": {"page_number": 1034, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "2929a9b363a0", "text": "On this page\nWithdrawOptions\n@uniswap/v3-sdk  / Exports  / WithdrawOptions\nInterface: WithdrawOptions\nOptions to specify when withdrawing a position.\nTable of contents  \nProperties \ndata\nowner\nProperties  \ndata \n\u2022 Optional  data : string\nSet when withdrawing. data  is passed to safeTransferFrom  when transferring the position from contract back to owner .\nDefined in  \nstaker .ts:66\nowner \n\u2022 owner : string\nSet when withdrawing. The position will be sent to owner  on withdraw .\nDefined in  \nstaker .ts:61\nEdit this page\nHelpful?\nPrevious\nTickDataProvider\nNext\nOverview\nTable of contents\nProperties\nProperties\ndata\nowner", "metadata": {"page_number": 1035, "source": "data/uniswap_docs_pdf_combined.pdf"}}
{"id": "eed93324c347", "text": "Developers\nFeedback\nBug Bounty\n#dev-chat\nWhitepaper\nGithub\nuniswap-v3-core\nuniswap-v3-sdk\nuniswap-v3-periphery\nDeployment addresses\nEcosystem\nHome\nApp\nAnalytics\nToken Lists\nBrand Assets\nCommunity\nGovernance\nDiscord\nTwitter\nBlog", "metadata": {"page_number": 1036, "source": "data/uniswap_docs_pdf_combined.pdf"}}
